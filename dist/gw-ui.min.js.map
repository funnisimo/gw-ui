{"version":3,"file":"gw-ui.min.js","sources":["../js/widget/widget.js","../js/widget/text.js","../js/widget/button.js","../js/widget/input.js","../js/widget/table.js","../js/widget/box.js","../js/widget/dialog.js","../js/flavor.js","../js/sidebar.js","../js/menu.js","../js/widget/list.js","../js/message.js","../js/ui.js","../js/viewport.js"],"sourcesContent":["import * as GWU from 'gw-utils';\nexport class Widget {\n    constructor(id, opts) {\n        this.active = false;\n        this.hovered = false;\n        this.tabStop = false;\n        this.depth = 0;\n        this.fg = 0xfff;\n        this.bg = -1;\n        this.activeFg = 0xfff;\n        this.activeBg = -1;\n        this.hoverFg = 0xfff;\n        this.hoverBg = -1;\n        this.text = '';\n        this.align = 'left';\n        this.valign = 'middle';\n        this.bounds = new GWU.xy.Bounds(-1, -1, -1, -1); // nothing set\n        this.id = id;\n        if (opts)\n            this.init(opts);\n        this.reset();\n    }\n    init(opts) {\n        if (opts.x !== undefined)\n            this.bounds.x = opts.x;\n        if (opts.y !== undefined)\n            this.bounds.y = opts.y;\n        if (opts.width !== undefined)\n            this.bounds.width = opts.width;\n        if (opts.height !== undefined)\n            this.bounds.height = opts.height;\n        if (opts.depth !== undefined)\n            this.depth = opts.depth;\n        if (opts.text) {\n            this.text = opts.text;\n            if (this.bounds.width <= 0)\n                this.bounds.width = opts.text.length;\n            if (this.bounds.height <= 0)\n                this.bounds.height = 1;\n        }\n        if (this.bounds.height <= 0)\n            this.bounds.height = 1;\n        if (opts.fg !== undefined) {\n            this.fg = opts.fg;\n            this.activeFg = opts.fg;\n            this.hoverFg = opts.fg;\n        }\n        if (opts.bg !== undefined) {\n            this.bg = opts.bg;\n            this.activeBg = opts.bg;\n            this.hoverBg = opts.bg;\n        }\n        if (opts.activeFg !== undefined) {\n            this.activeFg = opts.activeFg;\n            this.hoverFg = opts.activeFg;\n        }\n        if (opts.activeBg !== undefined) {\n            this.activeBg = opts.activeBg;\n            this.hoverBg = opts.activeBg;\n        }\n        if (opts.hoverFg !== undefined)\n            this.hoverFg = opts.hoverFg;\n        if (opts.hoverBg !== undefined)\n            this.hoverBg = opts.hoverBg;\n        if (opts.tabStop !== undefined)\n            this.tabStop = opts.tabStop;\n        this.action = opts.action || this.id;\n    }\n    reset() { }\n    activate(_reverse = false) {\n        this.active = true;\n    }\n    deactivate() {\n        this.active = false;\n    }\n    contains(x, y) {\n        if (arguments.length == 1)\n            return this.bounds.contains(x);\n        return this.bounds.contains(x, y);\n    }\n    // EVENTS\n    // returns true if mouse is over this widget\n    mousemove(e, _dialog) {\n        this.hovered = this.contains(e);\n        return this.hovered;\n    }\n    tick(_e, _dialog) { }\n    // returns true if click is handled by this widget (stopPropagation)\n    click(_e, _dialog) {\n        return false;\n    }\n    // returns true if key is used by widget and you want to stopPropagation\n    keypress(_e, _dialog) {\n        return false;\n    }\n    // returns true if key is used by widget and you want to stopPropagation\n    dir(_e, _dialog) {\n        return false;\n    }\n    // DRAW\n    draw(buffer) {\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        const textLen = GWU.text.length(this.text);\n        if (this.bounds.width > textLen || this.bounds.height > 1) {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', fg, bg);\n        }\n        let x = this.bounds.x;\n        if (this.align == 'center') {\n            x += Math.floor((this.bounds.width - textLen) / 2);\n        }\n        else if (this.align == 'right') {\n            x += this.bounds.width - textLen;\n        }\n        let y = this.bounds.y; // 'top'\n        if (this.bounds.height > 1) {\n            if (this.valign == 'middle') {\n                y += Math.floor(this.bounds.height / 2);\n            }\n            else if (this.valign == 'bottom') {\n                y += this.bounds.height - 1;\n            }\n        }\n        buffer.drawText(x, y, this.text, fg, bg);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Text extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        // if (!opts.text)\n        //     throw new Error(\n        //         'Must have text value in config for Text widget - ' + this.id\n        //     );\n        this.text = opts.text || '';\n        if (opts.wrap) {\n            this.wrap = true;\n            opts.width = opts.wrap;\n            this.lines = GWU.text.splitIntoLines(this.text, \n            // @ts-ignore\n            opts.width);\n        }\n        else {\n            const textLen = GWU.text.length(this.text);\n            opts.width = opts.width || textLen || 10;\n            if (opts.width < textLen) {\n                opts.text = GWU.text.truncate(this.text, opts.width);\n            }\n            this.lines = [this.text];\n        }\n        opts.height = Math.max(this.lines.length, opts.height || 1);\n        super.init(opts);\n    }\n    setText(text) {\n        this.text = text;\n        if (this.wrap) {\n            this.lines = GWU.text.splitIntoLines(this.text, this.bounds.width);\n        }\n        else {\n            const textLen = GWU.text.length(this.text);\n            if (textLen > this.bounds.width) {\n                this.text = GWU.text.truncate(this.text, this.bounds.width);\n            }\n            this.lines = [this.text];\n        }\n    }\n    // TODO - get text() {}, set text(v:string) { // do lines stuff }\n    draw(buffer) {\n        const fg = this.active ? this.activeFg : this.fg;\n        const bg = this.active ? this.activeBg : this.bg;\n        this.lines.forEach((line, i) => {\n            buffer.drawText(this.bounds.x, this.bounds.y + i, line, fg, bg, this.bounds.width);\n        });\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Button extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        if (!opts.text)\n            throw new Error('Must have text value in config for Button widget - ' + this.id);\n        opts.tabStop = GWU.first(opts.tabStop, true); // Can receive input (Enter)\n        super.init(opts);\n    }\n    async click(ev, dialog) {\n        if (!this.contains(ev))\n            return false;\n        await dialog.fireAction(this.action, this);\n        return true;\n    }\n    async keypress(ev, dialog) {\n        if (!ev.key)\n            return false;\n        if (ev.key === 'Enter') {\n            await dialog.fireAction(this.action, this);\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Input extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        this.minLength = opts.minLength || 1;\n        if (!opts.width) {\n            opts.width = Math.max(this.minLength, 10);\n        }\n        opts.tabStop = GWU.first(opts.tabStop, true); // Need to receive input\n        super.init(opts);\n        this.default = opts.default || '';\n        this.errorFg = opts.errorFg || this.fg;\n        this.hint = opts.hint || '';\n        this.hintFg = opts.hintFg || this.errorFg;\n        this.numbersOnly = opts.numbersOnly || false;\n        this.min = GWU.first(opts.min, Number.MIN_SAFE_INTEGER);\n        this.max = GWU.first(opts.max, Number.MAX_SAFE_INTEGER);\n        if (this.bounds.width <= 0) {\n            if (this.hint)\n                this.bounds.width = this.hint.length;\n            if (this.default)\n                this.bounds.width = this.default.length;\n        }\n        if (this.bounds.height <= 0) {\n            this.bounds.height = 1;\n        }\n        this.reset();\n    }\n    reset() {\n        this.text = this.default;\n    }\n    isValid() {\n        if (this.numbersOnly) {\n            const val = Number.parseInt(this.text);\n            if (this.min !== undefined && val < this.min)\n                return false;\n            if (this.max !== undefined && val > this.max)\n                return false;\n            return val > 0;\n        }\n        return this.text.length >= this.minLength;\n    }\n    get value() {\n        if (this.numbersOnly)\n            return Number.parseInt(this.text);\n        return this.text;\n    }\n    keypress(ev, dialog) {\n        const textEntryBounds = this.numbersOnly ? ['0', '9'] : [' ', '~'];\n        if (!ev.key)\n            return false;\n        if (ev.key === 'Enter' && this.isValid()) {\n            const r = dialog.fireAction(this.action, this);\n            if (r)\n                return r.then(() => true);\n            return true;\n        }\n        if (ev.key == 'Delete' || ev.key == 'Backspace') {\n            if (this.text.length) {\n                this.text = GWU.text.spliceRaw(this.text, this.text.length - 1, 1);\n            }\n            return true;\n        }\n        else if (ev.key.length > 1) {\n            // ignore other special keys...\n            return false;\n        }\n        // eat/use all other keys\n        if (ev.key >= textEntryBounds[0] && ev.key <= textEntryBounds[1]) {\n            // allow only permitted input\n            if (this.text.length < this.bounds.width) {\n                this.text += ev.key;\n            }\n        }\n        return true;\n    }\n    draw(buffer) {\n        const x = this.bounds.x;\n        const y = this.bounds.y;\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        buffer.fillRect(x, y, this.bounds.width, 1, ' ', fg, bg);\n        if (!this.text.length && this.hint && this.hint.length) {\n            buffer.drawText(x, y, this.hint, this.hintFg);\n        }\n        else {\n            const color = this.isValid() ? fg : this.errorFg;\n            buffer.drawText(x, y, this.text, color);\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Column {\n    constructor(opts) {\n        this.active = false;\n        this.hovered = false;\n        this.fg = null;\n        this.bg = null;\n        this.activeFg = null;\n        this.activeBg = null;\n        this.hoverFg = null;\n        this.hoverBg = null;\n        this.align = 'left';\n        this.header = '';\n        this.empty = '';\n        this._value = GWU.IDENTITY;\n        // align: Widget.Align = 'left';\n        // valign: Widget.VAlign = 'middle';\n        // hover: HoverType = 'cell';\n        this.x = -1;\n        this.width = -1;\n        this.index = -1;\n        GWU.object.assignOmitting('value', this, opts);\n        if (this.width <= 0) {\n            this.width = this.header.length || 1;\n        }\n        if (typeof opts.value === 'string') {\n            this._value = GWU.text.compile(opts.value);\n        }\n        else {\n            this._value = opts.value || GWU.IDENTITY;\n        }\n        if (opts.align)\n            this.align = opts.align;\n    }\n    value(data, index) {\n        const v = this._value(data, index);\n        return GWU.text.truncate(v, this.width);\n    }\n}\nexport class Table extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.data = null;\n        this.selectedColumn = null;\n        this.selectedIndex = -1;\n    }\n    init(opts) {\n        if (!opts.height)\n            throw new Error('Height is required.');\n        if (!opts.columns || opts.columns.length == 0)\n            throw new Error('Must have at least 1 column.');\n        opts.tabStop = GWU.first(opts.tabStop, true);\n        super.init(opts);\n        this.headers = GWU.first(opts.headers, true);\n        this.letters = GWU.first(opts.letters, true);\n        this.columns = [];\n        this.hoverType = opts.hover || 'row';\n        this.wrapColumns = GWU.first(opts.wrapColumns, opts.wrap, true);\n        this.wrapRows = GWU.first(opts.wrapRows, opts.wrap, true);\n        this.headerFg = opts.headerFg || this.fg;\n        this.headerBg = opts.headerBg || this.bg;\n        let columnWidth = 0;\n        if (opts.letters) {\n            this.columns.push(new Column({\n                width: 2,\n                value: (_data, index) => {\n                    const letter = String.fromCharCode(97 + index);\n                    return letter + ')';\n                },\n            }));\n            columnWidth += 2;\n        }\n        if (opts.columns) {\n            opts.columns.forEach((c) => {\n                const col = new Column(c);\n                this.columns.push(col);\n                columnWidth += col.width;\n            });\n        }\n        this.columns.forEach((c, i) => (c.index = i));\n        // scrolling?  paging?  fixed columns/headers?\n        this.bounds.width =\n            this.bounds.width > 0 ? this.bounds.width : columnWidth;\n    }\n    setData(data) {\n        this.data = data;\n        this.selectedIndex = -1;\n    }\n    selectRow(index) {\n        if (!this.data)\n            return false;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        if (index >= len)\n            return false;\n        if (index < -1)\n            return false;\n        this.selectedIndex = index;\n        return true;\n    }\n    selectNextRow(wrap = true) {\n        if (!this.data)\n            return -1;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        this.selectedIndex = GWU.nextIndex(this.selectedIndex, len, wrap);\n        if (this.selectedIndex > -1 && !this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        return this.selectedIndex;\n    }\n    selectPrevRow(wrap = true) {\n        if (!this.data)\n            return -1;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        this.selectedIndex = GWU.prevIndex(this.selectedIndex, len, wrap);\n        if (this.selectedIndex > -1 && !this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        return this.selectedIndex;\n    }\n    selectNextColumn(wrap = true) {\n        if (!this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        else {\n            let index = GWU.nextIndex(this.selectedColumn.index, this.columns.length, wrap);\n            this.selectedColumn = this.columns[index] || null;\n        }\n        if (this.selectedColumn && this.selectedIndex < 0 && this.data) {\n            this.selectedIndex = 0;\n        }\n        return this.selectedColumn;\n    }\n    selectPrevColumn(wrap = true) {\n        if (!this.selectedColumn) {\n            this.selectedColumn = this.columns[this.columns.length - 1]; // last column\n        }\n        else {\n            let index = GWU.prevIndex(this.selectedColumn.index, this.columns.length, wrap);\n            this.selectedColumn = this.columns[index] || null;\n        }\n        if (this.selectedColumn && this.selectedIndex < 0 && this.data) {\n            this.selectedIndex = 0;\n        }\n        return this.selectedColumn;\n    }\n    get selectedData() {\n        if (!this.data)\n            return null;\n        if (Array.isArray(this.data)) {\n            return this.data[this.selectedIndex] || null;\n        }\n        else {\n            return GWU.list.at(this.data, this.selectedIndex);\n        }\n    }\n    draw(buffer) {\n        const b = this.bounds;\n        buffer.fillRect(b.x, b.y, b.width, b.height, ' ', this.bg, this.bg);\n        let x = b.x;\n        this.columns.forEach((col) => {\n            this.drawColumn(buffer, col, x);\n            x += col.width;\n        });\n    }\n    drawColumn(buffer, column, x) {\n        let y = this.bounds.y;\n        if (column.header) {\n            buffer.fillRect(x, y, column.width, 1, ' ', this.headerFg, this.headerBg);\n            buffer.drawText(x, y, column.header, this.headerFg, this.headerBg, column.width, column.align);\n            ++y;\n        }\n        if (!this.data)\n            return;\n        if (Array.isArray(this.data)) {\n            this.data.forEach((item, index) => {\n                this.drawCell(buffer, column, item, index, x, y);\n                ++y;\n            });\n        }\n        else {\n            GWU.list.forEach(this.data, (item, index) => {\n                this.drawCell(buffer, column, item, index, x, y);\n                ++y;\n            });\n        }\n    }\n    drawCell(buffer, column, data, index, x, y) {\n        if (y > this.bounds.bottom)\n            return;\n        let text = column._value(data, index);\n        if (text.length == 0) {\n            text = column.empty;\n        }\n        // pick color...\n        let fg = this.fg;\n        let bg = this.bg;\n        if (this.hoverType === 'row') {\n            if (index === this.selectedIndex) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        else if (this.hoverType === 'column') {\n            if (column === this.selectedColumn) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        else if (this.hoverType === 'cell') {\n            if (column === this.selectedColumn &&\n                index === this.selectedIndex) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        buffer.fillRect(x, y, column.width, 1, ' ', bg, bg);\n        buffer.drawText(x, y, text, fg, bg, column.width, column.align);\n    }\n    async mousemove(e, dialog) {\n        if (!super.mousemove(e, dialog)) {\n            return false;\n        }\n        const oldColumn = this.selectedColumn;\n        const oldIndex = this.selectedIndex;\n        let x = e.x - this.bounds.x;\n        const column = (this.selectedColumn =\n            this.columns.find((c) => {\n                if (c.width >= x)\n                    return true;\n                x -= c.width;\n                return false;\n            }) || null);\n        let index = -1;\n        if (this.data) {\n            index = e.y - this.bounds.y - (this.headers ? 1 : 0);\n            if (Array.isArray(this.data)) {\n                if (index >= this.data.length)\n                    index = -1;\n            }\n        }\n        this.selectedIndex = index;\n        if (oldColumn !== column || oldIndex !== index) {\n            dialog.fireAction(this.id + '_HOVER', this);\n            dialog.requestRedraw();\n        }\n        return true;\n    }\n    dir(e) {\n        if (!e.dir)\n            return false;\n        if (e.dir[0] > 0) {\n            this.selectNextColumn(this.wrapColumns);\n        }\n        else if (e.dir[0] < 0) {\n            this.selectPrevColumn(this.wrapColumns);\n        }\n        if (e.dir[1] > 0) {\n            this.selectNextRow(this.wrapRows);\n        }\n        else if (e.dir[1] < 0) {\n            this.selectPrevRow(this.wrapRows);\n        }\n        return true;\n    }\n}\nexport function makeTable(id, opts) {\n    return new Table(id, opts);\n}\n","import * as Widget from './widget';\nexport class Box extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, (() => {\n            if (!opts)\n                return opts;\n            if (opts.depth === undefined)\n                opts.depth = -10; // hide behind other widgets\n            if (opts.title)\n                opts.text = opts.title;\n            opts.bg = opts.bg || 'gray';\n            return opts;\n        })());\n    }\n    init(opts) {\n        super.init(opts);\n        this.borderBg = opts.borderBg || null;\n    }\n    // EVENTS\n    // box is completely idle\n    mousemove(_e, _dialog) {\n        return false;\n    }\n    // DRAW\n    draw(buffer) {\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        // Draw dialog\n        if (this.borderBg) {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.borderBg, this.borderBg);\n            buffer.fillRect(this.bounds.x + 1, this.bounds.y + 1, this.bounds.width - 2, this.bounds.height - 2, ' ', bg, bg);\n        }\n        else {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', bg, bg);\n        }\n        if (this.text) {\n            buffer.drawText(this.bounds.x, this.bounds.y, this.text, fg, -1, this.bounds.width, 'center');\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Box from './box';\nexport class Dialog {\n    constructor(ui, id) {\n        // bounds: GWU.xy.Bounds;\n        this.widgets = [];\n        this.eventHandlers = {};\n        this._activeWidget = null;\n        this.result = null;\n        this.done = false;\n        this.timers = {};\n        this.needsRedraw = true;\n        this.ui = ui;\n        this.id = id || 'DIALOG';\n        // this.bounds = new GWU.xy.Bounds(-1, -1, 0, 0);\n        // if (opts) this.init(opts);\n    }\n    init() {\n        // if (opts.id) this.id = opts.id;\n        // if (opts.x !== undefined) this.bounds.x = opts.x;\n        // if (opts.y !== undefined) this.bounds.y = opts.y;\n        // if (opts.height !== undefined) this.bounds.height = opts.height;\n        // if (opts.width !== undefined) this.bounds.width = opts.width;\n        // if (opts.box) {\n        //     let boxOpts: Box.BoxOptions = {\n        //         fg: 'white',\n        //         bg: 'gray',\n        //         borderBg: 'dark_gray',\n        //         width: this.bounds.width,\n        //         height: this.bounds.height,\n        //         x: this.bounds.x,\n        //         y: this.bounds.y,\n        //     };\n        //     if (opts.box !== true) {\n        //         Object.assign(boxOpts, opts.box);\n        //     }\n        //     const box = new Box.Box(this.id + '_BOX', boxOpts);\n        //     this.widgets.push(box);\n        // }\n        // if (opts.widgets) {\n        //     opts.widgets.forEach((w) => this.widgets.push(w));\n        // }\n        this.widgets.sort((a, b) => (a.depth < b.depth ? -1 : 1));\n    }\n    get activeWidget() {\n        return this._activeWidget;\n    }\n    setActiveWidget(w, reverse = false) {\n        if (w === this._activeWidget)\n            return;\n        if (this._activeWidget) {\n            this._activeWidget.deactivate();\n        }\n        this._activeWidget = w;\n        if (this._activeWidget) {\n            this._activeWidget.activate(reverse);\n        }\n    }\n    // contains(e: GWU.xy.XY): boolean {\n    //     return this.bounds.contains(e);\n    // }\n    requestRedraw() {\n        this.needsRedraw = true;\n    }\n    setTimeout(action, time) {\n        this.timers[action] = time;\n    }\n    clearTimeout(action) {\n        delete this.timers[action];\n    }\n    async fireAction(action, widget) {\n        const handler = this.eventHandlers[action];\n        if (handler) {\n            await handler(action, this, widget);\n        }\n    }\n    // Multiple calls result in adding more handlers\n    setEventHandlers(map) {\n        Object.assign(this.eventHandlers, map);\n    }\n    async show() {\n        this.done = false;\n        // reset any temp data...\n        this.widgets.forEach((w) => w.reset());\n        // first tabStop is the starting active Widget\n        this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n        // start dialog\n        const buffer = this.ui.startLayer();\n        // run input loop\n        await this.ui.loop.run({\n            keypress: this.keypress.bind(this),\n            dir: this.dir.bind(this),\n            mousemove: this.mousemove.bind(this),\n            click: this.click.bind(this),\n            tick: this.tick.bind(this),\n            draw: () => {\n                this.draw(buffer);\n                buffer.render();\n            },\n        }, 100);\n        // stop dialog\n        this.ui.finishLayer();\n        return this.result;\n    }\n    close(returnValue) {\n        this.result = returnValue;\n        this.done = true;\n    }\n    widgetAt(x, y) {\n        return (this.widgets.find((w) => w.contains(x, y) && w.depth >= 0) || null);\n    }\n    getWidget(id) {\n        return this.widgets.find((w) => w.id === id) || null;\n    }\n    nextTabstop() {\n        if (!this.activeWidget) {\n            this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n            return !!this.activeWidget;\n        }\n        const next = GWU.arrayNext(this.widgets, this.activeWidget, (w) => w.tabStop);\n        if (next) {\n            this.setActiveWidget(next);\n            return true;\n        }\n        return false;\n    }\n    prevTabstop() {\n        if (!this.activeWidget) {\n            this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n            return !!this.activeWidget;\n        }\n        const prev = GWU.arrayPrev(this.widgets, this.activeWidget, (w) => w.tabStop);\n        if (prev) {\n            this.setActiveWidget(prev, true);\n            return true;\n        }\n        return false;\n    }\n    async tick(e) {\n        const dt = e.dt;\n        let promises = [];\n        Object.entries(this.timers).forEach(([action, time]) => {\n            time -= dt;\n            if (time <= 0) {\n                delete this.timers[action];\n                promises.push(this.fireAction(action, null));\n            }\n            else {\n                this.timers[action] = time;\n            }\n        });\n        for (let w of this.widgets) {\n            promises.push(w.tick(e, this));\n        }\n        if (promises.length) {\n            return Promise.all(promises).then(() => this.done);\n        }\n        return this.done;\n    }\n    // TODO - async - to allow animations or events on mouseover?\n    async mousemove(e) {\n        // this.setActiveWidget(null);\n        await Promise.all(this.widgets.map(async (w) => {\n            await w.mousemove(e, this);\n            if (w.hovered && w.tabStop) {\n                this.setActiveWidget(w);\n            }\n        }));\n        return this.done;\n    }\n    async click(e) {\n        // this.mousemove(e); // make sure activeWidget is set correctly\n        // if (!this.contains(e)) {\n        //     return false;\n        // }\n        const widget = this.widgetAt(e.x, e.y);\n        let fn = null;\n        if (widget) {\n            if (await widget.click(e, this)) {\n                return this.done;\n            }\n            fn = this.eventHandlers[widget.id];\n        }\n        fn = fn || this.eventHandlers[this.id] || this.eventHandlers.click;\n        if (fn) {\n            await fn(e, this, this.activeWidget);\n        }\n        return this.done;\n    }\n    async keypress(e) {\n        if (!e.key)\n            return false;\n        if (this.activeWidget) {\n            if (await this.activeWidget.keypress(e, this)) {\n                return this.done;\n            }\n        }\n        const fn = this.eventHandlers[e.key] ||\n            this.eventHandlers[e.code] ||\n            this.eventHandlers.keypress;\n        if (fn) {\n            if (await fn(e, this, this.activeWidget)) {\n                return this.done;\n            }\n        }\n        if (e.key === 'Tab') {\n            // Next widget\n            this.nextTabstop();\n            return false; // not done\n        }\n        else if (e.key === 'TAB') {\n            // Prev Widget\n            this.prevTabstop();\n            return false; // not done\n        }\n        return this.done;\n    }\n    async dir(e) {\n        if (this.activeWidget) {\n            if (await this.activeWidget.dir(e, this)) {\n                return this.done;\n            }\n        }\n        const fn = this.eventHandlers.dir || this.eventHandlers.keypress;\n        if (fn) {\n            await fn(e, this, this.activeWidget);\n        }\n        return this.done;\n    }\n    draw(buffer, force = false) {\n        if (!this.needsRedraw && !force)\n            return;\n        this.ui.resetLayerBuffer();\n        this.widgets.forEach((w) => w.draw(buffer));\n    }\n}\nexport class DialogBuilder {\n    constructor(ui, width, height) {\n        this.nextY = 0;\n        this.box = null;\n        this.nextY = 1;\n        this.dialog = new Dialog(ui);\n        this.bounds = new GWU.xy.Bounds(-1, -1, width, height);\n    }\n    with(widget, at) {\n        // widget bounds are set relative to the dialog top left,\n        // if we don't get any, help them out\n        // TODO - Get rid of x, y\n        const bounds = this.bounds;\n        if (at) {\n            if (at.right !== undefined) {\n                bounds.width = Math.max(bounds.width, widget.bounds.width + at.right);\n                widget.bounds.right = bounds.width - at.right - 1;\n            }\n            else {\n                widget.bounds.x = at.x || 0;\n                bounds.width = Math.max(bounds.width, widget.bounds.width + widget.bounds.x);\n            }\n            if (at.bottom !== undefined) {\n                bounds.height = Math.max(bounds.height, widget.bounds.height + at.bottom);\n                widget.bounds.bottom = bounds.height - at.bottom - 1;\n            }\n            else {\n                widget.bounds.y = at.y || 0;\n                bounds.height = Math.max(bounds.height, widget.bounds.height + widget.bounds.y);\n            }\n        }\n        else {\n            bounds.width = Math.max(bounds.width, widget.bounds.right);\n            bounds.height = Math.max(bounds.height, widget.bounds.bottom);\n        }\n        this.dialog.widgets.push(widget);\n        this.nextY = Math.max(this.nextY, widget.bounds.bottom + 1);\n        return this;\n    }\n    center() {\n        const size = this.dialog.ui.buffer;\n        const bounds = this.bounds;\n        bounds.x = Math.floor((size.width - bounds.width) / 2);\n        bounds.y = Math.floor((size.height - bounds.height) / 2);\n        return this;\n    }\n    place(x, y) {\n        const bounds = this.bounds;\n        bounds.x = x;\n        bounds.y = y;\n        return this;\n    }\n    addBox(opts) {\n        this.box = opts || {};\n        return this;\n    }\n    done() {\n        if (this.bounds.x < 0)\n            this.bounds.x = 0;\n        if (this.bounds.y < 0)\n            this.bounds.y = 0;\n        if (this.bounds.right > this.dialog.ui.buffer.width)\n            throw new Error('Dialog is off screen!');\n        if (this.bounds.bottom > this.dialog.ui.buffer.height)\n            throw new Error('Dialog is off screen!');\n        if (this.box) {\n            const padX = this.box.padX || this.box.pad || 1;\n            const padY = this.box.padY || this.box.pad || 1;\n            this.box.x = 0;\n            this.box.y = 0;\n            this.box.width = this.bounds.width + 2 * padX;\n            this.box.height = this.bounds.height + 2 * padY;\n            const widget = new Box.Box(this.dialog.id + '_BOX', this.box);\n            this.dialog.widgets.forEach((w) => {\n                w.bounds.x += padX;\n                w.bounds.y += padY;\n            });\n            this.dialog.widgets.unshift(widget);\n        }\n        // lock in locations\n        this.dialog.widgets.forEach((w) => {\n            w.bounds.x += this.bounds.x;\n            w.bounds.y += this.bounds.y;\n        });\n        return this.dialog;\n    }\n}\nexport function buildDialog(ui, width = 0, height = 0) {\n    return new DialogBuilder(ui, width, height);\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nimport * as Widget from './widget';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor extends Widget.Text {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        opts.fg = opts.fg || 'flavorText';\n        opts.bg = opts.bg || 'black';\n        super.init(opts);\n        this.promptFg = GWU.color.from(opts.promptFg || 'flavorPrompt');\n        this.overflow = opts.overflow || false;\n        this.isPrompt = false;\n    }\n    showText(text) {\n        this.text = GWU.text.capitalize(text);\n        const len = GWU.text.length(this.text);\n        if (len > this.bounds.width) {\n            this.lines = GWU.text.splitIntoLines(this.text, this.bounds.width);\n            if (!this.overflow && this.lines.length > this.bounds.height) {\n                if (this.bounds.height == 1) {\n                    this.text = GWU.text.truncate(this.text, this.bounds.width);\n                    this.lines = [this.text];\n                }\n                else {\n                    this.lines.length = this.bounds.height;\n                }\n            }\n        }\n        else {\n            this.lines = [this.text];\n        }\n        this.isPrompt = false;\n    }\n    clear() {\n        this.text = '';\n        this.lines = [''];\n        this.isPrompt = false;\n    }\n    showPrompt(text) {\n        this.showText(text);\n        this.isPrompt = true;\n    }\n    draw(buffer) {\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        super.draw(buffer);\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'you see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'you sense';\n        }\n        else if (isRemembered) {\n            intro = 'you remember';\n        }\n        else if (isMapped) {\n            intro = 'you expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(GWM.flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(GWM.flags.Depth.GROUND) || GWM.tile.tiles.NULL;\n        const surfaceTile = cell.depthTile(GWM.flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(GWM.flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(GWM.flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(GWM.flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('§intro§ §text§.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nimport * as Widget from './widget';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.changed = false;\n        this.sidebarY = -1;\n    }\n    draw(_buffer, _bounds) {\n        return 0;\n    }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    draw(buffer, bounds) {\n        return this.actor.drawStatus(buffer, bounds);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    draw(buffer, bounds) {\n        return this.item.drawStatus(buffer, bounds);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(buffer, bounds) {\n        return this.cell.drawStatus(buffer, bounds);\n    }\n}\nexport class Sidebar extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.subject = null;\n        this.highlight = null;\n    }\n    init(opts) {\n        opts.fg = opts.fg || 'purple';\n        opts.bg = opts.bg || 'black';\n        super.init(opts);\n    }\n    reset() {\n        super.reset();\n        this.lastMap = null;\n        this.lastX = -1;\n        this.lastY = -1;\n    }\n    entryAt(e) {\n        return (this.entries.find((entry) => {\n            return entry.sidebarY <= e.y && entry.sidebarY !== -1;\n        }) || null);\n    }\n    mousemove(e, dialog) {\n        super.mousemove(e, dialog);\n        if (this.contains(e)) {\n            return this.highlightRow(e.y);\n        }\n        return this.clearHighlight();\n    }\n    highlightRow(y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        return this.highlight !== last;\n    }\n    clearHighlight() {\n        const result = !!this.highlight;\n        this.highlight = null;\n        return result;\n    }\n    updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasEntityFlag(GWM.flags.Entity.L_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(GWM.flags.Cell.STABLE_MEMORY)\n                ? 3\n                : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return entry.priority > 2 || !!this.highlight;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    findEntries(map, cx, cy, fov) {\n        if (map === this.lastMap && cx === this.lastX && cy === this.lastY)\n            return;\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (done[x][y])\n                return;\n            if (this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (done[x][y])\n                return;\n            if (this._addItemEntry(i, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n    }\n    update() {\n        if (!this.subject) {\n            throw new Error('Update requires a subject to follow.');\n        }\n        return this.updateFor(this.subject);\n    }\n    updateFor(subject) {\n        return this.updateAt(subject.memory || subject.map, subject.x, subject.y, subject.fov);\n    }\n    updateAt(map, cx, cy, fov) {\n        this.updateCellCache(map);\n        this.findEntries(map, cx, cy, fov);\n        return true;\n    }\n    draw(buffer) {\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        const drawBounds = this.bounds.clone();\n        let currentEntry;\n        for (let i = 0; i < this.entries.length && drawBounds.height > 0; ++i) {\n            currentEntry = this.entries[i];\n            currentEntry.sidebarY = drawBounds.y;\n            let usedLines = currentEntry.draw(buffer, drawBounds);\n            if (this._isDim(currentEntry)) {\n                buffer.mix(this.bg, 50, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            if (usedLines) {\n                ++usedLines; // skip a space\n                drawBounds.y += usedLines;\n                drawBounds.height -= usedLines;\n            }\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class MenuButton {\n    constructor(text) {\n        this.hovered = false;\n        this.x = 999;\n        this.text = text;\n    }\n    get width() {\n        return this.text.length;\n    }\n}\nexport class ActionButton extends MenuButton {\n    constructor(text, action) {\n        super(text);\n        this.action = action;\n    }\n}\nexport class DropDownButton extends MenuButton {\n    constructor(menu, parent, text, buttons) {\n        super(text);\n        this.buttons = [];\n        this.parent = null;\n        this.menu = menu;\n        this.parent = parent;\n        this.text = text;\n        this.bounds = new GWU.xy.Bounds(0, 0, 0, 0);\n        Object.entries(buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n    }\n    addButton(text, config) {\n        // if (this.buttons.length >= this.menu.bounds.height - 1) {\n        //     throw new Error('Too many menu options.');\n        // }\n        let button;\n        if (typeof config === 'string') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this.menu, this, text, config);\n        }\n        this.buttons.push(button);\n        ++this.bounds.height;\n        this.bounds.width = Math.max(this.bounds.width, text.length + 2);\n    }\n    setBounds(buffer, px, py, pw) {\n        // vertical reveal\n        const right = px + pw;\n        const totalWidth = buffer.width;\n        if (this.bounds.width < totalWidth - right) {\n            this.bounds.x = right;\n        }\n        else if (this.bounds.width < px) {\n            this.bounds.x = px - this.bounds.width;\n        }\n        else {\n            throw new Error('Menu does not fit - too wide.');\n        }\n        const totalHeight = buffer.height;\n        if (this.bounds.height <= totalHeight - py) {\n            this.bounds.y = py;\n        }\n        else if (this.bounds.height < totalHeight) {\n            this.bounds.y = totalHeight - this.bounds.height - 1;\n        }\n        else {\n            throw new Error('Menu does not fit - too tall.');\n        }\n        // this.buttons.forEach((b) => {\n        //     if (b instanceof DropDownButton) {\n        //         b.setBounds(buffer);\n        //     }\n        // });\n    }\n    contains(e) {\n        return this.bounds.contains(e);\n    }\n    buttonAt(e) {\n        const index = e.y - this.bounds.y;\n        return this.buttons[index] || null;\n    }\n    draw(buffer) {\n        const width = this.bounds.width;\n        const height = this.bounds.height;\n        const x = this.bounds.x;\n        let y = this.bounds.y;\n        buffer.fillRect(x, y, width, height, 0, 0, this.menu.dropBg);\n        // Now draw the individual buttons...\n        this.buttons.forEach((b) => {\n            buffer.drawText(x + 1, y, b.text, b.hovered ? this.menu.activeFg : this.menu.dropFg, b.hovered ? this.menu.activeBg : this.menu.dropBg);\n            ++y;\n        });\n        if (this.parent) {\n            this.parent.draw(buffer);\n        }\n    }\n}\nexport async function showDropDown(dialog, menu, button) {\n    // Start dialog\n    const ui = dialog.ui;\n    const buffer = ui.startLayer();\n    button.buttons.forEach((b) => (b.hovered = false));\n    // button.buttons[0].hovered = true;\n    let activeButton = button;\n    await ui.loop.run({\n        Escape() {\n            return true;\n        },\n        // TODO - Tab\n        Tab() {\n            menu.activeIndex = (menu.activeIndex + 1) % menu.buttons.length;\n            const button = menu.buttons[menu.activeIndex];\n            if (button) {\n                button.hovered = true;\n            }\n            if (activeButton && button instanceof DropDownButton) {\n                activeButton.hovered = false;\n                activeButton = button;\n            }\n            else {\n                activeButton = null; // done.\n            }\n            dialog.requestRedraw();\n            return !activeButton;\n        },\n        // TODO - TAB\n        TAB() {\n            menu.activeIndex =\n                (menu.buttons.length + menu.activeIndex - 1) %\n                    menu.buttons.length;\n            const button = menu.buttons[menu.activeIndex];\n            if (button) {\n                button.hovered = true;\n            }\n            if (activeButton && button instanceof DropDownButton) {\n                activeButton.hovered = false;\n                activeButton = button;\n            }\n            else {\n                activeButton = null; // done.\n            }\n            dialog.requestRedraw();\n            return !activeButton;\n        },\n        mousemove: (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            let newActive = activeButton;\n            while (newActive && !newActive.contains(e)) {\n                newActive = newActive.parent;\n            }\n            if (newActive) {\n                activeButton = newActive;\n                const selected = activeButton.buttonAt(e);\n                if (selected) {\n                    activeButton.buttons.forEach((b) => {\n                        b.hovered = false;\n                    });\n                    selected.hovered = true;\n                    if (selected instanceof DropDownButton) {\n                        selected.buttons.forEach((b) => {\n                            b.hovered = false;\n                        });\n                        selected.buttons[0].hovered = true;\n                        selected.setBounds(ui.buffer, activeButton.bounds.x, e.y, activeButton.bounds.width);\n                        activeButton = selected;\n                    }\n                }\n            }\n            else {\n                if (menu.contains(e)) {\n                    if (dialog)\n                        dialog.requestRedraw();\n                    const button = menu.getButtonAt(e.x, e.y);\n                    if (button) {\n                        button.hovered = true;\n                        menu.activeIndex = menu.buttons.indexOf(button);\n                    }\n                    if (button instanceof DropDownButton) {\n                        activeButton.hovered = false;\n                        activeButton = button;\n                    }\n                    else {\n                        activeButton = null; // done.\n                    }\n                    if (dialog)\n                        dialog.requestRedraw();\n                }\n            }\n            return !activeButton; // if no active button we are done (should not happen)\n        },\n        click: async (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            if (!activeButton.contains(e)) {\n                menu.clearHighlight();\n                return true; // we are done\n            }\n            const actionButton = activeButton.buttonAt(e);\n            if (!actionButton) {\n                return true; // weird, but we are done.\n            }\n            if (actionButton instanceof ActionButton) {\n                menu.actionButton = actionButton;\n                await dialog.fireAction(actionButton.action, menu);\n                return true;\n            }\n            return false;\n        },\n        dir: async (e) => {\n            if (!activeButton)\n                return true; // should not happen\n            if (!e.dir)\n                return;\n            if (e.dir[1]) {\n                const current = activeButton.buttons.findIndex((b) => b.hovered);\n                if (current < 1 && e.dir[1] < 0) {\n                    activeButton.buttons.forEach((b) => (b.hovered = false));\n                    return true; // close me!\n                }\n                const index = GWU.clamp(current + e.dir[1], 0, activeButton.buttons.length - 1);\n                activeButton.buttons.forEach((b, i) => (b.hovered = i === index));\n                const selected = activeButton.buttons[index];\n                if (selected instanceof DropDownButton) {\n                    selected.buttons.forEach((b) => {\n                        b.hovered = false;\n                    });\n                    selected.buttons[0].hovered = true;\n                    selected.setBounds(ui.buffer, activeButton.bounds.x, e.y, activeButton.bounds.width);\n                    activeButton = selected;\n                }\n            }\n        },\n        draw: () => {\n            if (!activeButton)\n                return;\n            ui.resetLayerBuffer();\n            activeButton.draw(buffer);\n            menu.draw(buffer);\n            buffer.render();\n        },\n    });\n    ui.finishLayer();\n    menu.clearHighlight();\n}\nexport class Menu extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.activeIndex = -1;\n        this.actionButton = null;\n    }\n    init(opts) {\n        opts.fg = GWU.first(opts.fg, 'black');\n        opts.bg = GWU.first(opts.bg, 'light_gray');\n        opts.height = opts.height || 1;\n        opts.tabStop = GWU.first(opts.tabStop, true);\n        super.init(opts);\n        this.dropFg = GWU.color.from(opts.dropFg || this.fg);\n        this.dropBg = GWU.color.from(opts.dropBg || this.bg);\n        this.buttons = [];\n        this.separator = opts.separator || ' | ';\n        this.lead = opts.lead || ' ';\n        Object.entries(opts.buttons).forEach(([text, opts]) => {\n            this._addButton(text, opts);\n        });\n        if (opts.separator) {\n            this.separator = opts.separator;\n        }\n        if (opts.lead !== undefined) {\n            this.lead = opts.lead ? opts.lead : '';\n        }\n    }\n    reset() {\n        super.reset();\n        const onTop = this.bounds.y <= 10;\n        this.buttons.forEach((b) => {\n            if (b instanceof DropDownButton) {\n                if (onTop) {\n                    b.bounds.top = this.bounds.bottom + 1;\n                }\n                else {\n                    b.bounds.bottom = this.bounds.top - 1;\n                }\n            }\n        });\n    }\n    activate(reverse = false) {\n        super.activate(reverse);\n        if (this.activeIndex < 0)\n            this.activeIndex = reverse ? this.buttons.length - 1 : 0;\n    }\n    deactivate() {\n        super.deactivate();\n        this.activeIndex = -1;\n    }\n    mousemove(e, dialog) {\n        // turn off all the hovers\n        this.buttons.forEach((b) => {\n            if (b.hovered) {\n                b.hovered = false;\n            }\n        });\n        if (!super.mousemove(e, dialog))\n            return false;\n        // highlight one of them...\n        if (this.bounds.contains(e)) {\n            let hovered = null;\n            this.buttons.forEach((b) => {\n                b.hovered = false;\n                if (b.x < e.x) {\n                    hovered = b;\n                }\n            });\n            if (hovered) {\n                // @ts-ignore\n                hovered.hovered = true;\n                this.activeIndex = this.buttons.indexOf(hovered);\n            }\n            if (dialog)\n                dialog.requestRedraw();\n            return true; // we handled the message\n        }\n        return false;\n    }\n    clearHighlight() {\n        this.buttons.forEach((b) => {\n            b.hovered = false;\n        });\n    }\n    getButtonAt(x, _y) {\n        return GWU.arrayFindRight(this.buttons, (b) => b.x < x) || null;\n    }\n    async click(e, dialog) {\n        if (this.bounds.contains(e)) {\n            // get active button\n            let activeButton = this.getButtonAt(e.x, e.y);\n            if (!activeButton)\n                return false;\n            this.activeIndex = this.buttons.indexOf(activeButton);\n            if (activeButton instanceof DropDownButton) {\n                await showDropDown(dialog, this, activeButton);\n            }\n            else if (activeButton instanceof ActionButton) {\n                this.actionButton = activeButton;\n                await dialog.fireAction(activeButton.action, this);\n            }\n            return true;\n        }\n        return false;\n    }\n    async keypress(e, dialog) {\n        if (this.active) {\n            if (e.key === 'Tab') {\n                ++this.activeIndex;\n                if (this.activeIndex >= this.buttons.length) {\n                    this.deactivate();\n                    return false; // tabbing away from me, need to process in dialog\n                }\n                return true;\n            }\n            else if (e.key === 'TAB') {\n                --this.activeIndex;\n                if (this.activeIndex < 0) {\n                    this.deactivate();\n                    return false; // shift tabbing away from me, need to process in dialog\n                }\n                return true;\n            }\n            else if (e.key === 'Enter') {\n                const activeButton = this.buttons[this.activeIndex];\n                if (activeButton instanceof DropDownButton) {\n                    await showDropDown(dialog, this, activeButton);\n                }\n                else if (activeButton instanceof ActionButton) {\n                    this.actionButton = activeButton;\n                    await dialog.fireAction(activeButton.action, this);\n                }\n                return true;\n            }\n        }\n        return super.keypress(e, dialog);\n    }\n    _addButton(text, config) {\n        const x = this.buttons.reduce((len, button) => len + button.text.length + this.separator.length, this.lead.length + this.bounds.x);\n        if (x + text.length + this.separator.length > this.bounds.width) {\n            throw new Error('Button makes menu too wide :' + text);\n        }\n        let button;\n        if (typeof config === 'string') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            const dropdown = new DropDownButton(this, null, text, config);\n            dropdown.bounds.x = x - 1; // Hmmm...\n            button = dropdown;\n        }\n        button.x = x;\n        this.buttons.push(button);\n    }\n    draw(buffer) {\n        const bg = this.active ? this.activeBg : this.bg;\n        const fg = this.active ? this.activeFg : this.fg;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, 0, bg, bg);\n        let x = this.bounds.x;\n        const y = this.bounds.y;\n        buffer.drawText(x, y, this.lead, fg);\n        this.buttons.forEach((b, i) => {\n            const hovered = i === this.activeIndex;\n            const color = hovered ? this.hoverFg : fg;\n            const bgColor = hovered ? this.hoverBg : bg;\n            buffer.drawText(b.x, y, b.text, color, bgColor);\n            x = b.x + b.text.length;\n            buffer.drawText(x, y, this.separator, fg);\n        });\n        return true;\n    }\n}\n","import * as Table from './table';\nexport class List extends Table.Table {\n    constructor(id, opts) {\n        super(id, (() => {\n            // @ts-ignore\n            const tableOpts = opts;\n            tableOpts.columns = [opts];\n            tableOpts.headers = opts.header ? true : false;\n            tableOpts.hover = opts.hover === false ? 'none' : 'row';\n            return tableOpts;\n        })());\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Messages extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        opts.x = opts.x || 0;\n        opts.y = opts.y || 0;\n        super.init(opts);\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.length || 40,\n            match: (_x, _y) => {\n                return true;\n            },\n        });\n    }\n    click(e, dialog) {\n        if (!this.contains(e))\n            return false;\n        return this.showArchive(dialog).then(() => true);\n    }\n    draw(buffer) {\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, this.fg);\n            if (confirmed) {\n                buffer.mix(this.bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    async showArchive(dialog) {\n        let reverse, fadePercent = 0;\n        let fastForward;\n        const ui = dialog.ui;\n        // Count the number of lines in the archive.\n        let totalMessageCount = this.cache.length;\n        if (totalMessageCount <= this.bounds.height)\n            return false;\n        const isOnTop = this.bounds.y < 10;\n        const dbuf = ui.startLayer();\n        const fg = GWU.color.from(this.fg);\n        totalMessageCount = Math.min(totalMessageCount, isOnTop ? dbuf.height - this.bounds.top : this.bounds.bottom + 1);\n        // Pull-down/pull-up animation:\n        for (reverse = 0; reverse <= 1; reverse++) {\n            fastForward = false;\n            const dM = reverse ? -1 : 1;\n            const startM = reverse ? totalMessageCount : this.bounds.height;\n            const endM = reverse\n                ? this.bounds.height + dM + 1\n                : totalMessageCount + dM;\n            // console.log(\n            //     `setting up draw - startM=${startM}, endM=${endM}, dM=${dM}`\n            // );\n            for (let currentM = startM; currentM != endM; currentM += dM) {\n                const startY = isOnTop\n                    ? this.bounds.y + currentM - 1\n                    : this.bounds.bottom - currentM + 1;\n                const endY = isOnTop ? this.bounds.y : this.bounds.bottom;\n                const dy = isOnTop ? -1 : 1;\n                ui.resetLayerBuffer();\n                // console.log(\n                //     `draw archive - count=${i}, startY=${startY}, endY=${endY}, dy=${dy}`\n                // );\n                dbuf.fillRect(this.bounds.x, Math.min(startY, endY), this.bounds.width, currentM, ' ', this.bg, this.bg);\n                this.cache.forEach((line, _confirmed, j) => {\n                    const y = startY + j * dy;\n                    if (isOnTop) {\n                        if (y < endY)\n                            return;\n                    }\n                    else if (y > endY)\n                        return;\n                    fadePercent = Math.floor((50 * j) / currentM);\n                    const fgColor = fg.clone().mix(this.bg, fadePercent);\n                    dbuf.drawText(this.bounds.x, y, line, fgColor, this.bg);\n                });\n                dbuf.render();\n                if (!fastForward) {\n                    if (await ui.loop.pause(reverse ? 15 : 45)) {\n                        fastForward = true;\n                        currentM = endM - 2 * dM; // skip to the end-1\n                    }\n                }\n            }\n            if (!reverse) {\n                const y = isOnTop ? 0 : dbuf.height - 1;\n                const x = this.bounds.x > 8\n                    ? this.bounds.x - 8 // to left of box\n                    : Math.min(this.bounds.x + this.bounds.width, // just to right of box\n                    dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                    );\n                dbuf.wrapText(x, y, 8, '--DONE--', this.bg, this.fg);\n                dbuf.render();\n                await ui.loop.waitForAck();\n            }\n        }\n        ui.finishLayer();\n        this.cache.confirmAll();\n        dialog.requestRedraw(); // everything is confirmed\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class UI {\n    constructor(opts = {}) {\n        this.layers = [];\n        this.freeBuffers = [];\n        this.inDialog = false;\n        if (!opts.canvas)\n            throw new Error('Need a canvas.');\n        this.canvas = opts.canvas;\n        this.buffer = opts.canvas.buffer;\n        this.loop = opts.loop || GWU.loop;\n    }\n    render() {\n        this.buffer.render();\n    }\n    get baseBuffer() {\n        return this.layers[this.layers.length - 1] || this.canvas.buffer;\n    }\n    get canvasBuffer() {\n        return this.canvas.buffer;\n    }\n    startLayer() {\n        this.inDialog = true;\n        const base = this.buffer || this.canvas.buffer;\n        this.layers.push(base);\n        this.buffer = this.freeBuffers.pop() || this.canvas.buffer.clone();\n        // UI_OVERLAY._data.forEach( (c) => c.opacity = 0 );\n        this.buffer.copy(base);\n        this.buffer.changed = false;\n        return this.buffer;\n    }\n    resetLayerBuffer() {\n        const base = this.baseBuffer;\n        this.buffer.copy(base);\n        this.buffer.changed = false; // So you have to draw something to make the canvas render...\n    }\n    finishLayer() {\n        if (!this.inDialog)\n            return;\n        if (this.buffer !== this.canvas.buffer) {\n            this.freeBuffers.push(this.buffer);\n        }\n        this.buffer = this.layers.pop() || this.canvas.buffer;\n        this.buffer.changed = true;\n        this.buffer.render();\n        this.inDialog = this.layers.length > 0;\n    }\n    // UTILITY FUNCTIONS\n    async fadeTo(color = 'black', duration = 1000) {\n        color = GWU.color.from(color);\n        const buffer = this.startLayer();\n        let pct = 0;\n        let elapsed = 0;\n        while (elapsed < duration) {\n            elapsed += 32;\n            if (await this.loop.pause(32)) {\n                elapsed = duration;\n            }\n            pct = Math.floor((100 * elapsed) / duration);\n            this.resetLayerBuffer();\n            buffer.mix(color, pct);\n            buffer.render();\n        }\n        this.finishLayer();\n    }\n    async alert(opts, text, args) {\n        if (typeof opts === 'number') {\n            opts = { duration: opts };\n        }\n        if (args) {\n            text = GWU.text.apply(text, args);\n        }\n        const width = opts.width || GWU.text.length(text);\n        opts.box = opts.box || { bg: opts.bg };\n        // opts.box.bg = opts.box.bg || 'gray';\n        const textOpts = {\n            fg: opts.fg,\n            text,\n            x: 0,\n            y: 0,\n            wrap: width,\n        };\n        const textWidget = new Widget.Text('TEXT', textOpts);\n        const height = textWidget.bounds.height;\n        const dlg = Widget.buildDialog(this, width, height)\n            .with(textWidget, { x: 0, y: 0 })\n            .addBox(opts.box)\n            .center()\n            .done();\n        dlg.setEventHandlers({\n            click: () => dlg.close(true),\n            keypress: () => dlg.close(true),\n            TIMEOUT: () => dlg.close(false),\n        });\n        if (!opts.waitForAck) {\n            dlg.setTimeout('TIMEOUT', opts.duration || 3000);\n        }\n        return await dlg.show();\n    }\n    async confirm(...args) {\n        let opts;\n        let text;\n        let textArgs = null;\n        if (args.length <= 2 && typeof args[0] === 'string') {\n            opts = {};\n            text = args[0];\n            textArgs = args[1] || null;\n        }\n        else {\n            opts = args[0];\n            text = args[1];\n            textArgs = args[2] || null;\n        }\n        if (textArgs) {\n            text = GWU.text.apply(text, textArgs);\n        }\n        const width = opts.width ||\n            Math.min(Math.floor(this.buffer.width / 2), GWU.text.length(text));\n        const textOpts = {\n            fg: opts.fg,\n            text,\n            wrap: width,\n        };\n        const textWidget = new Widget.Text('TEXT', textOpts);\n        const height = textWidget.bounds.height + 2;\n        opts.allowCancel = opts.allowCancel !== false;\n        opts.buttons = Object.assign({\n            fg: 'white',\n            activeFg: 'teal',\n            bg: 'dark_gray',\n            activeBg: 'darkest_gray',\n        }, opts.buttons || {});\n        if (typeof opts.ok === 'string') {\n            opts.ok = { text: opts.ok };\n        }\n        if (typeof opts.cancel === 'string') {\n            opts.cancel = { text: opts.cancel };\n        }\n        opts.ok = opts.ok || {};\n        opts.cancel = opts.cancel || {};\n        const okOpts = Object.assign({}, opts.buttons, { text: 'OK' }, opts.ok);\n        const cancelOpts = Object.assign({}, opts.buttons, { text: 'CANCEL' }, opts.cancel);\n        const builder = Widget.buildDialog(this, width, height)\n            .with(textWidget, { x: 0, y: 0 })\n            .with(new Widget.Button('OK', okOpts), { x: 0, bottom: 0 });\n        if (opts.allowCancel) {\n            builder.with(new Widget.Button('CANCEL', cancelOpts), {\n                right: 0,\n                bottom: 0,\n            });\n        }\n        const dlg = builder.center().addBox(opts.box).done();\n        dlg.setEventHandlers({\n            OK() {\n                dlg.close(true);\n            },\n            CANCEL() {\n                dlg.close(false);\n            },\n            Escape() {\n                dlg.close(false);\n            },\n            Enter() {\n                dlg.close(true);\n            },\n        });\n        return await dlg.show();\n    }\n    async showWidget(widget, keymap = {}) {\n        const center = widget.bounds.x < 0 || widget.bounds.y < 0;\n        const place = { x: widget.bounds.x, y: widget.bounds.y };\n        const builder = Widget.buildDialog(this).with(widget, { x: 0, y: 0 });\n        if (center) {\n            builder.center();\n        }\n        else {\n            builder.place(place.x, place.y);\n        }\n        const dlg = builder.done();\n        keymap.Escape =\n            keymap.Escape ||\n                (() => {\n                    dlg.close(false);\n                });\n        dlg.setEventHandlers(keymap);\n        return await dlg.show();\n    }\n    // assumes you are in a dialog and give the buffer for that dialog\n    async getInputAt(x, y, maxLength, opts = {}) {\n        opts.width = maxLength;\n        opts.x = x;\n        opts.y = y;\n        const widget = new Widget.Input('INPUT', opts);\n        return this.showWidget(widget, {\n            INPUT(_e, dlg) {\n                dlg.close(widget.text);\n            },\n            Escape(_e, dlg) {\n                dlg.close('');\n            },\n        });\n    }\n    async inputBox(opts, prompt, args) {\n        if (args) {\n            prompt = GWU.text.apply(prompt, args);\n        }\n        const width = opts.width ||\n            Math.min(Math.floor(this.buffer.width / 2), GWU.text.length(prompt));\n        const promptOpts = {\n            fg: opts.fg,\n            text: prompt,\n            wrap: width,\n        };\n        const promptWidget = new Widget.Text('TEXT', promptOpts);\n        const height = promptWidget.bounds.height +\n            2 + // skip + input\n            2; // skip + ok/cancel\n        opts.allowCancel = opts.allowCancel !== false;\n        opts.buttons = Object.assign({\n            fg: 'white',\n            activeFg: 'teal',\n            bg: 'dark_gray',\n            activeBg: 'darkest_gray',\n        }, opts.buttons || {});\n        if (typeof opts.ok === 'string') {\n            opts.ok = { text: opts.ok };\n        }\n        if (typeof opts.cancel === 'string') {\n            opts.cancel = { text: opts.cancel };\n        }\n        opts.ok = opts.ok || {};\n        opts.cancel = opts.cancel || {};\n        const okOpts = Object.assign({}, opts.buttons, { text: 'OK' }, opts.ok);\n        const cancelOpts = Object.assign({}, opts.buttons, { text: 'CANCEL' }, opts.cancel);\n        opts.input = opts.input || {};\n        opts.input.width = opts.input.width || width;\n        opts.input.bg = opts.input.bg || opts.fg;\n        opts.input.fg = opts.input.fg || opts.bg;\n        const inputWidget = new Widget.Input('INPUT', opts.input || {});\n        const builder = Widget.buildDialog(this, width, height)\n            .with(promptWidget, { x: 0, y: 0 })\n            .with(inputWidget, { bottom: 2, x: 0 })\n            .with(new Widget.Button('OK', okOpts), { bottom: 0, x: 0 })\n            .addBox(opts.box);\n        if (opts.allowCancel) {\n            builder.with(new Widget.Button('CANCEL', cancelOpts), {\n                bottom: 0,\n                right: 0,\n            });\n        }\n        const dlg = builder.center().done();\n        dlg.setEventHandlers({\n            OK() {\n                dlg.close(inputWidget.text);\n            },\n            CANCEL() {\n                dlg.close('');\n            },\n            Escape() {\n                dlg.close('');\n            },\n            INPUT() {\n                dlg.close(inputWidget.text);\n            },\n        });\n        return await dlg.show();\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Viewport extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n    }\n    init(opts) {\n        opts.bg = opts.bg || 'black';\n        opts.x = opts.x || 0;\n        opts.y = opts.y || 0;\n        super.init(opts);\n        this.snap = opts.snap || false;\n        this.center = opts.center || false;\n        this.filter = opts.filter || null;\n        if (opts.lock) {\n            this.lockX = true;\n            this.lockY = true;\n        }\n        else {\n            if (opts.lockX) {\n                this.lockX = true;\n            }\n            if (opts.lockY) {\n                this.lockY = true;\n            }\n        }\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n    }\n    set lock(v) {\n        this.lockX = v;\n        this.lockY = v;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.center = true;\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.center = false;\n        this.snap = false;\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.memory || subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    draw(buffer) {\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return false;\n        }\n        this.updateOffset();\n        const map = this._subject.memory || this._subject.map;\n        const fov = this._subject.fov;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n}\n"],"names":["Widget","constructor","id","opts","this","active","hovered","tabStop","depth","fg","bg","activeFg","activeBg","hoverFg","hoverBg","text","align","valign","bounds","GWU","xy","Bounds","init","reset","undefined","x","y","width","height","length","action","activate","_reverse","deactivate","contains","arguments","mousemove","e","_dialog","tick","_e","click","keypress","dir","draw","buffer","textLen","fillRect","Math","floor","drawText","Text","Widget.Widget","super","wrap","lines","splitIntoLines","truncate","max","setText","forEach","line","i","Button","Error","first","async","ev","dialog","fireAction","key","Input","minLength","default","errorFg","hint","hintFg","numbersOnly","min","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isValid","val","parseInt","value","textEntryBounds","r","then","spliceRaw","color","Column","header","empty","_value","IDENTITY","index","object","assignOmitting","compile","data","v","Table","selectedColumn","selectedIndex","columns","headers","letters","hoverType","hover","wrapColumns","wrapRows","headerFg","headerBg","columnWidth","push","_data","String","fromCharCode","c","col","setData","selectRow","Array","isArray","list","selectNextRow","len","nextIndex","selectPrevRow","prevIndex","selectNextColumn","selectPrevColumn","selectedData","at","b","drawColumn","column","item","drawCell","bottom","oldColumn","oldIndex","find","requestRedraw","Box","title","borderBg","Dialog","ui","widgets","eventHandlers","_activeWidget","result","done","timers","needsRedraw","sort","a","activeWidget","setActiveWidget","w","reverse","setTimeout","time","clearTimeout","widget","handler","setEventHandlers","map","Object","assign","startLayer","loop","run","bind","render","finishLayer","close","returnValue","widgetAt","getWidget","nextTabstop","next","arrayNext","prevTabstop","prev","arrayPrev","dt","promises","entries","Promise","all","fn","code","force","resetLayerBuffer","DialogBuilder","nextY","box","with","right","center","size","place","addBox","padX","pad","padY","Box.Box","unshift","buildDialog","install","EntryBase","dist","priority","changed","sidebarY","_buffer","_bounds","ActorEntry","actor","drawStatus","ItemEntry","CellEntry","cell","MenuButton","ActionButton","DropDownButton","menu","parent","buttons","addButton","config","button","setBounds","px","py","pw","totalWidth","totalHeight","buttonAt","dropBg","dropFg","showDropDown","activeButton","Escape","Tab","activeIndex","TAB","newActive","selected","getButtonAt","indexOf","clearHighlight","actionButton","current","findIndex","clamp","Widget.Text","promptFg","from","overflow","isPrompt","showText","capitalize","clear","showPrompt","getFlavorText","fov","buf","isAnyKindOfVisible","isDirectlyVisible","isRemembered","isRevealed","isMapped","isMagicMapped","intro","hasActor","actorAt","theItem","hasItem","itemAt","standsInTile","hasTileFlag","GWM","flags","Tile","T_STAND_IN_TILE","needObjectArticle","getFlavor","article","groundTile","depthTile","Depth","GROUND","tile","tiles","NULL","surfaceTile","SURFACE","liquidTile","LIQUID","surface","T_BRIDGE","liquid","ground","apply","Table.Table","tableOpts","separator","lead","_addButton","onTop","top","_y","arrayFindRight","reduce","dropdown","bgColor","cache","message","MessageCache","match","_x","showArchive","isOnTop","confirmed","mix","fastForward","fadePercent","totalMessageCount","dbuf","dM","startM","endM","currentM","startY","endY","dy","_confirmed","j","fgColor","clone","pause","wrapText","waitForAck","confirmAll","cellCache","lastX","lastY","lastMap","subject","highlight","entryAt","entry","highlightRow","last","updateCellCache","hasMapFlag","Map","MAP_SIDEBAR_TILES_CHANGED","forRect","info","hasEntityFlag","Entity","L_LIST_IN_SIDEBAR","clearMapFlag","_makeActorEntry","_makeItemEntry","_makeCellEntry","_getPriority","hasCellFlag","Cell","STABLE_MEMORY","_isDim","_addActorEntry","distanceBetween","isPlayer","_addItemEntry","_addCellEntry","findEntries","cx","cy","grid","alloc","eachActor","eachItem","free","update","updateFor","updateAt","memory","drawBounds","currentEntry","usedLines","layers","freeBuffers","inDialog","canvas","baseBuffer","canvasBuffer","base","pop","copy","duration","pct","elapsed","args","textOpts","textWidget","dlg","Widget.buildDialog","TIMEOUT","show","textArgs","allowCancel","ok","cancel","okOpts","cancelOpts","builder","Widget.Button","OK","CANCEL","Enter","keymap","maxLength","Widget.Input","showWidget","INPUT","prompt","promptOpts","promptWidget","input","inputWidget","offsetX","offsetY","_subject","snap","filter","lock","lockX","lockY","halfWidth","halfHeight","toMapX","toMapY","toInnerX","toInnerY","centerOn","showMap","updateOffset","hasXY","left","edgeX","edgeY","thirdW","thirdH","blackOutRect","mixer","sprite","Mixer","mapX","mapY","drawer","drawSprite"],"mappings":"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"}