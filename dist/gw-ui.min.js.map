{"version":3,"file":"gw-ui.min.js","sources":["../js/widget/widget.js","../js/widget/text.js","../js/widget/button.js","../js/widget/input.js","../js/widget/table.js","../js/widget/box.js","../js/widget/dialog.js","../js/flavor.js","../js/sidebar.js","../js/menu.js","../js/html/selector.js","../js/html/style.js","../js/html/widget.js","../js/html/document.js","../js/html/callbacks.js","../js/widget/list.js","../js/message.js","../js/ui.js","../js/viewport.js"],"sourcesContent":["import * as GWU from 'gw-utils';\nexport class Widget {\n    constructor(id, opts) {\n        this.active = false;\n        this.hovered = false;\n        this.tabStop = false;\n        this.depth = 0;\n        this.fg = 0xfff;\n        this.bg = -1;\n        this.activeFg = 0xfff;\n        this.activeBg = -1;\n        this.hoverFg = 0xfff;\n        this.hoverBg = -1;\n        this.text = '';\n        this.align = 'left';\n        this.valign = 'middle';\n        this.bounds = new GWU.xy.Bounds(-1, -1, -1, -1); // nothing set\n        this.id = id;\n        if (opts)\n            this.init(opts);\n        this.reset();\n    }\n    init(opts) {\n        if (opts.x !== undefined)\n            this.bounds.x = opts.x;\n        if (opts.y !== undefined)\n            this.bounds.y = opts.y;\n        if (opts.width !== undefined)\n            this.bounds.width = opts.width;\n        if (opts.height !== undefined)\n            this.bounds.height = opts.height;\n        if (opts.depth !== undefined)\n            this.depth = opts.depth;\n        if (opts.text) {\n            this.text = opts.text;\n            if (this.bounds.width <= 0)\n                this.bounds.width = opts.text.length;\n            if (this.bounds.height <= 0)\n                this.bounds.height = 1;\n        }\n        if (this.bounds.height <= 0)\n            this.bounds.height = 1;\n        if (opts.fg !== undefined) {\n            this.fg = opts.fg;\n            this.activeFg = opts.fg;\n            this.hoverFg = opts.fg;\n        }\n        if (opts.bg !== undefined) {\n            this.bg = opts.bg;\n            this.activeBg = opts.bg;\n            this.hoverBg = opts.bg;\n        }\n        if (opts.activeFg !== undefined) {\n            this.activeFg = opts.activeFg;\n            this.hoverFg = opts.activeFg;\n        }\n        if (opts.activeBg !== undefined) {\n            this.activeBg = opts.activeBg;\n            this.hoverBg = opts.activeBg;\n        }\n        if (opts.hoverFg !== undefined)\n            this.hoverFg = opts.hoverFg;\n        if (opts.hoverBg !== undefined)\n            this.hoverBg = opts.hoverBg;\n        if (opts.tabStop !== undefined)\n            this.tabStop = opts.tabStop;\n        this.action = opts.action || this.id;\n    }\n    reset() { }\n    activate(_reverse = false) {\n        this.active = true;\n    }\n    deactivate() {\n        this.active = false;\n    }\n    contains(x, y) {\n        if (arguments.length == 1)\n            return this.bounds.contains(x);\n        return this.bounds.contains(x, y);\n    }\n    // EVENTS\n    // returns true if mouse is over this widget\n    mousemove(e, _dialog) {\n        this.hovered = this.contains(e);\n        return this.hovered;\n    }\n    tick(_e, _dialog) { }\n    // returns true if click is handled by this widget (stopPropagation)\n    click(_e, _dialog) {\n        return false;\n    }\n    // returns true if key is used by widget and you want to stopPropagation\n    keypress(_e, _dialog) {\n        return false;\n    }\n    // returns true if key is used by widget and you want to stopPropagation\n    dir(_e, _dialog) {\n        return false;\n    }\n    // DRAW\n    draw(buffer) {\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        const textLen = GWU.text.length(this.text);\n        if (this.bounds.width > textLen || this.bounds.height > 1) {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', fg, bg);\n        }\n        let x = this.bounds.x;\n        if (this.align == 'center') {\n            x += Math.floor((this.bounds.width - textLen) / 2);\n        }\n        else if (this.align == 'right') {\n            x += this.bounds.width - textLen;\n        }\n        let y = this.bounds.y; // 'top'\n        if (this.bounds.height > 1) {\n            if (this.valign == 'middle') {\n                y += Math.floor(this.bounds.height / 2);\n            }\n            else if (this.valign == 'bottom') {\n                y += this.bounds.height - 1;\n            }\n        }\n        buffer.drawText(x, y, this.text, fg, bg);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Text extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        // if (!opts.text)\n        //     throw new Error(\n        //         'Must have text value in config for Text widget - ' + this.id\n        //     );\n        this.text = opts.text || '';\n        if (opts.wrap) {\n            this.wrap = true;\n            opts.width = opts.wrap;\n            this.lines = GWU.text.splitIntoLines(this.text, \n            // @ts-ignore\n            opts.width);\n        }\n        else {\n            const textLen = GWU.text.length(this.text);\n            opts.width = opts.width || textLen || 10;\n            if (opts.width < textLen) {\n                opts.text = GWU.text.truncate(this.text, opts.width);\n            }\n            this.lines = [this.text];\n        }\n        opts.height = Math.max(this.lines.length, opts.height || 1);\n        super.init(opts);\n    }\n    setText(text) {\n        this.text = text;\n        if (this.wrap) {\n            this.lines = GWU.text.splitIntoLines(this.text, this.bounds.width);\n        }\n        else {\n            const textLen = GWU.text.length(this.text);\n            if (textLen > this.bounds.width) {\n                this.text = GWU.text.truncate(this.text, this.bounds.width);\n            }\n            this.lines = [this.text];\n        }\n    }\n    // TODO - get text() {}, set text(v:string) { // do lines stuff }\n    draw(buffer) {\n        const fg = this.active ? this.activeFg : this.fg;\n        const bg = this.active ? this.activeBg : this.bg;\n        this.lines.forEach((line, i) => {\n            buffer.drawText(this.bounds.x, this.bounds.y + i, line, fg, bg, this.bounds.width);\n        });\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Button extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        if (!opts.text)\n            throw new Error('Must have text value in config for Button widget - ' + this.id);\n        opts.tabStop = GWU.first(opts.tabStop, true); // Can receive input (Enter)\n        super.init(opts);\n    }\n    async click(ev, dialog) {\n        if (!this.contains(ev))\n            return false;\n        await dialog.fireAction(this.action, this);\n        return true;\n    }\n    async keypress(ev, dialog) {\n        if (!ev.key)\n            return false;\n        if (ev.key === 'Enter') {\n            await dialog.fireAction(this.action, this);\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Input extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        this.minLength = opts.minLength || 1;\n        if (!opts.width) {\n            opts.width = Math.max(this.minLength, 10);\n        }\n        opts.tabStop = GWU.first(opts.tabStop, true); // Need to receive input\n        super.init(opts);\n        this.default = opts.default || '';\n        this.errorFg = opts.errorFg || this.fg;\n        this.hint = opts.hint || '';\n        this.hintFg = opts.hintFg || this.errorFg;\n        this.numbersOnly = opts.numbersOnly || false;\n        this.min = GWU.first(opts.min, Number.MIN_SAFE_INTEGER);\n        this.max = GWU.first(opts.max, Number.MAX_SAFE_INTEGER);\n        if (this.bounds.width <= 0) {\n            if (this.hint)\n                this.bounds.width = this.hint.length;\n            if (this.default)\n                this.bounds.width = this.default.length;\n        }\n        if (this.bounds.height <= 0) {\n            this.bounds.height = 1;\n        }\n        this.reset();\n    }\n    reset() {\n        this.text = this.default;\n    }\n    isValid() {\n        if (this.numbersOnly) {\n            const val = Number.parseInt(this.text);\n            if (this.min !== undefined && val < this.min)\n                return false;\n            if (this.max !== undefined && val > this.max)\n                return false;\n            return val > 0;\n        }\n        return this.text.length >= this.minLength;\n    }\n    get value() {\n        if (this.numbersOnly)\n            return Number.parseInt(this.text);\n        return this.text;\n    }\n    keypress(ev, dialog) {\n        const textEntryBounds = this.numbersOnly ? ['0', '9'] : [' ', '~'];\n        if (!ev.key)\n            return false;\n        if (ev.key === 'Enter' && this.isValid()) {\n            const r = dialog.fireAction(this.action, this);\n            if (r)\n                return r.then(() => true);\n            return true;\n        }\n        if (ev.key == 'Delete' || ev.key == 'Backspace') {\n            if (this.text.length) {\n                this.text = GWU.text.spliceRaw(this.text, this.text.length - 1, 1);\n            }\n            return true;\n        }\n        else if (ev.key.length > 1) {\n            // ignore other special keys...\n            return false;\n        }\n        // eat/use all other keys\n        if (ev.key >= textEntryBounds[0] && ev.key <= textEntryBounds[1]) {\n            // allow only permitted input\n            if (this.text.length < this.bounds.width) {\n                this.text += ev.key;\n            }\n        }\n        return true;\n    }\n    draw(buffer) {\n        const x = this.bounds.x;\n        const y = this.bounds.y;\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        buffer.fillRect(x, y, this.bounds.width, 1, ' ', fg, bg);\n        if (!this.text.length && this.hint && this.hint.length) {\n            buffer.drawText(x, y, this.hint, this.hintFg);\n        }\n        else {\n            const color = this.isValid() ? fg : this.errorFg;\n            buffer.drawText(x, y, this.text, color);\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Column {\n    constructor(opts) {\n        this.active = false;\n        this.hovered = false;\n        this.fg = null;\n        this.bg = null;\n        this.activeFg = null;\n        this.activeBg = null;\n        this.hoverFg = null;\n        this.hoverBg = null;\n        this.align = 'left';\n        this.header = '';\n        this.empty = '';\n        this._value = GWU.IDENTITY;\n        // align: Widget.Align = 'left';\n        // valign: Widget.VAlign = 'middle';\n        // hover: HoverType = 'cell';\n        this.x = -1;\n        this.width = -1;\n        this.index = -1;\n        GWU.object.assignOmitting('value', this, opts);\n        if (this.width <= 0) {\n            this.width = this.header.length || 1;\n        }\n        if (typeof opts.value === 'string') {\n            this._value = GWU.text.compile(opts.value);\n        }\n        else {\n            this._value = opts.value || GWU.IDENTITY;\n        }\n        if (opts.align)\n            this.align = opts.align;\n    }\n    value(data, index) {\n        const v = this._value(data, index);\n        return GWU.text.truncate(v, this.width);\n    }\n}\nexport class Table extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.data = null;\n        this.selectedColumn = null;\n        this.selectedIndex = -1;\n    }\n    init(opts) {\n        if (!opts.height)\n            throw new Error('Height is required.');\n        if (!opts.columns || opts.columns.length == 0)\n            throw new Error('Must have at least 1 column.');\n        opts.tabStop = GWU.first(opts.tabStop, true);\n        super.init(opts);\n        this.headers = GWU.first(opts.headers, true);\n        this.letters = GWU.first(opts.letters, true);\n        this.columns = [];\n        this.hoverType = opts.hover || 'row';\n        this.wrapColumns = GWU.first(opts.wrapColumns, opts.wrap, true);\n        this.wrapRows = GWU.first(opts.wrapRows, opts.wrap, true);\n        this.headerFg = opts.headerFg || this.fg;\n        this.headerBg = opts.headerBg || this.bg;\n        let columnWidth = 0;\n        if (opts.letters) {\n            this.columns.push(new Column({\n                width: 2,\n                value: (_data, index) => {\n                    const letter = String.fromCharCode(97 + index);\n                    return letter + ')';\n                },\n            }));\n            columnWidth += 2;\n        }\n        if (opts.columns) {\n            opts.columns.forEach((c) => {\n                const col = new Column(c);\n                this.columns.push(col);\n                columnWidth += col.width;\n            });\n        }\n        this.columns.forEach((c, i) => (c.index = i));\n        // scrolling?  paging?  fixed columns/headers?\n        this.bounds.width =\n            this.bounds.width > 0 ? this.bounds.width : columnWidth;\n    }\n    setData(data) {\n        this.data = data;\n        this.selectedIndex = -1;\n    }\n    selectRow(index) {\n        if (!this.data)\n            return false;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        if (index >= len)\n            return false;\n        if (index < -1)\n            return false;\n        this.selectedIndex = index;\n        return true;\n    }\n    selectNextRow(wrap = true) {\n        if (!this.data)\n            return -1;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        this.selectedIndex = GWU.nextIndex(this.selectedIndex, len, wrap);\n        if (this.selectedIndex > -1 && !this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        return this.selectedIndex;\n    }\n    selectPrevRow(wrap = true) {\n        if (!this.data)\n            return -1;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        this.selectedIndex = GWU.prevIndex(this.selectedIndex, len, wrap);\n        if (this.selectedIndex > -1 && !this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        return this.selectedIndex;\n    }\n    selectNextColumn(wrap = true) {\n        if (!this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        else {\n            let index = GWU.nextIndex(this.selectedColumn.index, this.columns.length, wrap);\n            this.selectedColumn = this.columns[index] || null;\n        }\n        if (this.selectedColumn && this.selectedIndex < 0 && this.data) {\n            this.selectedIndex = 0;\n        }\n        return this.selectedColumn;\n    }\n    selectPrevColumn(wrap = true) {\n        if (!this.selectedColumn) {\n            this.selectedColumn = this.columns[this.columns.length - 1]; // last column\n        }\n        else {\n            let index = GWU.prevIndex(this.selectedColumn.index, this.columns.length, wrap);\n            this.selectedColumn = this.columns[index] || null;\n        }\n        if (this.selectedColumn && this.selectedIndex < 0 && this.data) {\n            this.selectedIndex = 0;\n        }\n        return this.selectedColumn;\n    }\n    get selectedData() {\n        if (!this.data)\n            return null;\n        if (Array.isArray(this.data)) {\n            return this.data[this.selectedIndex] || null;\n        }\n        else {\n            return GWU.list.at(this.data, this.selectedIndex);\n        }\n    }\n    draw(buffer) {\n        const b = this.bounds;\n        buffer.fillRect(b.x, b.y, b.width, b.height, ' ', this.bg, this.bg);\n        let x = b.x;\n        this.columns.forEach((col) => {\n            this.drawColumn(buffer, col, x);\n            x += col.width;\n        });\n    }\n    drawColumn(buffer, column, x) {\n        let y = this.bounds.y;\n        if (column.header) {\n            buffer.fillRect(x, y, column.width, 1, ' ', this.headerFg, this.headerBg);\n            buffer.drawText(x, y, column.header, this.headerFg, this.headerBg, column.width, column.align);\n            ++y;\n        }\n        if (!this.data)\n            return;\n        if (Array.isArray(this.data)) {\n            this.data.forEach((item, index) => {\n                this.drawCell(buffer, column, item, index, x, y);\n                ++y;\n            });\n        }\n        else {\n            GWU.list.forEach(this.data, (item, index) => {\n                this.drawCell(buffer, column, item, index, x, y);\n                ++y;\n            });\n        }\n    }\n    drawCell(buffer, column, data, index, x, y) {\n        if (y > this.bounds.bottom)\n            return;\n        let text = column._value(data, index);\n        if (text.length == 0) {\n            text = column.empty;\n        }\n        // pick color...\n        let fg = this.fg;\n        let bg = this.bg;\n        if (this.hoverType === 'row') {\n            if (index === this.selectedIndex) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        else if (this.hoverType === 'column') {\n            if (column === this.selectedColumn) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        else if (this.hoverType === 'cell') {\n            if (column === this.selectedColumn &&\n                index === this.selectedIndex) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        buffer.fillRect(x, y, column.width, 1, ' ', bg, bg);\n        buffer.drawText(x, y, text, fg, bg, column.width, column.align);\n    }\n    async mousemove(e, dialog) {\n        if (!super.mousemove(e, dialog)) {\n            return false;\n        }\n        const oldColumn = this.selectedColumn;\n        const oldIndex = this.selectedIndex;\n        let x = e.x - this.bounds.x;\n        const column = (this.selectedColumn =\n            this.columns.find((c) => {\n                if (c.width >= x)\n                    return true;\n                x -= c.width;\n                return false;\n            }) || null);\n        let index = -1;\n        if (this.data) {\n            index = e.y - this.bounds.y - (this.headers ? 1 : 0);\n            if (Array.isArray(this.data)) {\n                if (index >= this.data.length)\n                    index = -1;\n            }\n        }\n        this.selectedIndex = index;\n        if (oldColumn !== column || oldIndex !== index) {\n            dialog.fireAction(this.id + '_HOVER', this);\n            dialog.requestRedraw();\n        }\n        return true;\n    }\n    dir(e) {\n        if (!e.dir)\n            return false;\n        if (e.dir[0] > 0) {\n            this.selectNextColumn(this.wrapColumns);\n        }\n        else if (e.dir[0] < 0) {\n            this.selectPrevColumn(this.wrapColumns);\n        }\n        if (e.dir[1] > 0) {\n            this.selectNextRow(this.wrapRows);\n        }\n        else if (e.dir[1] < 0) {\n            this.selectPrevRow(this.wrapRows);\n        }\n        return true;\n    }\n}\nexport function makeTable(id, opts) {\n    return new Table(id, opts);\n}\n","import * as Widget from './widget';\nexport class Box extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, (() => {\n            if (!opts)\n                return opts;\n            if (opts.depth === undefined)\n                opts.depth = -10; // hide behind other widgets\n            if (opts.title)\n                opts.text = opts.title;\n            opts.bg = opts.bg || 'gray';\n            return opts;\n        })());\n    }\n    init(opts) {\n        super.init(opts);\n        this.borderBg = opts.borderBg || null;\n    }\n    // EVENTS\n    // box is completely idle\n    mousemove(_e, _dialog) {\n        return false;\n    }\n    // DRAW\n    draw(buffer) {\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        // Draw dialog\n        if (this.borderBg) {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.borderBg, this.borderBg);\n            buffer.fillRect(this.bounds.x + 1, this.bounds.y + 1, this.bounds.width - 2, this.bounds.height - 2, ' ', bg, bg);\n        }\n        else {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', bg, bg);\n        }\n        if (this.text) {\n            buffer.drawText(this.bounds.x, this.bounds.y, this.text, fg, -1, this.bounds.width, 'center');\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Box from './box';\nexport class Dialog {\n    constructor(ui, id) {\n        // bounds: GWU.xy.Bounds;\n        this.widgets = [];\n        this.eventHandlers = {};\n        this._activeWidget = null;\n        this.result = null;\n        this.done = false;\n        this.timers = {};\n        this.needsRedraw = true;\n        this.ui = ui;\n        this.id = id || 'DIALOG';\n        // this.bounds = new GWU.xy.Bounds(-1, -1, 0, 0);\n        // if (opts) this.init(opts);\n    }\n    init() {\n        // if (opts.id) this.id = opts.id;\n        // if (opts.x !== undefined) this.bounds.x = opts.x;\n        // if (opts.y !== undefined) this.bounds.y = opts.y;\n        // if (opts.height !== undefined) this.bounds.height = opts.height;\n        // if (opts.width !== undefined) this.bounds.width = opts.width;\n        // if (opts.box) {\n        //     let boxOpts: Box.BoxOptions = {\n        //         fg: 'white',\n        //         bg: 'gray',\n        //         borderBg: 'dark_gray',\n        //         width: this.bounds.width,\n        //         height: this.bounds.height,\n        //         x: this.bounds.x,\n        //         y: this.bounds.y,\n        //     };\n        //     if (opts.box !== true) {\n        //         Object.assign(boxOpts, opts.box);\n        //     }\n        //     const box = new Box.Box(this.id + '_BOX', boxOpts);\n        //     this.widgets.push(box);\n        // }\n        // if (opts.widgets) {\n        //     opts.widgets.forEach((w) => this.widgets.push(w));\n        // }\n        this.widgets.sort((a, b) => (a.depth < b.depth ? -1 : 1));\n    }\n    get activeWidget() {\n        return this._activeWidget;\n    }\n    setActiveWidget(w, reverse = false) {\n        if (w === this._activeWidget)\n            return;\n        if (this._activeWidget) {\n            this._activeWidget.deactivate();\n        }\n        this._activeWidget = w;\n        if (this._activeWidget) {\n            this._activeWidget.activate(reverse);\n        }\n    }\n    // contains(e: GWU.xy.XY): boolean {\n    //     return this.bounds.contains(e);\n    // }\n    requestRedraw() {\n        this.needsRedraw = true;\n    }\n    setTimeout(action, time) {\n        this.timers[action] = time;\n    }\n    clearTimeout(action) {\n        delete this.timers[action];\n    }\n    async fireAction(action, widget) {\n        const handler = this.eventHandlers[action];\n        if (handler) {\n            await handler(action, this, widget);\n        }\n    }\n    // Multiple calls result in adding more handlers\n    setEventHandlers(map) {\n        Object.assign(this.eventHandlers, map);\n    }\n    async show() {\n        this.done = false;\n        // reset any temp data...\n        this.widgets.forEach((w) => w.reset());\n        // first tabStop is the starting active Widget\n        this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n        // start dialog\n        const buffer = this.ui.startLayer();\n        // run input loop\n        await this.ui.loop.run({\n            keypress: this.keypress.bind(this),\n            dir: this.dir.bind(this),\n            mousemove: this.mousemove.bind(this),\n            click: this.click.bind(this),\n            tick: this.tick.bind(this),\n            draw: () => {\n                this.draw(buffer);\n                buffer.render();\n            },\n        }, 100);\n        // stop dialog\n        this.ui.finishLayer();\n        return this.result;\n    }\n    close(returnValue) {\n        this.result = returnValue;\n        this.done = true;\n    }\n    widgetAt(x, y) {\n        return (this.widgets.find((w) => w.contains(x, y) && w.depth >= 0) || null);\n    }\n    getWidget(id) {\n        return this.widgets.find((w) => w.id === id) || null;\n    }\n    nextTabstop() {\n        if (!this.activeWidget) {\n            this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n            return !!this.activeWidget;\n        }\n        const next = GWU.arrayNext(this.widgets, this.activeWidget, (w) => w.tabStop);\n        if (next) {\n            this.setActiveWidget(next);\n            return true;\n        }\n        return false;\n    }\n    prevTabstop() {\n        if (!this.activeWidget) {\n            this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n            return !!this.activeWidget;\n        }\n        const prev = GWU.arrayPrev(this.widgets, this.activeWidget, (w) => w.tabStop);\n        if (prev) {\n            this.setActiveWidget(prev, true);\n            return true;\n        }\n        return false;\n    }\n    async tick(e) {\n        const dt = e.dt;\n        let promises = [];\n        Object.entries(this.timers).forEach(([action, time]) => {\n            time -= dt;\n            if (time <= 0) {\n                delete this.timers[action];\n                promises.push(this.fireAction(action, null));\n            }\n            else {\n                this.timers[action] = time;\n            }\n        });\n        for (let w of this.widgets) {\n            promises.push(w.tick(e, this));\n        }\n        if (promises.length) {\n            return Promise.all(promises).then(() => this.done);\n        }\n        return this.done;\n    }\n    // TODO - async - to allow animations or events on mouseover?\n    async mousemove(e) {\n        // this.setActiveWidget(null);\n        await Promise.all(this.widgets.map(async (w) => {\n            await w.mousemove(e, this);\n            if (w.hovered && w.tabStop) {\n                this.setActiveWidget(w);\n            }\n        }));\n        return this.done;\n    }\n    async click(e) {\n        // this.mousemove(e); // make sure activeWidget is set correctly\n        // if (!this.contains(e)) {\n        //     return false;\n        // }\n        const widget = this.widgetAt(e.x, e.y);\n        let fn = null;\n        if (widget) {\n            if (await widget.click(e, this)) {\n                return this.done;\n            }\n            fn = this.eventHandlers[widget.id];\n        }\n        fn = fn || this.eventHandlers[this.id] || this.eventHandlers.click;\n        if (fn) {\n            await fn(e, this, this.activeWidget);\n        }\n        return this.done;\n    }\n    async keypress(e) {\n        if (!e.key)\n            return false;\n        if (this.activeWidget) {\n            if (await this.activeWidget.keypress(e, this)) {\n                return this.done;\n            }\n        }\n        const fn = this.eventHandlers[e.key] ||\n            this.eventHandlers[e.code] ||\n            this.eventHandlers.keypress;\n        if (fn) {\n            if (await fn(e, this, this.activeWidget)) {\n                return this.done;\n            }\n        }\n        if (e.key === 'Tab') {\n            // Next widget\n            this.nextTabstop();\n            return false; // not done\n        }\n        else if (e.key === 'TAB') {\n            // Prev Widget\n            this.prevTabstop();\n            return false; // not done\n        }\n        return this.done;\n    }\n    async dir(e) {\n        if (this.activeWidget) {\n            if (await this.activeWidget.dir(e, this)) {\n                return this.done;\n            }\n        }\n        const fn = this.eventHandlers.dir || this.eventHandlers.keypress;\n        if (fn) {\n            await fn(e, this, this.activeWidget);\n        }\n        return this.done;\n    }\n    draw(buffer, force = false) {\n        if (!this.needsRedraw && !force)\n            return;\n        this.ui.resetLayerBuffer();\n        this.widgets.forEach((w) => w.draw(buffer));\n    }\n}\nexport class DialogBuilder {\n    constructor(ui, width, height) {\n        this.nextY = 0;\n        this.box = null;\n        this.nextY = 1;\n        this.dialog = new Dialog(ui);\n        this.bounds = new GWU.xy.Bounds(-1, -1, width, height);\n    }\n    with(widget, at) {\n        // widget bounds are set relative to the dialog top left,\n        // if we don't get any, help them out\n        // TODO - Get rid of x, y\n        const bounds = this.bounds;\n        if (at) {\n            if (at.right !== undefined) {\n                bounds.width = Math.max(bounds.width, widget.bounds.width + at.right);\n                widget.bounds.right = bounds.width - at.right - 1;\n            }\n            else {\n                widget.bounds.x = at.x || 0;\n                bounds.width = Math.max(bounds.width, widget.bounds.width + widget.bounds.x);\n            }\n            if (at.bottom !== undefined) {\n                bounds.height = Math.max(bounds.height, widget.bounds.height + at.bottom);\n                widget.bounds.bottom = bounds.height - at.bottom - 1;\n            }\n            else {\n                widget.bounds.y = at.y || 0;\n                bounds.height = Math.max(bounds.height, widget.bounds.height + widget.bounds.y);\n            }\n        }\n        else {\n            bounds.width = Math.max(bounds.width, widget.bounds.right);\n            bounds.height = Math.max(bounds.height, widget.bounds.bottom);\n        }\n        this.dialog.widgets.push(widget);\n        this.nextY = Math.max(this.nextY, widget.bounds.bottom + 1);\n        return this;\n    }\n    center() {\n        const size = this.dialog.ui.buffer;\n        const bounds = this.bounds;\n        bounds.x = Math.floor((size.width - bounds.width) / 2);\n        bounds.y = Math.floor((size.height - bounds.height) / 2);\n        return this;\n    }\n    place(x, y) {\n        const bounds = this.bounds;\n        bounds.x = x;\n        bounds.y = y;\n        return this;\n    }\n    addBox(opts) {\n        this.box = opts || {};\n        return this;\n    }\n    done() {\n        if (this.bounds.x < 0)\n            this.bounds.x = 0;\n        if (this.bounds.y < 0)\n            this.bounds.y = 0;\n        if (this.bounds.right > this.dialog.ui.buffer.width)\n            throw new Error('Dialog is off screen!');\n        if (this.bounds.bottom > this.dialog.ui.buffer.height)\n            throw new Error('Dialog is off screen!');\n        if (this.box) {\n            const padX = this.box.padX || this.box.pad || 1;\n            const padY = this.box.padY || this.box.pad || 1;\n            this.box.x = 0;\n            this.box.y = 0;\n            this.box.width = this.bounds.width + 2 * padX;\n            this.box.height = this.bounds.height + 2 * padY;\n            const widget = new Box.Box(this.dialog.id + '_BOX', this.box);\n            this.dialog.widgets.forEach((w) => {\n                w.bounds.x += padX;\n                w.bounds.y += padY;\n            });\n            this.dialog.widgets.unshift(widget);\n        }\n        // lock in locations\n        this.dialog.widgets.forEach((w) => {\n            w.bounds.x += this.bounds.x;\n            w.bounds.y += this.bounds.y;\n        });\n        return this.dialog;\n    }\n}\nexport function buildDialog(ui, width = 0, height = 0) {\n    return new DialogBuilder(ui, width, height);\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nimport * as Widget from './widget';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor extends Widget.Text {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        opts.fg = opts.fg || 'flavorText';\n        opts.bg = opts.bg || 'black';\n        super.init(opts);\n        this.promptFg = GWU.color.from(opts.promptFg || 'flavorPrompt');\n        this.overflow = opts.overflow || false;\n        this.isPrompt = false;\n    }\n    showText(text) {\n        this.text = GWU.text.capitalize(text);\n        const len = GWU.text.length(this.text);\n        if (len > this.bounds.width) {\n            this.lines = GWU.text.splitIntoLines(this.text, this.bounds.width);\n            if (!this.overflow && this.lines.length > this.bounds.height) {\n                if (this.bounds.height == 1) {\n                    this.text = GWU.text.truncate(this.text, this.bounds.width);\n                    this.lines = [this.text];\n                }\n                else {\n                    this.lines.length = this.bounds.height;\n                }\n            }\n        }\n        else {\n            this.lines = [this.text];\n        }\n        this.isPrompt = false;\n    }\n    clear() {\n        this.text = '';\n        this.lines = [''];\n        this.isPrompt = false;\n    }\n    showPrompt(text) {\n        this.showText(text);\n        this.isPrompt = true;\n    }\n    draw(buffer) {\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        super.draw(buffer);\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'you see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'you sense';\n        }\n        else if (isRemembered) {\n            intro = 'you remember';\n        }\n        else if (isMapped) {\n            intro = 'you expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(GWM.flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(GWM.flags.Depth.GROUND) || GWM.tile.tiles.NULL;\n        const surfaceTile = cell.depthTile(GWM.flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(GWM.flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(GWM.flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(GWM.flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('§intro§ §text§.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nimport * as Widget from './widget';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.changed = false;\n        this.sidebarY = -1;\n    }\n    draw(_buffer, _bounds) {\n        return 0;\n    }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    draw(buffer, bounds) {\n        return this.actor.drawStatus(buffer, bounds);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    draw(buffer, bounds) {\n        return this.item.drawStatus(buffer, bounds);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(buffer, bounds) {\n        return this.cell.drawStatus(buffer, bounds);\n    }\n}\nexport class Sidebar extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.subject = null;\n        this.highlight = null;\n    }\n    init(opts) {\n        opts.fg = opts.fg || 'purple';\n        opts.bg = opts.bg || 'black';\n        super.init(opts);\n    }\n    reset() {\n        super.reset();\n        this.lastMap = null;\n        this.lastX = -1;\n        this.lastY = -1;\n    }\n    entryAt(e) {\n        return (this.entries.find((entry) => {\n            return entry.sidebarY <= e.y && entry.sidebarY !== -1;\n        }) || null);\n    }\n    mousemove(e, dialog) {\n        super.mousemove(e, dialog);\n        if (this.contains(e)) {\n            return this.highlightRow(e.y);\n        }\n        return this.clearHighlight();\n    }\n    highlightRow(y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        return this.highlight !== last;\n    }\n    clearHighlight() {\n        const result = !!this.highlight;\n        this.highlight = null;\n        return result;\n    }\n    updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasEntityFlag(GWM.flags.Entity.L_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(GWM.flags.Cell.STABLE_MEMORY)\n                ? 3\n                : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return entry.priority > 2 || !!this.highlight;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    findEntries(map, cx, cy, fov) {\n        if (map === this.lastMap && cx === this.lastX && cy === this.lastY)\n            return;\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (done[x][y])\n                return;\n            if (this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (done[x][y])\n                return;\n            if (this._addItemEntry(i, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n    }\n    update() {\n        if (!this.subject) {\n            throw new Error('Update requires a subject to follow.');\n        }\n        return this.updateFor(this.subject);\n    }\n    updateFor(subject) {\n        return this.updateAt(subject.memory || subject.map, subject.x, subject.y, subject.fov);\n    }\n    updateAt(map, cx, cy, fov) {\n        this.updateCellCache(map);\n        this.findEntries(map, cx, cy, fov);\n        return true;\n    }\n    draw(buffer) {\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        const drawBounds = this.bounds.clone();\n        let currentEntry;\n        for (let i = 0; i < this.entries.length && drawBounds.height > 0; ++i) {\n            currentEntry = this.entries[i];\n            currentEntry.sidebarY = drawBounds.y;\n            let usedLines = currentEntry.draw(buffer, drawBounds);\n            if (this._isDim(currentEntry)) {\n                buffer.mix(this.bg, 50, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            if (usedLines) {\n                ++usedLines; // skip a space\n                drawBounds.y += usedLines;\n                drawBounds.height -= usedLines;\n            }\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class MenuButton {\n    constructor(text) {\n        this.hovered = false;\n        this.x = 999;\n        this.text = text;\n    }\n    get width() {\n        return this.text.length;\n    }\n}\nexport class ActionButton extends MenuButton {\n    constructor(text, action) {\n        super(text);\n        this.action = action;\n    }\n}\nexport class DropDownButton extends MenuButton {\n    constructor(menu, parent, text, buttons) {\n        super(text);\n        this.buttons = [];\n        this.parent = null;\n        this.menu = menu;\n        this.parent = parent;\n        this.text = text;\n        this.bounds = new GWU.xy.Bounds(0, 0, 0, 0);\n        Object.entries(buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n    }\n    addButton(text, config) {\n        // if (this.buttons.length >= this.menu.bounds.height - 1) {\n        //     throw new Error('Too many menu options.');\n        // }\n        let button;\n        if (typeof config === 'string') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this.menu, this, text, config);\n        }\n        this.buttons.push(button);\n        ++this.bounds.height;\n        this.bounds.width = Math.max(this.bounds.width, text.length + 2);\n    }\n    setBounds(buffer, px, py, pw) {\n        // vertical reveal\n        const right = px + pw;\n        const totalWidth = buffer.width;\n        if (this.bounds.width < totalWidth - right) {\n            this.bounds.x = right;\n        }\n        else if (this.bounds.width < px) {\n            this.bounds.x = px - this.bounds.width;\n        }\n        else {\n            throw new Error('Menu does not fit - too wide.');\n        }\n        const totalHeight = buffer.height;\n        if (this.bounds.height <= totalHeight - py) {\n            this.bounds.y = py;\n        }\n        else if (this.bounds.height < totalHeight) {\n            this.bounds.y = totalHeight - this.bounds.height - 1;\n        }\n        else {\n            throw new Error('Menu does not fit - too tall.');\n        }\n        // this.buttons.forEach((b) => {\n        //     if (b instanceof DropDownButton) {\n        //         b.setBounds(buffer);\n        //     }\n        // });\n    }\n    contains(e) {\n        return this.bounds.contains(e);\n    }\n    buttonAt(e) {\n        const index = e.y - this.bounds.y;\n        return this.buttons[index] || null;\n    }\n    draw(buffer) {\n        const width = this.bounds.width;\n        const height = this.bounds.height;\n        const x = this.bounds.x;\n        let y = this.bounds.y;\n        buffer.fillRect(x, y, width, height, 0, 0, this.menu.dropBg);\n        // Now draw the individual buttons...\n        this.buttons.forEach((b) => {\n            buffer.drawText(x + 1, y, b.text, b.hovered ? this.menu.activeFg : this.menu.dropFg, b.hovered ? this.menu.activeBg : this.menu.dropBg);\n            ++y;\n        });\n        if (this.parent) {\n            this.parent.draw(buffer);\n        }\n    }\n}\nexport async function showDropDown(dialog, menu, button) {\n    // Start dialog\n    const ui = dialog.ui;\n    const buffer = ui.startLayer();\n    button.buttons.forEach((b) => (b.hovered = false));\n    // button.buttons[0].hovered = true;\n    let activeButton = button;\n    await ui.loop.run({\n        Escape() {\n            return true;\n        },\n        // TODO - Tab\n        Tab() {\n            menu.activeIndex = (menu.activeIndex + 1) % menu.buttons.length;\n            const button = menu.buttons[menu.activeIndex];\n            if (button) {\n                button.hovered = true;\n            }\n            if (activeButton && button instanceof DropDownButton) {\n                activeButton.hovered = false;\n                activeButton = button;\n            }\n            else {\n                activeButton = null; // done.\n            }\n            dialog.requestRedraw();\n            return !activeButton;\n        },\n        // TODO - TAB\n        TAB() {\n            menu.activeIndex =\n                (menu.buttons.length + menu.activeIndex - 1) %\n                    menu.buttons.length;\n            const button = menu.buttons[menu.activeIndex];\n            if (button) {\n                button.hovered = true;\n            }\n            if (activeButton && button instanceof DropDownButton) {\n                activeButton.hovered = false;\n                activeButton = button;\n            }\n            else {\n                activeButton = null; // done.\n            }\n            dialog.requestRedraw();\n            return !activeButton;\n        },\n        mousemove: (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            let newActive = activeButton;\n            while (newActive && !newActive.contains(e)) {\n                newActive = newActive.parent;\n            }\n            if (newActive) {\n                activeButton = newActive;\n                const selected = activeButton.buttonAt(e);\n                if (selected) {\n                    activeButton.buttons.forEach((b) => {\n                        b.hovered = false;\n                    });\n                    selected.hovered = true;\n                    if (selected instanceof DropDownButton) {\n                        selected.buttons.forEach((b) => {\n                            b.hovered = false;\n                        });\n                        selected.buttons[0].hovered = true;\n                        selected.setBounds(ui.buffer, activeButton.bounds.x, e.y, activeButton.bounds.width);\n                        activeButton = selected;\n                    }\n                }\n            }\n            else {\n                if (menu.contains(e)) {\n                    if (dialog)\n                        dialog.requestRedraw();\n                    const button = menu.getButtonAt(e.x, e.y);\n                    if (button) {\n                        button.hovered = true;\n                        menu.activeIndex = menu.buttons.indexOf(button);\n                    }\n                    if (button instanceof DropDownButton) {\n                        activeButton.hovered = false;\n                        activeButton = button;\n                    }\n                    else {\n                        activeButton = null; // done.\n                    }\n                    if (dialog)\n                        dialog.requestRedraw();\n                }\n            }\n            return !activeButton; // if no active button we are done (should not happen)\n        },\n        click: async (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            if (!activeButton.contains(e)) {\n                menu.clearHighlight();\n                return true; // we are done\n            }\n            const actionButton = activeButton.buttonAt(e);\n            if (!actionButton) {\n                return true; // weird, but we are done.\n            }\n            if (actionButton instanceof ActionButton) {\n                menu.actionButton = actionButton;\n                await dialog.fireAction(actionButton.action, menu);\n                return true;\n            }\n            return false;\n        },\n        dir: async (e) => {\n            if (!activeButton)\n                return true; // should not happen\n            if (!e.dir)\n                return;\n            if (e.dir[1]) {\n                const current = activeButton.buttons.findIndex((b) => b.hovered);\n                if (current < 1 && e.dir[1] < 0) {\n                    activeButton.buttons.forEach((b) => (b.hovered = false));\n                    return true; // close me!\n                }\n                const index = GWU.clamp(current + e.dir[1], 0, activeButton.buttons.length - 1);\n                activeButton.buttons.forEach((b, i) => (b.hovered = i === index));\n                const selected = activeButton.buttons[index];\n                if (selected instanceof DropDownButton) {\n                    selected.buttons.forEach((b) => {\n                        b.hovered = false;\n                    });\n                    selected.buttons[0].hovered = true;\n                    selected.setBounds(ui.buffer, activeButton.bounds.x, e.y, activeButton.bounds.width);\n                    activeButton = selected;\n                }\n            }\n        },\n        draw: () => {\n            if (!activeButton)\n                return;\n            ui.resetLayerBuffer();\n            activeButton.draw(buffer);\n            menu.draw(buffer);\n            buffer.render();\n        },\n    });\n    ui.finishLayer();\n    menu.clearHighlight();\n}\nexport class Menu extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.activeIndex = -1;\n        this.actionButton = null;\n    }\n    init(opts) {\n        opts.fg = GWU.first(opts.fg, 'black');\n        opts.bg = GWU.first(opts.bg, 'light_gray');\n        opts.height = opts.height || 1;\n        opts.tabStop = GWU.first(opts.tabStop, true);\n        super.init(opts);\n        this.dropFg = GWU.color.from(opts.dropFg || this.fg);\n        this.dropBg = GWU.color.from(opts.dropBg || this.bg);\n        this.buttons = [];\n        this.separator = opts.separator || ' | ';\n        this.lead = opts.lead || ' ';\n        Object.entries(opts.buttons).forEach(([text, opts]) => {\n            this._addButton(text, opts);\n        });\n        if (opts.separator) {\n            this.separator = opts.separator;\n        }\n        if (opts.lead !== undefined) {\n            this.lead = opts.lead ? opts.lead : '';\n        }\n    }\n    reset() {\n        super.reset();\n        const onTop = this.bounds.y <= 10;\n        this.buttons.forEach((b) => {\n            if (b instanceof DropDownButton) {\n                if (onTop) {\n                    b.bounds.top = this.bounds.bottom + 1;\n                }\n                else {\n                    b.bounds.bottom = this.bounds.top - 1;\n                }\n            }\n        });\n    }\n    activate(reverse = false) {\n        super.activate(reverse);\n        if (this.activeIndex < 0)\n            this.activeIndex = reverse ? this.buttons.length - 1 : 0;\n    }\n    deactivate() {\n        super.deactivate();\n        this.activeIndex = -1;\n    }\n    mousemove(e, dialog) {\n        // turn off all the hovers\n        this.buttons.forEach((b) => {\n            if (b.hovered) {\n                b.hovered = false;\n            }\n        });\n        if (!super.mousemove(e, dialog))\n            return false;\n        // highlight one of them...\n        if (this.bounds.contains(e)) {\n            let hovered = null;\n            this.buttons.forEach((b) => {\n                b.hovered = false;\n                if (b.x < e.x) {\n                    hovered = b;\n                }\n            });\n            if (hovered) {\n                // @ts-ignore\n                hovered.hovered = true;\n                this.activeIndex = this.buttons.indexOf(hovered);\n            }\n            if (dialog)\n                dialog.requestRedraw();\n            return true; // we handled the message\n        }\n        return false;\n    }\n    clearHighlight() {\n        this.buttons.forEach((b) => {\n            b.hovered = false;\n        });\n    }\n    getButtonAt(x, _y) {\n        return GWU.arrayFindRight(this.buttons, (b) => b.x < x) || null;\n    }\n    async click(e, dialog) {\n        if (this.bounds.contains(e)) {\n            // get active button\n            let activeButton = this.getButtonAt(e.x, e.y);\n            if (!activeButton)\n                return false;\n            this.activeIndex = this.buttons.indexOf(activeButton);\n            if (activeButton instanceof DropDownButton) {\n                await showDropDown(dialog, this, activeButton);\n            }\n            else if (activeButton instanceof ActionButton) {\n                this.actionButton = activeButton;\n                await dialog.fireAction(activeButton.action, this);\n            }\n            return true;\n        }\n        return false;\n    }\n    async keypress(e, dialog) {\n        if (this.active) {\n            if (e.key === 'Tab') {\n                ++this.activeIndex;\n                if (this.activeIndex >= this.buttons.length) {\n                    this.deactivate();\n                    return false; // tabbing away from me, need to process in dialog\n                }\n                return true;\n            }\n            else if (e.key === 'TAB') {\n                --this.activeIndex;\n                if (this.activeIndex < 0) {\n                    this.deactivate();\n                    return false; // shift tabbing away from me, need to process in dialog\n                }\n                return true;\n            }\n            else if (e.key === 'Enter') {\n                const activeButton = this.buttons[this.activeIndex];\n                if (activeButton instanceof DropDownButton) {\n                    await showDropDown(dialog, this, activeButton);\n                }\n                else if (activeButton instanceof ActionButton) {\n                    this.actionButton = activeButton;\n                    await dialog.fireAction(activeButton.action, this);\n                }\n                return true;\n            }\n        }\n        return super.keypress(e, dialog);\n    }\n    _addButton(text, config) {\n        const x = this.buttons.reduce((len, button) => len + button.text.length + this.separator.length, this.lead.length + this.bounds.x);\n        if (x + text.length + this.separator.length > this.bounds.width) {\n            throw new Error('Button makes menu too wide :' + text);\n        }\n        let button;\n        if (typeof config === 'string') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            const dropdown = new DropDownButton(this, null, text, config);\n            dropdown.bounds.x = x - 1; // Hmmm...\n            button = dropdown;\n        }\n        button.x = x;\n        this.buttons.push(button);\n    }\n    draw(buffer) {\n        const bg = this.active ? this.activeBg : this.bg;\n        const fg = this.active ? this.activeFg : this.fg;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, 0, bg, bg);\n        let x = this.bounds.x;\n        const y = this.bounds.y;\n        buffer.drawText(x, y, this.lead, fg);\n        this.buttons.forEach((b, i) => {\n            const hovered = i === this.activeIndex;\n            const color = hovered ? this.hoverFg : fg;\n            const bgColor = hovered ? this.hoverBg : bg;\n            buffer.drawText(b.x, y, b.text, color, bgColor);\n            x = b.x + b.text.length;\n            buffer.drawText(x, y, this.separator, fg);\n        });\n        return true;\n    }\n}\n","export function isTruthy(v) {\n    if (!v)\n        return false;\n    if (typeof v === 'string') {\n        if (v === 'false' || v === '0')\n            return false;\n    }\n    return true;\n}\nconst MATCH = /^(\\*|\\#\\w+|\\$|\\w+)(\\.(\\w+))?(\\:(\\w+))?$/;\nexport class Selector {\n    constructor(text) {\n        this.tag = '';\n        this.id = '';\n        this.class = '';\n        this.prop = '';\n        this.priority = 0;\n        if (text.startsWith(':') || text.startsWith('.')) {\n            text = '*' + text;\n        }\n        const info = text.match(MATCH);\n        if (!info)\n            throw new Error('Invalid selector - ' + text);\n        this.text = text;\n        if (info[1] === '*') {\n        }\n        else if (info[1] === '$') {\n            this.priority += 10000;\n        }\n        else if (info[1].startsWith('#')) {\n            this.priority += 1000;\n            this.id = info[1].substring(1);\n        }\n        else {\n            this.tag = info[1];\n            this.priority += 10;\n        }\n        if (info[3]) {\n            this.class = info[3];\n            this.priority += 100;\n        }\n        if (info[5]) {\n            this.prop = info[5];\n            this.priority += 1;\n        }\n    }\n    matches(obj) {\n        if (this.tag.length && obj.tag !== this.tag)\n            return false;\n        if (this.id.length && obj.id !== this.id)\n            return false;\n        if (this.class.length && !obj.classes.includes(this.class))\n            return false;\n        if (this.prop.length) {\n            const v = obj.props[this.prop] || false;\n            if (!isTruthy(v))\n                return false;\n        }\n        return true;\n    }\n}\nexport function selector(text) {\n    return new Selector(text);\n}\n","import { Selector } from './selector';\nexport class Style {\n    constructor(selector = '$', init) {\n        this._dirty = false;\n        this.selector = new Selector(selector);\n        if (init) {\n            this.set(init);\n        }\n        this._dirty = false;\n    }\n    get dirty() {\n        return this._dirty;\n    }\n    set dirty(v) {\n        this._dirty = v;\n    }\n    get fg() {\n        return this._fg;\n    }\n    get bg() {\n        return this._bg;\n    }\n    get depth() {\n        return this._depth;\n    }\n    get align() {\n        return this._align;\n    }\n    get valign() {\n        return this._valign;\n    }\n    get position() {\n        return this._position;\n    }\n    get minWidth() {\n        return this._minWidth;\n    }\n    get maxWidth() {\n        return this._maxWidth;\n    }\n    get width() {\n        return this._width;\n    }\n    get minHeight() {\n        return this._minHeight;\n    }\n    get maxHeight() {\n        return this._maxHeight;\n    }\n    get height() {\n        return this._height;\n    }\n    get x() {\n        return this._x;\n    }\n    get left() {\n        return this._left;\n    }\n    get right() {\n        return this._right;\n    }\n    get y() {\n        return this._y;\n    }\n    get top() {\n        return this._top;\n    }\n    get bottom() {\n        return this._bottom;\n    }\n    get padLeft() {\n        return this._padLeft;\n    }\n    get padRight() {\n        return this._padRight;\n    }\n    get padTop() {\n        return this._padTop;\n    }\n    get padBottom() {\n        return this._padBottom;\n    }\n    get(key) {\n        const id = ('_' + key);\n        return this[id];\n    }\n    set(key, value, setDirty = true) {\n        if (typeof key === 'string') {\n            if (key === 'padding') {\n                if (typeof value === 'number') {\n                    value = [value];\n                }\n                else if (typeof value === 'string') {\n                    value = value.split(' ').map((v) => Number.parseInt(v));\n                }\n                if (value.length == 1) {\n                    this._padLeft =\n                        this._padRight =\n                            this._padTop =\n                                this._padBottom =\n                                    value[0];\n                }\n                else if (value.length == 2) {\n                    this._padLeft = this._padRight = value[0];\n                    this._padTop = this._padBottom = value[1];\n                }\n                else if (value.length == 4) {\n                    this._padTop = value[0];\n                    this._padRight = value[1];\n                    this._padBottom = value[2];\n                    this._padLeft = value[3];\n                }\n            }\n            else {\n                const field = '_' + key;\n                this[field] = value;\n            }\n        }\n        else if (key instanceof Style) {\n            setDirty = value || value === undefined ? true : false;\n            Object.entries(key).forEach(([name, value]) => {\n                if (name === 'selector' || name === '_dirty')\n                    return;\n                if (value) {\n                    this[name] = value;\n                }\n                else if (value === null) {\n                    this.unset(name);\n                }\n            });\n        }\n        else {\n            setDirty = value || value === undefined ? true : false;\n            Object.entries(key).forEach(([name, value]) => {\n                if (value === null) {\n                    this.unset(name);\n                }\n                else {\n                    this.set(name, value, setDirty);\n                }\n            });\n        }\n        this.dirty || (this.dirty = setDirty);\n        return this;\n    }\n    unset(key) {\n        const field = key.startsWith('_') ? key : '_' + key;\n        delete this[field];\n        this.dirty = true;\n        return this;\n    }\n    clone() {\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    copy(other) {\n        Object.assign(this, other);\n        return this;\n    }\n}\nexport class ComputedStyle extends Style {\n    // constructor(source: Stylable, sources?: Style[]) {\n    constructor(sources) {\n        super();\n        // obj: Stylable;\n        this.sources = [];\n        // this.obj = source;\n        if (sources) {\n            // sort low to high priority (highest should be this.obj._style, lowest = global default:'*')\n            sources.sort((a, b) => a.selector.priority - b.selector.priority);\n            this.sources = sources;\n        }\n        this.sources.forEach((s) => super.set(s));\n        this._dirty = false; // As far as I know I reflect all of the current source values.\n    }\n    get dirty() {\n        return this._dirty || this.sources.some((s) => s.dirty);\n    }\n    set dirty(v) {\n        this._dirty = v;\n    }\n}\nexport class Sheet {\n    constructor(parentSheet) {\n        this.rules = [];\n        this._dirty = true;\n        if (parentSheet) {\n            this.rules = parentSheet.rules.slice();\n        }\n        else {\n            this.rules.push(new Style('*', {\n                fg: 'white',\n                bg: 'black',\n                align: 'left',\n                valign: 'top',\n                position: 'static',\n            }));\n        }\n    }\n    get dirty() {\n        return this._dirty;\n    }\n    set dirty(v) {\n        this._dirty = v;\n        if (!this._dirty) {\n            this.rules.forEach((r) => (r.dirty = false));\n        }\n    }\n    add(selector, props) {\n        if (selector.includes(' '))\n            throw new Error('Hierarchical selectors not supported.');\n        // if 2 '.' - Error('Only single class rules supported.')\n        // if '&' - Error('Not supported.')\n        if (selector === '*')\n            throw new Error('Cannot re-install global style.');\n        const rule = new Style(selector, props);\n        const existing = this.rules.findIndex((s) => s.selector.text === rule.selector.text);\n        if (existing > -1) {\n            if (selector === '*') {\n                const current = this.rules[existing];\n                current.set(rule);\n            }\n            else {\n                this.rules[existing] = rule;\n            }\n        }\n        else {\n            this.rules.push(rule);\n        }\n        // rulesChanged = true;\n        this.dirty = true;\n        return rule;\n    }\n    get(selector) {\n        return this.rules.find((s) => s.selector.text === selector) || null;\n    }\n    remove(selector) {\n        const existing = this.rules.findIndex((s) => s.selector.text === selector);\n        if (existing > -1) {\n            this.rules.splice(existing, 1);\n            this.dirty = true;\n        }\n    }\n    computeFor(widget) {\n        const sources = this.rules.filter((r) => r.selector.matches(widget));\n        const widgetStyle = widget.style();\n        if (widgetStyle) {\n            sources.push(widgetStyle);\n        }\n        widgetStyle.dirty = false;\n        return new ComputedStyle(sources);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Style from './style';\nexport class Widget {\n    // hovered: Style.Style = {};\n    // active: Style.Style = {};\n    constructor(tag, styles) {\n        this.id = '';\n        this.parent = null;\n        this.props = {};\n        this.classes = [];\n        this.children = [];\n        this._bounds = new GWU.xy.Bounds(0, 0, 0, 0);\n        this._text = '';\n        this._lines = [];\n        this._dirty = false;\n        this._attached = false;\n        this._style = null;\n        this.tag = tag;\n        this._usedStyle = styles\n            ? styles.computeFor(this)\n            : new Style.ComputedStyle();\n    }\n    clone() {\n        if (this._attached && !this.parent)\n            throw new Error('Cannot clone a root widget.');\n        const other = new this.constructor(this.tag);\n        Object.assign(other.props, this.props);\n        other.classes = this.classes.slice();\n        other._text = this._text;\n        if (this._style) {\n            other._style = this._style.clone();\n        }\n        other.parent = null; // The root cloned widget will not have a parent anymore\n        other._attached = false;\n        other.dirty = true;\n        // First we clone the children, then we set their parent to us\n        other.children = this.children.map((c) => c.clone());\n        other.children.forEach((c) => (c.parent = other));\n        return other;\n    }\n    get dirty() {\n        return this._dirty || this._usedStyle.dirty;\n    }\n    set dirty(v) {\n        this._dirty = v;\n        if (this.parent) {\n            const position = this.used('position');\n            if (position === 'static' || position === 'relative') {\n                this.parent.dirty = true;\n            }\n        }\n    }\n    // CHILDREN\n    addChild(child, beforeIndex = -1) {\n        if (child.parent) {\n            if (child.parent === this)\n                return this; // ok\n            throw new Error('Cannot add a currently attached child to another Widget.  Detach it first.');\n        }\n        if (beforeIndex == 0) {\n            this.children.unshift(child);\n        }\n        else if (beforeIndex > 0 && beforeIndex <= this.children.length - 1) {\n            this.children.splice(beforeIndex, 0, child);\n        }\n        else {\n            this.children.push(child);\n        }\n        child.parent = this;\n        child.dirty = true;\n        this.dirty = true;\n        return this;\n    }\n    removeChild(child) {\n        if (!child.parent)\n            return this; // not attached, silently ignore\n        if (child.parent !== this) {\n            throw new Error('Cannot remove child that is not attached to this widget.');\n        }\n        if (GWU.arrayDelete(this.children, child)) {\n            child.parent = null;\n            child.dirty = true;\n            this.dirty = true;\n        }\n        return this;\n    }\n    empty() {\n        this.text(''); // clear the text\n        // clear the children\n        const old = this.children;\n        this.children = []; // no more children\n        old.forEach((c) => {\n            c.parent = null;\n            c.dirty = true;\n        });\n        this.dirty = true;\n        // return the children for cleanup\n        return old;\n    }\n    root() {\n        let current = this;\n        while (current.parent) {\n            current = current.parent;\n        }\n        return current !== this ? current : null;\n    }\n    positionedParent() {\n        let parent = this.parent;\n        if (parent) {\n            // for absolute position, position is relative to closest ancestor that is positioned\n            while (parent &&\n                !['absolute', 'fixed', 'relative'].includes(parent.used('position'))) {\n                parent = parent.parent;\n            }\n        }\n        if (!parent) {\n            return this.root(); // no positioned parent so we act fixed.\n        }\n        return parent;\n    }\n    // BOUNDS\n    get bounds() {\n        // this._update();\n        return this._bounds;\n    }\n    get innerLeft() {\n        return this._bounds.left + (this._usedStyle.padLeft || 0);\n    }\n    get innerRight() {\n        return this._bounds.right - (this._usedStyle.padRight || 0);\n    }\n    get innerWidth() {\n        return (this._bounds.width -\n            (this._usedStyle.padLeft || 0) -\n            (this._usedStyle.padRight || 0));\n    }\n    get innerHeight() {\n        return (this._bounds.height -\n            (this._usedStyle.padTop || 0) -\n            (this._usedStyle.padBottom || 0));\n    }\n    get innerTop() {\n        return this._bounds.top + (this._usedStyle.padTop || 0);\n    }\n    get innerBottom() {\n        return this._bounds.bottom + (this._usedStyle.padBottom || 0);\n    }\n    updateLayout() {\n        if (!this.dirty) {\n            this.children.forEach((c) => c.updateLayout());\n            return this;\n        }\n        const position = this._usedStyle.position || 'static';\n        if (position === 'fixed') {\n            this._updateLayoutFixed();\n        }\n        else if (position === 'relative') {\n            this._updateLayoutRelative();\n        }\n        else if (position === 'absolute') {\n            this._updateLayoutAbsolute();\n        }\n        else {\n            this._updateLayoutStatic();\n        }\n        return this;\n    }\n    _updateWidth(parentWidth = 0) {\n        const used = this.used();\n        const bounds = this.bounds;\n        let width = used.width || parentWidth;\n        if (!width) {\n            this._lines = GWU.text.splitIntoLines(this._text, (used.maxWidth || 999) -\n                (used.padLeft || 0) -\n                (used.padRight || 0));\n            width = this.contentWidth() || GWU.text.length(this._text);\n        }\n        const maxW = used.maxWidth || width;\n        const minW = used.minWidth || width;\n        bounds.width = GWU.clamp(width, minW, maxW);\n        if (this._text.length) {\n            if (bounds.width) {\n                this._lines = GWU.text.splitIntoLines(this._text, bounds.width - (used.padLeft || 0) - (used.padRight || 0));\n            }\n            else if (GWU.text.length(this._text)) {\n                this._lines = [this._text];\n            }\n        }\n        else {\n            this._lines = [];\n        }\n        return this;\n    }\n    _updateLeft(parentLeft = 0, parentWidth = 0) {\n        const used = this._usedStyle;\n        let left = parentLeft;\n        if (used.position !== 'static') {\n            if (used.left) {\n                left += used.left;\n            }\n            else if (used.right) {\n                const parentRight = parentLeft + parentWidth;\n                left = parentRight - used.right - this.bounds.width;\n            }\n        }\n        this.bounds.left = left;\n        return this;\n    }\n    _updateTop(parentBottom = 0) {\n        this.bounds.top = parentBottom;\n        return this;\n    }\n    _updateHeight() {\n        const used = this._usedStyle;\n        const bounds = this.bounds;\n        bounds.height = this._lines.length + (used.padTop || 0);\n        // update children...\n        this.children.forEach((c) => {\n            c.updateLayout();\n            bounds.height += c.bounds.height;\n        });\n        // add padding\n        bounds.height += used.padBottom || 0;\n        if (used.height) {\n            bounds.height = used.height;\n        }\n        const maxH = used.maxHeight || bounds.height;\n        const minH = used.minHeight || bounds.height;\n        bounds.height = GWU.clamp(bounds.height, minH, maxH);\n        if (bounds.height < this._lines.length) {\n            this._lines.length = bounds.height;\n        }\n        return this;\n    }\n    applyLayoutOffset() {\n        const used = this._usedStyle;\n        const position = used.position || 'static';\n        if (position !== 'static') {\n            let parent = this;\n            if (used.position === 'fixed') {\n                const root = this.root();\n                if (root)\n                    parent = root;\n            }\n            else if (used.position === 'absolute') {\n                const pos = this.positionedParent();\n                if (pos)\n                    parent = pos;\n            }\n            if (used.top) {\n                this.bounds.top = parent.innerTop + used.top;\n            }\n            else if (used.bottom) {\n                this.bounds.bottom = parent.innerBottom - used.bottom;\n            }\n        }\n        this.children.forEach((c) => c.applyLayoutOffset());\n        return this;\n    }\n    _updateLayoutStatic() {\n        const parent = this.parent;\n        this._updateWidth(parent ? parent.innerWidth : 0);\n        this._updateLeft(parent ? parent.innerLeft : 0, parent ? parent.innerWidth : 0);\n        this._updateTop(parent ? parent.bounds.bottom : 0);\n        this._updateHeight();\n        this.dirty = false;\n        return this;\n    }\n    _updateLayoutRelative() {\n        this._updateLayoutStatic();\n        this.applyLayoutOffset();\n    }\n    _updateLayoutFixed() {\n        const parent = this.root();\n        this._updateWidth(0); // width comes from content\n        this._updateLeft(parent ? parent.innerLeft : 0);\n        this._updateTop(parent ? parent.bounds.bottom : 0);\n        this._updateHeight();\n        this.applyLayoutOffset();\n        this.dirty = false;\n        return this;\n    }\n    _updateLayoutAbsolute() {\n        let parent = this.positionedParent();\n        this._updateWidth(0); // width comes from content\n        this._updateLeft(parent ? parent.innerLeft : 0);\n        this._updateTop(parent ? parent.bounds.bottom : 0);\n        this._updateHeight();\n        this.applyLayoutOffset();\n        this.dirty = false;\n        return this;\n    }\n    style(...args) {\n        if (!this._style) {\n            this._style = new Style.Style();\n        }\n        if (args.length === 0)\n            return this._style;\n        if (args.length === 1) {\n            const v = args[0];\n            if (typeof v === 'string') {\n                return this._style.get(v);\n            }\n            else {\n                this._style.set(args[0], false); // do not set the dirty flag\n                this._usedStyle.set(args[0], false); // do not set the dirty flag\n                this.dirty = true; // Need layout update\n            }\n        }\n        else {\n            this._style.set(args[0], args[1], false); // do not set dirty flag\n            this._usedStyle.set(args[0], args[1], false); // do not set dirty flag\n            this.dirty = true; // Need layout update\n        }\n        return this;\n    }\n    removeStyle(id) {\n        if (!this._style)\n            return this;\n        this._style.unset(id);\n        this._usedStyle.dirty = true;\n        return this;\n    }\n    used(id) {\n        if (!id)\n            return this._usedStyle;\n        if (id instanceof Style.ComputedStyle) {\n            this._usedStyle = id;\n            this.dirty = true;\n            return this;\n        }\n        return this._usedStyle.get(id);\n    }\n    addClass(id) {\n        if (this.classes.includes(id))\n            return this;\n        this.classes.push(id);\n        this._usedStyle.dirty = true; // It needs to get styles for this class\n        return this;\n    }\n    removeClass(id) {\n        if (!GWU.arrayDelete(this.classes, id))\n            return this;\n        this._usedStyle.dirty = true; // It may need to remove some styles\n        return this;\n    }\n    toggleClass(id) {\n        if (!GWU.arrayDelete(this.classes, id)) {\n            this.classes.push(id);\n        }\n        this._usedStyle.dirty = true;\n        return this;\n    }\n    pos(...args) {\n        if (args.length === 0)\n            return this.bounds;\n        let pos;\n        if (args.length == 2) {\n            pos = { left: args[0], top: args[1] };\n        }\n        else {\n            pos = args[0];\n        }\n        if (pos.right !== undefined) {\n            this.style('right', pos.right);\n        }\n        if (pos.left !== undefined) {\n            this.style('left', pos.left);\n        }\n        if (pos.top !== undefined) {\n            this.style('top', pos.top);\n        }\n        if (pos.bottom !== undefined) {\n            this.style('bottom', pos.bottom);\n        }\n        return this;\n    }\n    size(size, height) {\n        if (size === undefined)\n            return this.bounds;\n        if (typeof size === 'number') {\n            size = { width: size, height };\n        }\n        if (size.minWidth !== undefined)\n            this.style('minWidth', size.minWidth);\n        if (size.minHeight !== undefined)\n            this.style('minHeight', size.minHeight);\n        if (size.maxWidth !== undefined)\n            this.style('maxWidth', size.maxWidth);\n        if (size.maxHeight !== undefined)\n            this.style('maxHeight', size.maxHeight);\n        if (size.width !== undefined)\n            this.style('width', size.width);\n        if (size.height !== undefined)\n            this.style('height', size.height);\n        // this._update();\n        return this;\n    }\n    text(v) {\n        if (v === undefined)\n            return this._text;\n        this._text = v;\n        // if (this.bounds.width) {\n        //     this._lines = GWU.text.splitIntoLines(v, this.bounds.width);\n        // } else {\n        //     this._lines = GWU.text.splitIntoLines(v);\n        //     this.bounds.width = this.contentWidth();\n        // }\n        this.dirty = true;\n        return this;\n    }\n    contentWidth() {\n        return this._lines.reduce((out, line) => Math.max(out, line.length), 0);\n    }\n    // DRAWING\n    draw(buffer) {\n        const bg = this.used('bg');\n        const bounds = this.bounds;\n        buffer.fillRect(bounds.x, bounds.y, bounds.width, bounds.height, ' ', bg, bg);\n        if (this.children.length) {\n            this.children.forEach((c) => c.draw(buffer));\n        }\n        else if (this._lines.length) {\n            const fg = this.used('fg') || 'white';\n            const top = this.innerTop;\n            const width = this.innerWidth;\n            const left = this.innerLeft;\n            const align = this.used('align');\n            this._lines.forEach((line, i) => {\n                buffer.drawText(left, top + i, line, fg, -1, width, align);\n            });\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport { Selector } from './selector';\nimport * as Style from './style';\nimport { Widget } from './widget';\nexport class Document {\n    constructor(ui, rootTag = 'body') {\n        this.ui = ui;\n        this.stylesheet = new Style.Sheet();\n        this.body = new Widget(rootTag);\n        this.body.style({\n            width: ui.buffer.width,\n            maxWidth: ui.buffer.width,\n            height: ui.buffer.height,\n            maxHeight: ui.buffer.height,\n            position: 'fixed',\n            top: 0,\n            left: 0,\n        });\n        this.body._attached = true; // attached as the root of the layer\n        this.children = [this.body];\n    }\n    $(id) {\n        return this.select(id);\n    }\n    select(id) {\n        let selected;\n        if (id === undefined) {\n            selected = [this.body];\n        }\n        else if (id instanceof Selection) {\n            return id;\n        }\n        else if (typeof id === 'string') {\n            if (id.startsWith('<')) {\n                selected = [this.create(id)];\n            }\n            else {\n                const s = new Selector(id);\n                selected = this.children.filter((w) => s.matches(w));\n            }\n        }\n        else if (Array.isArray(id)) {\n            selected = id;\n        }\n        else {\n            selected = [id];\n        }\n        return new Selection(this, selected);\n    }\n    create(tag) {\n        if (tag.startsWith('<')) {\n            if (!tag.endsWith('>'))\n                throw new Error('Need brackets around new tag - e.g. \"<tag>\"');\n            tag = tag.substring(1, tag.length - 1);\n        }\n        return new Widget(tag, this.stylesheet);\n    }\n    rule(rule, style) {\n        if (typeof rule === 'string') {\n            if (style) {\n                this.stylesheet.add(rule, style);\n                return this;\n            }\n            let out = this.stylesheet.get(rule);\n            if (out)\n                return out;\n            return this.stylesheet.add(rule, {});\n        }\n        Object.entries(rule).forEach(([name, value]) => {\n            this.stylesheet.add(name, value);\n        });\n        return this;\n    }\n    removeRule(rule) {\n        this.stylesheet.remove(rule);\n        return this;\n    }\n    _attach(w) {\n        if (Array.isArray(w)) {\n            w.forEach((x) => this._attach(x));\n            return this;\n        }\n        if (this.children.includes(w))\n            return this;\n        this.children.push(w);\n        w._attached = true;\n        w.children.forEach((c) => this._attach(c));\n        return this;\n    }\n    _detach(w) {\n        if (Array.isArray(w)) {\n            w.forEach((x) => this._detach(x));\n            return this;\n        }\n        if (w === this.body)\n            throw new Error('Cannot detach root widget.');\n        GWU.arrayDelete(this.children, w);\n        w._attached = false;\n        w.children.forEach((c) => this._detach(c));\n        return this;\n    }\n    // add(id: SelectType): Selector {\n    //     let s: Selector;\n    //     if (id instanceof Selector) {\n    //         s = id;\n    //     } else {\n    //         s = this.$(id);\n    //     }\n    //     s.selected.forEach((w) => {\n    //         if (!this.allWidgets.includes(w)) {\n    //             w.parent = this.root;\n    //             w._attached = true;\n    //             this.allWidgets.push(w);\n    //         }\n    //     });\n    //     return s;\n    // }\n    computeStyles() {\n        this.children.forEach((w) => {\n            if (w.used().dirty || this.stylesheet.dirty) {\n                w.used(this.stylesheet.computeFor(w));\n            }\n        });\n        this.stylesheet.dirty = false;\n    }\n    updateLayout(widget) {\n        widget = widget || this.body;\n        widget.updateLayout();\n    }\n    draw(buffer) {\n        this.computeStyles();\n        this.updateLayout();\n        buffer = buffer || this.ui.buffer;\n        this.body.draw(buffer);\n        buffer.render();\n    }\n}\nexport class Selection {\n    constructor(layer, widgets = []) {\n        this.layer = layer;\n        this.selected = widgets.slice();\n    }\n    get(index) {\n        return this.selected[index];\n    }\n    length() {\n        return this.selected.length;\n    }\n    add(arg) {\n        if (!(arg instanceof Selection)) {\n            arg = this.layer.$(arg);\n        }\n        arg.forEach((w) => {\n            if (!this.selected.includes(w)) {\n                this.selected.push(w);\n            }\n        });\n        return this;\n    }\n    clone() {\n        this.selected = this.selected.map((w) => w.clone());\n        return this;\n    }\n    // async ???\n    forEach(cb) {\n        this.selected.forEach(cb);\n        return this;\n    }\n    // HIERARCHY\n    after(content) {\n        if (!(content instanceof Selection)) {\n            content = this.layer.$(content);\n        }\n        if (content.length() == 0)\n            return this;\n        content.detach();\n        let current = content;\n        const last = this.selected.length - 1;\n        this.selected.forEach((next, i) => {\n            if (!next.parent)\n                throw new Error('Cannot add after detached widgets.');\n            current =\n                i < last ? content.clone() : content;\n            const parent = next.parent;\n            let nextIndex = parent.children.indexOf(next) + 1;\n            current.forEach((toAdd) => {\n                parent.addChild(toAdd, nextIndex);\n                if (parent._attached) {\n                    this.layer._attach(toAdd);\n                }\n            });\n        });\n        return this;\n    }\n    append(content) {\n        if (!(content instanceof Selection)) {\n            content = this.layer.$(content);\n        }\n        if (content.length() == 0)\n            return this;\n        content.detach(); // remove all items to be appended from the tree\n        let current = content;\n        const last = this.selected.length - 1;\n        this.selected.forEach((dest, i) => {\n            current =\n                i < last ? content.clone() : content;\n            current.forEach((toAppend) => {\n                dest.addChild(toAppend);\n                if (dest._attached) {\n                    this.layer._attach(toAppend);\n                }\n            });\n        });\n        return this;\n    }\n    appendTo(dest) {\n        if (!(dest instanceof Selection)) {\n            dest = this.layer.$(dest);\n        }\n        dest.append(this);\n        return this;\n    }\n    before(content) {\n        if (!(content instanceof Selection)) {\n            content = this.layer.$(content);\n        }\n        if (content.length() == 0)\n            return this;\n        content.detach();\n        let current = content;\n        const last = this.selected.length - 1;\n        this.selected.forEach((next, i) => {\n            if (!next.parent)\n                throw new Error('Cannot add before detached widgets.');\n            current =\n                i < last ? content.clone() : content;\n            const parent = next.parent;\n            let nextIndex = parent.children.indexOf(next);\n            current.forEach((toAdd) => {\n                parent.addChild(toAdd, nextIndex++);\n                if (parent._attached) {\n                    this.layer._attach(toAdd);\n                }\n            });\n        });\n        return this;\n    }\n    detach() {\n        this.selected.forEach((w) => {\n            if (w._attached) {\n                if (!w.parent)\n                    throw new Error('Cannot detach root widget.');\n                w.parent.removeChild(w);\n                // remove from allWidgets\n                this.layer._detach(w);\n            }\n        });\n        return this;\n    }\n    empty() {\n        this.selected.forEach((w) => {\n            const oldChildren = w.empty();\n            this.layer._detach(oldChildren);\n        });\n        return this;\n    }\n    insertAfter(target) {\n        if (!(target instanceof Selection)) {\n            target = this.layer.$(target);\n        }\n        target.after(this);\n        return this;\n    }\n    insertBefore(target) {\n        if (!(target instanceof Selection)) {\n            target = this.layer.$(target);\n        }\n        target.before(this);\n        return this;\n    }\n    prepend(content) {\n        if (!(content instanceof Selection)) {\n            content = this.layer.$(content);\n        }\n        if (content.length() == 0)\n            return this;\n        content.detach(); // remove all items to be prepended from the tree\n        let current = content;\n        const last = this.selected.length - 1;\n        this.selected.forEach((dest, i) => {\n            current =\n                i < last ? content.clone() : content;\n            current.forEach((toAppend) => {\n                dest.addChild(toAppend, 0); // before first child\n                if (dest._attached) {\n                    this.layer._attach(toAppend);\n                }\n            });\n        });\n        return this;\n    }\n    prependTo(dest) {\n        if (!(dest instanceof Selection)) {\n            dest = this.layer.$(dest);\n        }\n        dest.prepend(this);\n        return this;\n    }\n    remove(_sub) {\n        // TODO - subselector\n        // TODO - remove events\n        return this.detach();\n    }\n    replaceAll(target) {\n        if (!(target instanceof Selection)) {\n            target = this.layer.$(target);\n        }\n        target.before(this);\n        target.detach();\n        return this;\n    }\n    replaceWith(content) {\n        if (!(content instanceof Selection)) {\n            content = this.layer.$(content);\n        }\n        content.replaceAll(this);\n        return this;\n    }\n    text(t) {\n        var _a;\n        if (!t) {\n            return (_a = this.selected[0]) === null || _a === void 0 ? void 0 : _a.text();\n        }\n        this.selected.forEach((w) => w.text(t));\n        return this;\n    }\n    // STYLE\n    addClass(id) {\n        this.selected.forEach((w) => w.addClass(id));\n        return this;\n    }\n    hasClass(id) {\n        if (this.selected.length == 0)\n            return false;\n        return this.selected[0].classes.includes(id);\n    }\n    removeClass(id) {\n        this.selected.forEach((w) => w.removeClass(id));\n        return this;\n    }\n    toggleClass(id) {\n        this.selected.forEach((w) => w.toggleClass(id));\n        return this;\n    }\n    style(name, value) {\n        if (!name)\n            return this.selected[0].style();\n        if (value === undefined) {\n            if (typeof name === 'string') {\n                return this.selected[0].style(name);\n            }\n        }\n        this.selected.forEach((w) => {\n            if (typeof name === 'string') {\n                w.style(name, value);\n            }\n            else {\n                w.style(name);\n            }\n        });\n        return this;\n    }\n    removeStyle(name) {\n        this.selected.forEach((w) => w.removeStyle(name));\n        return this;\n    }\n    // ANIMATION\n    animate(_props, _ms) {\n        return this;\n    }\n    clearQueue(_name) {\n        return this;\n    }\n    delay(_ms, _name) {\n        return this;\n    }\n    dequeue() {\n        return this;\n    }\n    fadeIn(_ms) {\n        return this;\n    }\n    fadeOut(_ms) {\n        return this;\n    }\n    fadeTo(_ms, _opacity) {\n        return this;\n    }\n    fadeToggle(_ms) {\n        return this;\n    }\n    finish(_name) {\n        return this;\n    }\n    hide(_ms) {\n        return this;\n    }\n    queue(..._args) {\n        return [];\n    }\n    show(_ms) {\n        return this;\n    }\n    slideDown(_ms) {\n        return this;\n    }\n    slideToggle(_ms) {\n        return this;\n    }\n    slideUp(_ms) {\n        return this;\n    }\n    stop() {\n        return this;\n    }\n    toggle(_arg) {\n        return this;\n    }\n    // EVENTS\n    on(_event, _cb) {\n        return this;\n    }\n    off(_event) {\n        return this;\n    }\n    click(_arg) {\n        return this;\n    }\n    keypress(_arg) {\n        return this;\n    }\n    dir(_arg) {\n        return this;\n    }\n    mouseenter(_arg) {\n        return this;\n    }\n    mouseleave(_arg) {\n        return this;\n    }\n    mousemove(_arg) {\n        return this;\n    }\n}\n","export class Callbacks {\n    constructor(flags) {\n        this._items = [];\n        this._disabled = false;\n        this._fired = false;\n        this._once = false;\n        // _memory = false;\n        this._stopOnFalse = false;\n        this._unique = false;\n        const f = flags.split(' ');\n        this._once = f.includes('once');\n        // this._memory = f.includes('memory');\n        this._stopOnFalse = f.includes('stopOnFalse');\n        this._unique = f.includes('unique');\n    }\n    add(cb) {\n        if (Array.isArray(cb)) {\n            cb.forEach((c) => this.add(c));\n        }\n        else {\n            if (!this._unique || !this._items.includes(cb)) {\n                this._items.push(cb);\n            }\n        }\n        return this;\n    }\n    disable() {\n        this._disabled = true;\n        return this;\n    }\n    disabled() {\n        return !this._disabled;\n    }\n    empty() {\n        this._items.length = 0;\n        return this;\n    }\n    async fire(...args) {\n        if (this._disabled)\n            return this;\n        if (this._once && this._fired)\n            return this;\n        this._fired = true;\n        for (let cb of this._items) {\n            const r = await cb(...args);\n            if (this._stopOnFalse && r === false) {\n                break;\n            }\n        }\n        return this;\n    }\n    fired() {\n        return this._fired;\n    }\n    async fireWith(obj, args) {\n        if (this._disabled)\n            return this;\n        if (this._once && this._fired)\n            return this;\n        this._fired = true;\n        for (let cb of this._items) {\n            const r = await cb.apply(obj, args);\n            if (this._stopOnFalse && r === false) {\n                break;\n            }\n        }\n        return this;\n    }\n    has(cb) {\n        return this._items.includes(cb);\n    }\n    // lock - I am not sure what this does or why it is there\n    // locked\n    remove(cb) {\n        const index = this._items.indexOf(cb);\n        if (index >= 0) {\n            this._items.splice(index, 1);\n        }\n        return this;\n    }\n}\n","import * as Table from './table';\nexport class List extends Table.Table {\n    constructor(id, opts) {\n        super(id, (() => {\n            // @ts-ignore\n            const tableOpts = opts;\n            tableOpts.columns = [opts];\n            tableOpts.headers = opts.header ? true : false;\n            tableOpts.hover = opts.hover === false ? 'none' : 'row';\n            return tableOpts;\n        })());\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Messages extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        opts.x = opts.x || 0;\n        opts.y = opts.y || 0;\n        super.init(opts);\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.length || 40,\n            match: (_x, _y) => {\n                return true;\n            },\n        });\n    }\n    click(e, dialog) {\n        if (!this.contains(e))\n            return false;\n        return this.showArchive(dialog).then(() => true);\n    }\n    draw(buffer) {\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, this.fg);\n            if (confirmed) {\n                buffer.mix(this.bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    async showArchive(dialog) {\n        let reverse, fadePercent = 0;\n        let fastForward;\n        const ui = dialog.ui;\n        // Count the number of lines in the archive.\n        let totalMessageCount = this.cache.length;\n        if (totalMessageCount <= this.bounds.height)\n            return false;\n        const isOnTop = this.bounds.y < 10;\n        const dbuf = ui.startLayer();\n        const fg = GWU.color.from(this.fg);\n        totalMessageCount = Math.min(totalMessageCount, isOnTop ? dbuf.height - this.bounds.top : this.bounds.bottom);\n        // Pull-down/pull-up animation:\n        for (reverse = 0; reverse <= 1; reverse++) {\n            fastForward = false;\n            const dM = reverse ? -1 : 1;\n            const startM = reverse ? totalMessageCount : this.bounds.height;\n            const endM = reverse\n                ? this.bounds.height + dM + 1\n                : totalMessageCount + dM;\n            // console.log(\n            //     `setting up draw - startM=${startM}, endM=${endM}, dM=${dM}`\n            // );\n            for (let currentM = startM; currentM != endM; currentM += dM) {\n                const startY = isOnTop\n                    ? this.bounds.y + currentM - 1\n                    : this.bounds.bottom - currentM;\n                const endY = isOnTop ? this.bounds.y : this.bounds.bottom;\n                const dy = isOnTop ? -1 : 1;\n                ui.resetLayerBuffer();\n                // console.log(\n                //     `draw archive - count=${i}, startY=${startY}, endY=${endY}, dy=${dy}`\n                // );\n                dbuf.fillRect(this.bounds.x, Math.min(startY, endY), this.bounds.width, currentM, ' ', this.bg, this.bg);\n                this.cache.forEach((line, _confirmed, j) => {\n                    const y = startY + j * dy;\n                    if (isOnTop) {\n                        if (y < endY)\n                            return;\n                    }\n                    else if (y > endY)\n                        return;\n                    fadePercent = Math.floor((50 * j) / currentM);\n                    const fgColor = fg.clone().mix(this.bg, fadePercent);\n                    dbuf.drawText(this.bounds.x, y, line, fgColor, this.bg);\n                });\n                dbuf.render();\n                if (!fastForward) {\n                    if (await ui.loop.pause(reverse ? 15 : 45)) {\n                        fastForward = true;\n                        currentM = endM - 2 * dM; // skip to the end-1\n                    }\n                }\n            }\n            if (!reverse) {\n                const y = isOnTop ? 0 : dbuf.height - 1;\n                const x = this.bounds.x > 8\n                    ? this.bounds.x - 8 // to left of box\n                    : Math.min(this.bounds.x + this.bounds.width, // just to right of box\n                    dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                    );\n                dbuf.wrapText(x, y, 8, '--DONE--', this.bg, this.fg);\n                dbuf.render();\n                await ui.loop.waitForAck();\n            }\n        }\n        ui.finishLayer();\n        this.cache.confirmAll();\n        dialog.requestRedraw(); // everything is confirmed\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class UI {\n    constructor(opts = {}) {\n        this.layers = [];\n        this.freeBuffers = [];\n        this.inDialog = false;\n        if (!opts.canvas)\n            throw new Error('Need a canvas.');\n        this.canvas = opts.canvas;\n        this.buffer = opts.canvas.buffer;\n        this.loop = opts.loop || GWU.loop;\n    }\n    render() {\n        this.buffer.render();\n    }\n    get baseBuffer() {\n        return this.layers[this.layers.length - 1] || this.canvas.buffer;\n    }\n    get canvasBuffer() {\n        return this.canvas.buffer;\n    }\n    startLayer() {\n        this.inDialog = true;\n        const base = this.buffer || this.canvas.buffer;\n        this.layers.push(base);\n        this.buffer = this.freeBuffers.pop() || this.canvas.buffer.clone();\n        // UI_OVERLAY._data.forEach( (c) => c.opacity = 0 );\n        this.buffer.copy(base);\n        this.buffer.changed = false;\n        return this.buffer;\n    }\n    resetLayerBuffer() {\n        const base = this.baseBuffer;\n        this.buffer.copy(base);\n        this.buffer.changed = false; // So you have to draw something to make the canvas render...\n    }\n    finishLayer() {\n        if (!this.inDialog)\n            return;\n        if (this.buffer !== this.canvas.buffer) {\n            this.freeBuffers.push(this.buffer);\n        }\n        this.buffer = this.layers.pop() || this.canvas.buffer;\n        this.buffer.changed = true;\n        this.buffer.render();\n        this.inDialog = this.layers.length > 0;\n    }\n    // UTILITY FUNCTIONS\n    async fadeTo(color = 'black', duration = 1000) {\n        color = GWU.color.from(color);\n        const buffer = this.startLayer();\n        let pct = 0;\n        let elapsed = 0;\n        while (elapsed < duration) {\n            elapsed += 32;\n            if (await this.loop.pause(32)) {\n                elapsed = duration;\n            }\n            pct = Math.floor((100 * elapsed) / duration);\n            this.resetLayerBuffer();\n            buffer.mix(color, pct);\n            buffer.render();\n        }\n        this.finishLayer();\n    }\n    async alert(opts, text, args) {\n        if (typeof opts === 'number') {\n            opts = { duration: opts };\n        }\n        if (args) {\n            text = GWU.text.apply(text, args);\n        }\n        const width = opts.width || GWU.text.length(text);\n        opts.box = opts.box || { bg: opts.bg };\n        // opts.box.bg = opts.box.bg || 'gray';\n        const textOpts = {\n            fg: opts.fg,\n            text,\n            x: 0,\n            y: 0,\n            wrap: width,\n        };\n        const textWidget = new Widget.Text('TEXT', textOpts);\n        const height = textWidget.bounds.height;\n        const dlg = Widget.buildDialog(this, width, height)\n            .with(textWidget, { x: 0, y: 0 })\n            .addBox(opts.box)\n            .center()\n            .done();\n        dlg.setEventHandlers({\n            click: () => dlg.close(true),\n            keypress: () => dlg.close(true),\n            TIMEOUT: () => dlg.close(false),\n        });\n        if (!opts.waitForAck) {\n            dlg.setTimeout('TIMEOUT', opts.duration || 3000);\n        }\n        return await dlg.show();\n    }\n    async confirm(...args) {\n        let opts;\n        let text;\n        let textArgs = null;\n        if (args.length <= 2 && typeof args[0] === 'string') {\n            opts = {};\n            text = args[0];\n            textArgs = args[1] || null;\n        }\n        else {\n            opts = args[0];\n            text = args[1];\n            textArgs = args[2] || null;\n        }\n        if (textArgs) {\n            text = GWU.text.apply(text, textArgs);\n        }\n        const width = opts.width ||\n            Math.min(Math.floor(this.buffer.width / 2), GWU.text.length(text));\n        const textOpts = {\n            fg: opts.fg,\n            text,\n            wrap: width,\n        };\n        const textWidget = new Widget.Text('TEXT', textOpts);\n        const height = textWidget.bounds.height + 2;\n        opts.allowCancel = opts.allowCancel !== false;\n        opts.buttons = Object.assign({\n            fg: 'white',\n            activeFg: 'teal',\n            bg: 'dark_gray',\n            activeBg: 'darkest_gray',\n        }, opts.buttons || {});\n        if (typeof opts.ok === 'string') {\n            opts.ok = { text: opts.ok };\n        }\n        if (typeof opts.cancel === 'string') {\n            opts.cancel = { text: opts.cancel };\n        }\n        opts.ok = opts.ok || {};\n        opts.cancel = opts.cancel || {};\n        const okOpts = Object.assign({}, opts.buttons, { text: 'OK' }, opts.ok);\n        const cancelOpts = Object.assign({}, opts.buttons, { text: 'CANCEL' }, opts.cancel);\n        const builder = Widget.buildDialog(this, width, height)\n            .with(textWidget, { x: 0, y: 0 })\n            .with(new Widget.Button('OK', okOpts), { x: 0, bottom: 0 });\n        if (opts.allowCancel) {\n            builder.with(new Widget.Button('CANCEL', cancelOpts), {\n                right: 0,\n                bottom: 0,\n            });\n        }\n        const dlg = builder.center().addBox(opts.box).done();\n        dlg.setEventHandlers({\n            OK() {\n                dlg.close(true);\n            },\n            CANCEL() {\n                dlg.close(false);\n            },\n            Escape() {\n                dlg.close(false);\n            },\n            Enter() {\n                dlg.close(true);\n            },\n        });\n        return await dlg.show();\n    }\n    async showWidget(widget, keymap = {}) {\n        const center = widget.bounds.x < 0 || widget.bounds.y < 0;\n        const place = { x: widget.bounds.x, y: widget.bounds.y };\n        const builder = Widget.buildDialog(this).with(widget, { x: 0, y: 0 });\n        if (center) {\n            builder.center();\n        }\n        else {\n            builder.place(place.x, place.y);\n        }\n        const dlg = builder.done();\n        keymap.Escape =\n            keymap.Escape ||\n                (() => {\n                    dlg.close(false);\n                });\n        dlg.setEventHandlers(keymap);\n        return await dlg.show();\n    }\n    // assumes you are in a dialog and give the buffer for that dialog\n    async getInputAt(x, y, maxLength, opts = {}) {\n        opts.width = maxLength;\n        opts.x = x;\n        opts.y = y;\n        const widget = new Widget.Input('INPUT', opts);\n        return this.showWidget(widget, {\n            INPUT(_e, dlg) {\n                dlg.close(widget.text);\n            },\n            Escape(_e, dlg) {\n                dlg.close('');\n            },\n        });\n    }\n    async inputBox(opts, prompt, args) {\n        if (args) {\n            prompt = GWU.text.apply(prompt, args);\n        }\n        const width = opts.width ||\n            Math.min(Math.floor(this.buffer.width / 2), GWU.text.length(prompt));\n        const promptOpts = {\n            fg: opts.fg,\n            text: prompt,\n            wrap: width,\n        };\n        const promptWidget = new Widget.Text('TEXT', promptOpts);\n        const height = promptWidget.bounds.height +\n            2 + // skip + input\n            2; // skip + ok/cancel\n        opts.allowCancel = opts.allowCancel !== false;\n        opts.buttons = Object.assign({\n            fg: 'white',\n            activeFg: 'teal',\n            bg: 'dark_gray',\n            activeBg: 'darkest_gray',\n        }, opts.buttons || {});\n        if (typeof opts.ok === 'string') {\n            opts.ok = { text: opts.ok };\n        }\n        if (typeof opts.cancel === 'string') {\n            opts.cancel = { text: opts.cancel };\n        }\n        opts.ok = opts.ok || {};\n        opts.cancel = opts.cancel || {};\n        const okOpts = Object.assign({}, opts.buttons, { text: 'OK' }, opts.ok);\n        const cancelOpts = Object.assign({}, opts.buttons, { text: 'CANCEL' }, opts.cancel);\n        opts.input = opts.input || {};\n        opts.input.width = opts.input.width || width;\n        opts.input.bg = opts.input.bg || opts.fg;\n        opts.input.fg = opts.input.fg || opts.bg;\n        const inputWidget = new Widget.Input('INPUT', opts.input || {});\n        const builder = Widget.buildDialog(this, width, height)\n            .with(promptWidget, { x: 0, y: 0 })\n            .with(inputWidget, { bottom: 2, x: 0 })\n            .with(new Widget.Button('OK', okOpts), { bottom: 0, x: 0 })\n            .addBox(opts.box);\n        if (opts.allowCancel) {\n            builder.with(new Widget.Button('CANCEL', cancelOpts), {\n                bottom: 0,\n                right: 0,\n            });\n        }\n        const dlg = builder.center().done();\n        dlg.setEventHandlers({\n            OK() {\n                dlg.close(inputWidget.text);\n            },\n            CANCEL() {\n                dlg.close('');\n            },\n            Escape() {\n                dlg.close('');\n            },\n            INPUT() {\n                dlg.close(inputWidget.text);\n            },\n        });\n        return await dlg.show();\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Viewport extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n    }\n    init(opts) {\n        opts.bg = opts.bg || 'black';\n        opts.x = opts.x || 0;\n        opts.y = opts.y || 0;\n        super.init(opts);\n        this.snap = opts.snap || false;\n        this.center = opts.center || false;\n        this.filter = opts.filter || null;\n        if (opts.lock) {\n            this.lockX = true;\n            this.lockY = true;\n        }\n        else {\n            if (opts.lockX) {\n                this.lockX = true;\n            }\n            if (opts.lockY) {\n                this.lockY = true;\n            }\n        }\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n    }\n    set lock(v) {\n        this.lockX = v;\n        this.lockY = v;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.center = true;\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.center = false;\n        this.snap = false;\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.memory || subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    draw(buffer) {\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return false;\n        }\n        this.updateOffset();\n        const map = this._subject.memory || this._subject.map;\n        const fov = this._subject.fov;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n}\n"],"names":["Widget","constructor","id","opts","this","active","hovered","tabStop","depth","fg","bg","activeFg","activeBg","hoverFg","hoverBg","text","align","valign","bounds","GWU","xy","Bounds","init","reset","undefined","x","y","width","height","length","action","activate","_reverse","deactivate","contains","arguments","mousemove","e","_dialog","tick","_e","click","keypress","dir","draw","buffer","textLen","fillRect","Math","floor","drawText","Text","Widget.Widget","super","wrap","lines","splitIntoLines","truncate","max","setText","forEach","line","i","Button","Error","first","async","ev","dialog","fireAction","key","Input","minLength","default","errorFg","hint","hintFg","numbersOnly","min","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isValid","val","parseInt","value","textEntryBounds","r","then","spliceRaw","color","Column","header","empty","_value","IDENTITY","index","object","assignOmitting","compile","data","v","Table","selectedColumn","selectedIndex","columns","headers","letters","hoverType","hover","wrapColumns","wrapRows","headerFg","headerBg","columnWidth","push","_data","String","fromCharCode","c","col","setData","selectRow","Array","isArray","list","selectNextRow","len","nextIndex","selectPrevRow","prevIndex","selectNextColumn","selectPrevColumn","selectedData","at","b","drawColumn","column","item","drawCell","bottom","oldColumn","oldIndex","find","requestRedraw","Box","title","borderBg","Dialog","ui","widgets","eventHandlers","_activeWidget","result","done","timers","needsRedraw","sort","a","activeWidget","setActiveWidget","w","reverse","setTimeout","time","clearTimeout","widget","handler","setEventHandlers","map","Object","assign","startLayer","loop","run","bind","render","finishLayer","close","returnValue","widgetAt","getWidget","nextTabstop","next","arrayNext","prevTabstop","prev","arrayPrev","dt","promises","entries","Promise","all","fn","code","force","resetLayerBuffer","DialogBuilder","nextY","box","with","right","center","size","place","addBox","padX","pad","padY","Box.Box","unshift","buildDialog","install","EntryBase","dist","priority","changed","sidebarY","_buffer","_bounds","ActorEntry","actor","drawStatus","ItemEntry","CellEntry","cell","MenuButton","ActionButton","DropDownButton","menu","parent","buttons","addButton","config","button","setBounds","px","py","pw","totalWidth","totalHeight","buttonAt","dropBg","dropFg","showDropDown","activeButton","Escape","Tab","activeIndex","TAB","newActive","selected","getButtonAt","indexOf","clearHighlight","actionButton","current","findIndex","clamp","isTruthy","MATCH","Selector","tag","class","prop","startsWith","info","match","substring","matches","obj","classes","includes","props","Style","selector","_dirty","set","dirty","_fg","_bg","_depth","_align","_valign","position","_position","minWidth","_minWidth","maxWidth","_maxWidth","_width","minHeight","_minHeight","maxHeight","_maxHeight","_height","_x","left","_left","_right","_y","top","_top","_bottom","padLeft","_padLeft","padRight","_padRight","padTop","_padTop","padBottom","_padBottom","get","setDirty","split","name","unset","clone","other","copy","ComputedStyle","sources","s","some","Sheet","parentSheet","rules","slice","add","rule","existing","remove","splice","computeFor","filter","widgetStyle","style","styles","children","_text","_lines","_attached","_style","_usedStyle","Style.ComputedStyle","used","addChild","child","beforeIndex","removeChild","arrayDelete","old","root","positionedParent","innerLeft","innerRight","innerWidth","innerHeight","innerTop","innerBottom","updateLayout","_updateLayoutFixed","_updateLayoutRelative","_updateLayoutAbsolute","_updateLayoutStatic","_updateWidth","parentWidth","contentWidth","maxW","minW","_updateLeft","parentLeft","_updateTop","parentBottom","_updateHeight","maxH","minH","applyLayoutOffset","pos","args","Style.Style","removeStyle","addClass","removeClass","toggleClass","reduce","out","Selection","layer","arg","$","cb","after","content","detach","last","toAdd","_attach","append","dest","toAppend","appendTo","before","_detach","oldChildren","insertAfter","target","insertBefore","prepend","prependTo","_sub","replaceAll","replaceWith","t","_a","hasClass","animate","_props","_ms","clearQueue","_name","delay","dequeue","fadeIn","fadeOut","fadeTo","_opacity","fadeToggle","finish","hide","queue","_args","show","slideDown","slideToggle","slideUp","stop","toggle","_arg","on","_event","_cb","off","mouseenter","mouseleave","flags","_items","_disabled","_fired","_once","_stopOnFalse","_unique","f","disable","disabled","fired","apply","has","rootTag","stylesheet","Style.Sheet","body","select","create","endsWith","removeRule","computeStyles","Widget.Text","promptFg","from","overflow","isPrompt","showText","capitalize","clear","showPrompt","getFlavorText","fov","buf","isAnyKindOfVisible","isDirectlyVisible","isRemembered","isRevealed","isMapped","isMagicMapped","intro","hasActor","actorAt","theItem","hasItem","itemAt","standsInTile","hasTileFlag","GWM","Tile","T_STAND_IN_TILE","needObjectArticle","getFlavor","article","groundTile","depthTile","Depth","GROUND","tile","tiles","NULL","surfaceTile","SURFACE","liquidTile","LIQUID","surface","T_BRIDGE","liquid","ground","Table.Table","tableOpts","separator","lead","_addButton","onTop","arrayFindRight","dropdown","bgColor","cache","message","MessageCache","showArchive","isOnTop","confirmed","mix","fastForward","fadePercent","totalMessageCount","dbuf","dM","startM","endM","currentM","startY","endY","dy","_confirmed","j","fgColor","pause","wrapText","waitForAck","confirmAll","cellCache","lastX","lastY","lastMap","subject","highlight","entryAt","entry","highlightRow","updateCellCache","hasMapFlag","Map","MAP_SIDEBAR_TILES_CHANGED","forRect","hasEntityFlag","Entity","L_LIST_IN_SIDEBAR","clearMapFlag","_makeActorEntry","_makeItemEntry","_makeCellEntry","_getPriority","hasCellFlag","Cell","STABLE_MEMORY","_isDim","_addActorEntry","distanceBetween","isPlayer","_addItemEntry","_addCellEntry","findEntries","cx","cy","grid","alloc","eachActor","eachItem","free","update","updateFor","updateAt","memory","drawBounds","currentEntry","usedLines","layers","freeBuffers","inDialog","canvas","baseBuffer","canvasBuffer","base","pop","duration","pct","elapsed","textOpts","textWidget","dlg","Widget.buildDialog","TIMEOUT","textArgs","allowCancel","ok","cancel","okOpts","cancelOpts","builder","Widget.Button","OK","CANCEL","Enter","keymap","maxLength","Widget.Input","showWidget","INPUT","prompt","promptOpts","promptWidget","input","inputWidget","offsetX","offsetY","_subject","snap","lock","lockX","lockY","halfWidth","halfHeight","toMapX","toMapY","toInnerX","toInnerY","centerOn","showMap","updateOffset","hasXY","edgeX","edgeY","thirdW","thirdH","blackOutRect","mixer","sprite","Mixer","mapX","mapY","drawer","drawSprite"],"mappings":"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"}