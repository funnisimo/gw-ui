{"version":3,"file":"gw-ui.min.js","sources":["../js/flavor.js","../js/sidebar.js","../js/menu.js","../js/message.js","../js/ui.js","../js/viewport.js"],"sourcesContent":["import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor {\n    constructor(opts) {\n        var _a, _b, _c;\n        this.text = '';\n        this.needsUpdate = false;\n        this.isPrompt = false;\n        this.overflow = false;\n        this.ui = opts.ui;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.fg = GWU.color.from((_a = opts.fg) !== null && _a !== void 0 ? _a : 'flavorText');\n        this.bg = GWU.color.from((_b = opts.bg) !== null && _b !== void 0 ? _b : 'black');\n        this.promptFg = GWU.color.from((_c = opts.promptFg) !== null && _c !== void 0 ? _c : 'flavorPrompt');\n    }\n    showText(text) {\n        this.text = GWU.text.capitalize(text);\n        this.needsUpdate = true;\n        this.isPrompt = false;\n        this.draw();\n    }\n    clear() {\n        this.text = '';\n        this.needsUpdate = true;\n        this.isPrompt = false;\n        this.draw();\n    }\n    showPrompt(text) {\n        this.text = GWU.text.capitalize(text);\n        this.needsUpdate = true;\n        this.isPrompt = true;\n        this.draw();\n    }\n    draw(force = false) {\n        if (!force && !this.needsUpdate)\n            return false;\n        const buffer = this.ui.buffer;\n        const color = this.isPrompt ? this.fg : this.promptFg;\n        const nextY = buffer.wrapText(this.bounds.x, this.bounds.y, this.bounds.width, this.text, color, this.bg);\n        this.overflow = nextY !== this.bounds.y + 1;\n        this.ui.render();\n        this.needsUpdate = false;\n        return true;\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'you see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'you sense';\n        }\n        else if (isRemembered) {\n            intro = 'you remember';\n        }\n        else if (isMapped) {\n            intro = 'you expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(GWM.flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(GWM.flags.Depth.GROUND) || GWM.tile.tiles.NULL;\n        const surfaceTile = cell.depthTile(GWM.flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(GWM.flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(GWM.flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(GWM.flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('§intro§ §text§.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.changed = false;\n        this.sidebarY = -1;\n    }\n    draw(_sidebar) { }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    draw(sidebar) {\n        this.actor.drawStatus(sidebar);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    draw(sidebar) {\n        this.item.drawStatus(sidebar);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(sidebar) {\n        this.cell.drawStatus(sidebar);\n    }\n}\nexport class Sidebar {\n    constructor(opts) {\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.mixer = new GWU.sprite.Mixer();\n        this.currentY = 0;\n        this.follow = null;\n        this.highlight = null;\n        this.currentEntry = null;\n        this.ui = opts.ui;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.fg = GWU.color.from(opts.fg || 'purple');\n    }\n    get buffer() {\n        return this.ui.buffer;\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    toInnerY(y) {\n        return GWU.clamp(y - this.bounds.top, 0, this.bounds.height);\n    }\n    updateHighlight(e) {\n        if (!this.contains(e)) {\n            this.clearHighlight();\n            return false;\n        }\n        return this.highlightRow(this.toInnerY(e.y));\n    }\n    highlightRow(innerY) {\n        const y = GWU.clamp(innerY, 0, this.bounds.height);\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        if (this.highlight) {\n            // @ts-ignore\n            this.highlight.highlight = true;\n            return true;\n        }\n        return false;\n    }\n    clearHighlight() {\n        this.highlight = null;\n    }\n    updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasEntityFlag(GWM.flags.Entity.L_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(GWM.flags.Cell.STABLE_MEMORY)\n                ? 3\n                : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return !!this.highlight || entry.priority > 2;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    findEntries(map, cx, cy, fov) {\n        if (map === this.lastMap && cx === this.lastX && cy === this.lastY)\n            return;\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (done[x][y])\n                return;\n            if (this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (done[x][y])\n                return;\n            if (this._addItemEntry(i, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n    }\n    clearSidebar() {\n        this.ui.buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n    }\n    drawFor(subject) {\n        return this.draw(subject.memory || subject.map, subject.x, subject.y, subject.fov);\n    }\n    draw(map, cx, cy, fov) {\n        if (arguments.length < 3) {\n            if (this.follow) {\n                return this.drawFor(this.follow);\n            }\n            throw new Error('Not following a subject - map, cx, cy required.');\n        }\n        this.updateCellCache(map);\n        this.findEntries(map, cx, cy, fov);\n        this.clearSidebar();\n        this.currentY = this.bounds.y;\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        for (let i = 0; i < this.entries.length && this.currentY < this.bounds.bottom; ++i) {\n            this.currentEntry = this.entries[i];\n            this.currentEntry.sidebarY = this.currentY;\n            this.currentEntry.draw(this);\n            ++this.currentY; // skip a line\n        }\n        this.currentEntry = null;\n        return true;\n    }\n    drawTitle(cell, title, fg) {\n        fg = GWU.color.from(fg || this.fg);\n        const fgColor = this._isDim(this.currentEntry)\n            ? fg.clone().darken(50)\n            : fg;\n        this.buffer.drawSprite(this.bounds.x + 1, this.currentY, cell);\n        this.buffer.wrapText(this.bounds.x + 3, this.currentY, this.bounds.width - 3, title, fgColor);\n        ++this.currentY;\n    }\n    drawTextLine(text, fg) {\n        fg = GWU.color.from(fg || this.fg);\n        const fgColor = this._isDim(this.currentEntry)\n            ? fg.clone().darken(50)\n            : fg;\n        this.buffer.drawText(this.bounds.x + 3, this.currentY, text, fgColor, this.bounds.width - 3);\n        ++this.currentY;\n    }\n    drawProgressBar(val, max, text, color, bg, fg) {\n        color = GWU.color.from(color || this.fg);\n        bg = GWU.color.from(bg || color.clone().darken(50));\n        fg = GWU.color.from(fg || color.clone().lighten(50));\n        if (this._isDim(this.currentEntry)) {\n            bg.darken(50);\n            fg.darken(50);\n            color.darken(50);\n        }\n        this.buffer.fillRect(this.bounds.x + 1, this.currentY, this.bounds.width - 1, 1, undefined, undefined, bg);\n        const len = Math.floor(((this.bounds.width - 1) * val) / max);\n        this.buffer.fillRect(this.bounds.x + 1, this.currentY, len, 1, undefined, undefined, color);\n        const title = GWU.text.center(text, this.bounds.width);\n        this.buffer.drawText(this.bounds.x + 1, this.currentY, title, fg, undefined, this.bounds.width - 1 // just in case title is too long\n        );\n        ++this.currentY;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Button {\n    constructor(text) {\n        this.hovered = false;\n        this.x = 999;\n        this.text = text;\n    }\n    get width() {\n        return this.text.length;\n    }\n}\nexport class ActionButton extends Button {\n    constructor(text, fn) {\n        super(text);\n        this.fn = fn;\n    }\n    activate() {\n        return this.fn(this);\n    }\n}\nexport class DropDownButton extends Button {\n    constructor(menu, parent, text, buttons) {\n        super(text);\n        this.buttons = [];\n        this.parent = null;\n        this.menu = menu;\n        this.parent = parent;\n        this.text = text;\n        this.bounds = new GWU.xy.Bounds(0, 0, 0, 0);\n        Object.entries(buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n        this.buttons.forEach((b, i) => {\n            if (b instanceof DropDownButton) {\n                b.setBounds(this.bounds.x, this.bounds.y + i, this.bounds.width);\n            }\n        });\n    }\n    addButton(text, config) {\n        if (this.buttons.length >= this.menu.ui.buffer.height - 1) {\n            throw new Error('Too many menu options.');\n        }\n        let button;\n        if (typeof config === 'function') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this.menu, this, text, config);\n        }\n        this.buttons.push(button);\n        ++this.bounds.height;\n        this.bounds.width = Math.max(this.bounds.width, text.length + 2);\n    }\n    setBounds(px, py, pwidth) {\n        const right = px + pwidth;\n        const left = px;\n        const totalWidth = this.menu.ui.buffer.width;\n        if (this.bounds.width < totalWidth - right) {\n            this.bounds.x = right;\n        }\n        else if (this.bounds.width < left) {\n            this.bounds.x = left - this.bounds.width;\n        }\n        else {\n            throw new Error('Menu does not fit - too wide.');\n        }\n        const totalHeight = this.menu.ui.buffer.height;\n        if (this.bounds.height <= totalHeight - py) {\n            this.bounds.y = py;\n        }\n        else if (this.bounds.height < totalHeight) {\n            this.bounds.y = totalHeight - this.bounds.height - 1;\n        }\n        else {\n            throw new Error('Menu does not fit - too tall.');\n        }\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    buttonAt(e) {\n        const index = e.y - this.bounds.y;\n        return this.buttons[index] || null;\n    }\n    drawInto(buffer) {\n        const width = this.bounds.width;\n        const height = this.bounds.height;\n        const x = this.bounds.x;\n        let y = this.bounds.y;\n        buffer.fillRect(x, y, width, height, 0, 0, this.menu.hoverBg);\n        // Now draw the individual buttons...\n        this.buttons.forEach((b) => {\n            buffer.drawText(x, y, b.text, b.hovered ? this.menu.hoverFg : this.menu.fg);\n            ++y;\n        });\n        if (this.parent) {\n            this.parent.drawInto(buffer);\n        }\n    }\n}\nexport async function showDropDown(menu, button) {\n    const ui = button.menu.ui;\n    // Start dialog\n    const dialog = ui.startDialog();\n    let activeButton = button;\n    await ui.loop.run({\n        // @ts-ignore\n        mousemove: (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            let newActive = activeButton;\n            while (newActive && !newActive.contains(e)) {\n                newActive = newActive.parent;\n            }\n            if (newActive) {\n                activeButton = newActive;\n            }\n            else {\n                if (menu.contains(e)) {\n                    menu.needsRedraw = true;\n                    const button = menu.getButtonAt(e.x, e.y);\n                    if (button instanceof DropDownButton) {\n                        activeButton.hovered = false;\n                        activeButton = button;\n                        activeButton.hovered = true;\n                    }\n                    else {\n                        activeButton = null; // done.\n                        if (button)\n                            button.hovered = true;\n                    }\n                }\n            }\n            return !activeButton; // if no active button we are done (should not happen)\n        },\n        // @ts-ignore\n        click: async (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            if (!activeButton.contains(e)) {\n                menu.needsRedraw = true;\n                return true; // we are done\n            }\n            const actionButton = activeButton.buttonAt(e);\n            if (!actionButton) {\n                return true; // weird, but we are done.\n            }\n            if (actionButton instanceof ActionButton) {\n                return actionButton.activate(); // actions return true if they want to close the menu (otherwise the menu stays open)\n            }\n        },\n        // @ts-ignore\n        draw: () => {\n            if (!activeButton)\n                return;\n            ui.resetDialogBuffer(dialog);\n            activeButton.drawInto(dialog);\n            menu.drawInto(dialog);\n            dialog.render();\n        },\n    });\n    ui.finishDialog();\n    menu.needsRedraw = true;\n}\nexport class Menu {\n    constructor(opts) {\n        this.buttons = [];\n        this.separator = ' | ';\n        this.lead = ' ';\n        this.needsRedraw = false;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.ui = opts.ui;\n        this.needsRedraw = true;\n        this.fg = GWU.color.from(opts.fg || 'white');\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.hoverFg = GWU.color.from(opts.hoverFg || 'teal');\n        this.hoverBg = GWU.color.from(opts.hoverBg || 'black');\n        Object.entries(opts.buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n        if (opts.separator) {\n            this.separator = opts.separator;\n        }\n        if (opts.lead !== undefined) {\n            this.lead = opts.lead ? opts.lead : '';\n        }\n    }\n    contains(e) {\n        return this.bounds.contains(e);\n    }\n    handleMouse(e) {\n        // turn off all the hovers\n        this.buttons.forEach((b) => {\n            if (b.hovered) {\n                this.needsRedraw = true;\n                b.hovered = false;\n            }\n        });\n        // highlight one of them...\n        if (this.bounds.contains(e.x, e.y)) {\n            this.needsRedraw = true;\n            let hovered = null;\n            this.buttons.forEach((b) => {\n                b.hovered = false;\n                if (b.x < e.x) {\n                    hovered = b;\n                }\n            });\n            if (hovered) {\n                // @ts-ignore\n                hovered.hovered = true;\n            }\n            return true; // we handled the message\n        }\n        return false;\n    }\n    getButtonAt(x, _y) {\n        return GWU.arrayFindRight(this.buttons, (b) => b.x < x) || null;\n    }\n    async handleClick(e) {\n        if (this.bounds.contains(e.x, e.y)) {\n            // get active button\n            let activeButton = this.getButtonAt(e.x, e.y);\n            if (!activeButton)\n                return false;\n            if (activeButton instanceof DropDownButton) {\n                await showDropDown(this, activeButton);\n            }\n            else if (activeButton instanceof ActionButton) {\n                await activeButton.activate();\n            }\n            return true;\n        }\n        return false;\n    }\n    addButton(text, config) {\n        this.needsRedraw = true;\n        const x = this.buttons.reduce((len, button) => len + button.text.length + this.separator.length, this.lead.length + this.bounds.x);\n        if (x + text.length + 2 > this.bounds.width) {\n            throw new Error('Button makes menu too wide :' + text);\n        }\n        let button;\n        if (typeof config === 'function') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this, null, text, config);\n            button.setBounds(x, this.bounds.y ? this.bounds.y - 1 : 1, 0);\n        }\n        button.x = x;\n        this.buttons.push(button);\n    }\n    draw(force = false) {\n        if (!this.needsRedraw && !force)\n            return false;\n        const buffer = this.ui.buffer;\n        return this.drawInto(buffer);\n    }\n    drawInto(buffer) {\n        this.needsRedraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, 0, 0, 0);\n        let x = this.bounds.x;\n        const y = this.bounds.y;\n        buffer.drawText(x, y, this.lead, this.fg);\n        this.buttons.forEach((b) => {\n            const color = b.hovered ? this.hoverFg : this.fg;\n            buffer.drawText(b.x, y, b.text, color);\n            x = b.x + b.text.length;\n            buffer.drawText(x, y, this.separator, this.fg);\n        });\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Messages {\n    constructor(opts) {\n        const buffer = opts.ui.buffer;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, Math.min(opts.width || buffer.width, buffer.width - opts.x), Math.min(opts.height || buffer.height, buffer.height - opts.y));\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: buffer.height,\n        });\n        this.ui = opts.ui;\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.fg = GWU.color.from(opts.fg || 'white');\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    get needsUpdate() {\n        return this.cache.needsUpdate;\n    }\n    get buffer() {\n        return this.ui.buffer;\n    }\n    draw(force = false) {\n        if (!force && !this.cache.needsUpdate)\n            return false;\n        let messageColor;\n        const tempColor = GWU.color.make();\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        this.buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', 0, this.bg);\n        this.cache.forEach((msg, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            messageColor = tempColor;\n            messageColor.copy(this.fg);\n            if (confirmed) {\n                messageColor.mix(this.bg, 50);\n                messageColor.mix(this.bg, (75 * i) / (2 * this.bounds.height));\n            }\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = this.toBufferY(localY);\n            GWU.text.eachChar(msg, (c, color, _bg, j) => {\n                const x = this.toBufferX(j);\n                if (color && messageColor !== color && confirmed) {\n                    color.mix(this.bg, 50);\n                    color.mix(this.bg, (75 * i) / (2 * this.bounds.height));\n                }\n                messageColor = color || tempColor;\n                this.buffer.draw(x, y, c, messageColor, this.bg);\n            });\n            // for (let j = GWU.text.length(msg); j < this.bounds.width; j++) {\n            //     const x = this.toBufferX(j);\n            //     this.buffer.draw(x, y, ' ', this.bg, this.bg);\n            // }\n        });\n        this.cache.needsUpdate = false;\n        return true;\n    }\n    toBufferY(y) {\n        return this.bounds.y + y;\n    }\n    toBufferX(x) {\n        return this.bounds.x + x;\n    }\n    async showArchive() {\n        let reverse, fadePercent, currentMessageCount = 0;\n        let fastForward;\n        // Count the number of lines in the archive.\n        let totalMessageCount = 0;\n        this.cache.forEach(() => ++totalMessageCount);\n        if (totalMessageCount <= this.bounds.height)\n            return;\n        const isOnTop = this.bounds.y < 10;\n        const dbuf = this.ui.startDialog();\n        // Pull-down/pull-up animation:\n        for (reverse = 0; reverse <= 1; reverse++) {\n            fastForward = false;\n            for (currentMessageCount = reverse\n                ? totalMessageCount\n                : this.bounds.height; reverse\n                ? currentMessageCount >= this.bounds.height\n                : currentMessageCount <= totalMessageCount; currentMessageCount += reverse ? -1 : 1) {\n                this.ui.resetDialogBuffer(dbuf);\n                // Print the message archive text to the dbuf.\n                this.cache.forEach((msg, _confirmed, j) => {\n                    if (j >= currentMessageCount || j >= dbuf.height)\n                        return;\n                    const y = isOnTop ? j : dbuf.height - j - 1;\n                    fadePercent = Math.floor((50 * (currentMessageCount - j)) / currentMessageCount);\n                    const fg = this.fg.clone().mix(this.bg, fadePercent);\n                    dbuf.wrapText(this.toBufferX(0), y, this.bounds.width, msg, fg, this.bg);\n                });\n                dbuf.render();\n                if (!fastForward &&\n                    (await this.ui.loop.pause(reverse ? 15 : 45))) {\n                    fastForward = true;\n                    // dequeueEvent();\n                    currentMessageCount = reverse\n                        ? this.bounds.height + 1\n                        : totalMessageCount - 1; // skip to the end\n                }\n            }\n            if (!reverse) {\n                const y = isOnTop ? 0 : dbuf.height - 1;\n                const x = this.bounds.x > 8\n                    ? this.bounds.x - 8 // to left of box\n                    : Math.min(this.bounds.x + this.bounds.width, // just to right of box\n                    this.buffer.width - 8 // But definitely on the screen - overwrite some text if necessary\n                    );\n                dbuf.wrapText(x, y, 8, '--DONE--', this.bg, this.fg);\n                dbuf.render();\n                await this.ui.loop.waitForAck();\n            }\n        }\n        this.ui.finishDialog();\n        this.cache.confirmAll();\n        this.cache.needsUpdate = true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class UI {\n    constructor(opts = {}) {\n        this.layers = [];\n        this.freeBuffers = [];\n        this.inDialog = false;\n        if (!opts.canvas)\n            throw new Error('Need a canvas.');\n        this.canvas = opts.canvas;\n        this.buffer = opts.canvas.buffer;\n        this.loop = opts.loop || GWU.loop;\n    }\n    render() {\n        this.buffer.render();\n    }\n    startDialog() {\n        this.inDialog = true;\n        const base = this.buffer || this.canvas.buffer;\n        this.layers.push(base);\n        this.buffer =\n            this.freeBuffers.pop() || new GWU.canvas.Buffer(this.canvas);\n        // UI_OVERLAY._data.forEach( (c) => c.opacity = 0 );\n        this.buffer.copy(base);\n        return this.buffer;\n    }\n    resetDialogBuffer(dest) {\n        const base = this.layers[this.layers.length - 1] || this.canvas.buffer;\n        dest.copy(base);\n    }\n    finishDialog() {\n        if (!this.inDialog)\n            return;\n        if (this.buffer !== this.canvas.buffer) {\n            this.freeBuffers.push(this.buffer);\n        }\n        this.buffer = this.layers.pop() || this.canvas.buffer;\n        this.buffer.render();\n        this.inDialog = this.layers.length > 0;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Viewport {\n    constructor(opts) {\n        this.center = false;\n        this.snap = false;\n        this.filter = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.lockX = false;\n        this.lockY = false;\n        this._follow = null;\n        this.ui = opts.ui;\n        this.snap = opts.snap || false;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.filter = opts.filter || null;\n        if (opts.lock) {\n            this.lockX = true;\n            this.lockY = true;\n        }\n        else {\n            if (opts.lockX) {\n                this.lockX = true;\n            }\n            if (opts.lockY) {\n                this.lockY = true;\n            }\n        }\n    }\n    get follow() {\n        return this._follow;\n    }\n    set follow(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n            this.centerOn(subject.x, subject.y, subject.map);\n        }\n        this._follow = subject;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(x, y, map) {\n        this.center = true;\n        this.updateOffset({ x, y }, map);\n    }\n    updateOffset(focus, map) {\n        const bounds = map || this.bounds;\n        if (focus && GWU.xy.contains(bounds, focus.x, focus.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (focus.x < left || focus.x > right) {\n                    left = this.offsetX = focus.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (focus.y < top || focus.y > bottom) {\n                    top = this.offsetY = focus.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= focus.x) {\n                    this.offsetX = Math.max(0, focus.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= focus.x) {\n                    this.offsetX = Math.min(focus.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= focus.y) {\n                    this.offsetY = Math.max(0, focus.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= focus.y) {\n                    this.offsetY = Math.min(focus.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = focus.x - this.halfWidth();\n                this.offsetY = focus.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = focus.x;\n                this.offsetY = focus.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    drawFor(subject) {\n        if (!subject.map)\n            throw new Error('No map!');\n        return this.draw(subject.memory || subject.map, subject.fov);\n    }\n    draw(map, fov) {\n        if (!map) {\n            if (!this._follow)\n                throw new Error('Either map or follow must be set.');\n            return this.drawFor(this._follow);\n        }\n        // if (!map.hasMapFlag(GWM.flags.Map.MAP_CHANGED)) return false;\n        this.updateOffset(this._follow, map);\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, cell, fov);\n                }\n                else {\n                    mixer.blackOut();\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                this.ui.buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n}\n"],"names":["color","install","EntryBase","constructor","this","dist","priority","changed","sidebarY","draw","_sidebar","ActorEntry","actor","super","x","y","sidebar","drawStatus","ItemEntry","item","CellEntry","cell","Button","text","hovered","width","length","ActionButton","fn","activate","DropDownButton","menu","parent","buttons","bounds","GWU","xy","Bounds","Object","entries","forEach","opts","addButton","b","i","setBounds","config","ui","buffer","height","Error","button","push","Math","max","px","py","pwidth","right","left","totalWidth","totalHeight","contains","e","buttonAt","index","drawInto","fillRect","hoverBg","drawText","hoverFg","fg","async","showDropDown","dialog","startDialog","activeButton","loop","run","mousemove","newActive","needsRedraw","getButtonAt","click","actionButton","resetDialogBuffer","render","finishDialog","_a","_b","_c","needsUpdate","isPrompt","overflow","from","bg","promptFg","showText","capitalize","clear","showPrompt","force","nextY","wrapText","getFlavorText","map","fov","buf","object","isAnyKindOfVisible","isDirectlyVisible","isRemembered","isRevealed","isMapped","isMagicMapped","intro","hasActor","actorAt","theItem","hasItem","itemAt","standsInTile","hasTileFlag","GWM","flags","Tile","T_STAND_IN_TILE","needObjectArticle","getFlavor","article","action","groundTile","depthTile","Depth","GROUND","tile","tiles","NULL","surfaceTile","SURFACE","liquidTile","LIQUID","surface","T_BRIDGE","liquid","ground","apply","separator","lead","undefined","handleMouse","_y","arrayFindRight","reduce","len","min","cache","message","MessageCache","messageColor","tempColor","make","isOnTop","msg","confirmed","copy","mix","localY","toBufferY","eachChar","c","_bg","j","toBufferX","reverse","fadePercent","fastForward","currentMessageCount","totalMessageCount","dbuf","_confirmed","floor","clone","pause","waitForAck","confirmAll","cellCache","lastX","lastY","lastMap","mixer","sprite","Mixer","currentY","follow","highlight","currentEntry","toInnerY","clamp","top","updateHighlight","highlightRow","clearHighlight","innerY","updateCellCache","hasMapFlag","Map","MAP_SIDEBAR_TILES_CHANGED","forRect","info","hasEntityFlag","Entity","L_LIST_IN_SIDEBAR","clearMapFlag","_makeActorEntry","_makeItemEntry","_makeCellEntry","_getPriority","hasCellFlag","Cell","STABLE_MEMORY","_isDim","entry","_addActorEntry","distanceBetween","isPlayer","_addItemEntry","_addCellEntry","findEntries","cx","cy","done","grid","alloc","eachActor","a","eachItem","sort","free","clearSidebar","drawFor","subject","memory","arguments","bottom","drawTitle","title","fgColor","darken","drawSprite","drawTextLine","drawProgressBar","val","lighten","center","layers","freeBuffers","inDialog","canvas","base","pop","Buffer","dest","snap","filter","offsetX","offsetY","lockX","lockY","_follow","lock","halfWidth","halfHeight","centerOn","toMapX","toMapY","toInnerX","updateOffset","focus","edgeX","edgeY","thirdW","thirdH","mapX","mapY","hasXY","drawer","drawCell","blackOut"],"mappings":"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"}