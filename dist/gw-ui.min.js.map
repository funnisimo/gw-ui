{"version":3,"file":"gw-ui.min.js","sources":["../js/flavor.js","../js/sidebar.js","../js/menu.js","../js/message.js","../js/ui.js","../js/viewport.js"],"sourcesContent":["import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor {\n    constructor(opts) {\n        var _a, _b, _c;\n        this.text = '';\n        this.needsUpdate = false;\n        this.isPrompt = false;\n        this.overflow = false;\n        this.ui = opts.ui;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.fg = GWU.color.from((_a = opts.fg) !== null && _a !== void 0 ? _a : 'flavorText');\n        this.bg = GWU.color.from((_b = opts.bg) !== null && _b !== void 0 ? _b : 'black');\n        this.promptFg = GWU.color.from((_c = opts.promptFg) !== null && _c !== void 0 ? _c : 'flavorPrompt');\n    }\n    showText(text) {\n        this.text = GWU.text.capitalize(text);\n        this.needsUpdate = true;\n        this.isPrompt = false;\n        this.draw();\n    }\n    clear() {\n        this.text = '';\n        this.needsUpdate = true;\n        this.isPrompt = false;\n        this.draw();\n    }\n    showPrompt(text) {\n        this.text = GWU.text.capitalize(text);\n        this.needsUpdate = true;\n        this.isPrompt = true;\n        this.draw();\n    }\n    draw(force = false) {\n        if (!force && !this.needsUpdate)\n            return false;\n        const buffer = this.ui.buffer;\n        const color = this.isPrompt ? this.fg : this.promptFg;\n        const nextY = buffer.wrapText(this.bounds.x, this.bounds.y, this.bounds.width, this.text, color, this.bg);\n        this.overflow = nextY !== this.bounds.y + 1;\n        this.ui.render();\n        this.needsUpdate = false;\n        return true;\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'you see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'you sense';\n        }\n        else if (isRemembered) {\n            intro = 'you remember';\n        }\n        else if (isMapped) {\n            intro = 'you expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(GWM.flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(GWM.flags.Depth.GROUND) || GWM.tile.tiles.NULL;\n        const surfaceTile = cell.depthTile(GWM.flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(GWM.flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(GWM.flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(GWM.flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('§intro§ §text§.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.changed = false;\n        this.sidebarY = -1;\n    }\n    draw(_sidebar) { }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    draw(sidebar) {\n        this.actor.drawStatus(sidebar);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    draw(sidebar) {\n        this.item.drawStatus(sidebar);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(sidebar) {\n        this.cell.drawStatus(sidebar);\n    }\n}\nexport class Sidebar {\n    constructor(opts) {\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.mixer = new GWU.sprite.Mixer();\n        this.currentY = 0;\n        this.follow = null;\n        this.highlight = null;\n        this.currentEntry = null;\n        this.ui = opts.ui;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.fg = GWU.color.from(opts.fg || 'purple');\n    }\n    get buffer() {\n        return this.ui.buffer;\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    toInnerY(y) {\n        return GWU.clamp(y - this.bounds.top, 0, this.bounds.height);\n    }\n    updateHighlight(e) {\n        if (!this.contains(e)) {\n            this.clearHighlight();\n            return false;\n        }\n        return this.highlightRow(this.toInnerY(e.y));\n    }\n    highlightRow(innerY) {\n        const y = GWU.clamp(innerY, 0, this.bounds.height);\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        if (this.highlight) {\n            // @ts-ignore\n            this.highlight.highlight = true;\n            return true;\n        }\n        return false;\n    }\n    clearHighlight() {\n        this.highlight = null;\n    }\n    updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasEntityFlag(GWM.flags.Entity.L_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(GWM.flags.Cell.STABLE_MEMORY)\n                ? 3\n                : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return !!this.highlight || entry.priority > 2;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    findEntries(map, cx, cy, fov) {\n        if (map === this.lastMap && cx === this.lastX && cy === this.lastY)\n            return;\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (done[x][y])\n                return;\n            if (this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (done[x][y])\n                return;\n            if (this._addItemEntry(i, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n    }\n    clearSidebar() {\n        this.ui.buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n    }\n    drawFor(subject) {\n        return this.draw(subject.memory || subject.map, subject.x, subject.y, subject.fov);\n    }\n    draw(map, cx, cy, fov) {\n        if (arguments.length < 3) {\n            if (this.follow) {\n                return this.drawFor(this.follow);\n            }\n            throw new Error('Not following a subject - map, cx, cy required.');\n        }\n        this.updateCellCache(map);\n        this.findEntries(map, cx, cy, fov);\n        this.clearSidebar();\n        this.currentY = this.bounds.y;\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        for (let i = 0; i < this.entries.length && this.currentY < this.bounds.bottom; ++i) {\n            this.currentEntry = this.entries[i];\n            this.currentEntry.sidebarY = this.currentY;\n            this.currentEntry.draw(this);\n            ++this.currentY; // skip a line\n        }\n        this.currentEntry = null;\n        return true;\n    }\n    drawTitle(cell, title, fg) {\n        fg = GWU.color.from(fg || this.fg);\n        const fgColor = this._isDim(this.currentEntry)\n            ? fg.clone().darken(50)\n            : fg;\n        this.buffer.drawSprite(this.bounds.x + 1, this.currentY, cell);\n        this.buffer.wrapText(this.bounds.x + 3, this.currentY, this.bounds.width - 3, title, fgColor);\n        ++this.currentY;\n    }\n    drawTextLine(text, fg) {\n        fg = GWU.color.from(fg || this.fg);\n        const fgColor = this._isDim(this.currentEntry)\n            ? fg.clone().darken(50)\n            : fg;\n        this.buffer.drawText(this.bounds.x + 3, this.currentY, text, fgColor, this.bounds.width - 3);\n        ++this.currentY;\n    }\n    drawProgressBar(val, max, text, color, bg, fg) {\n        color = GWU.color.from(color || this.fg);\n        bg = GWU.color.from(bg || color.clone().darken(50));\n        fg = GWU.color.from(fg || color.clone().lighten(50));\n        if (this._isDim(this.currentEntry)) {\n            bg.darken(50);\n            fg.darken(50);\n            color.darken(50);\n        }\n        this.buffer.fillRect(this.bounds.x + 1, this.currentY, this.bounds.width - 1, 1, undefined, undefined, bg);\n        const len = Math.floor(((this.bounds.width - 1) * val) / max);\n        this.buffer.fillRect(this.bounds.x + 1, this.currentY, len, 1, undefined, undefined, color);\n        const title = GWU.text.center(text, this.bounds.width);\n        this.buffer.drawText(this.bounds.x + 1, this.currentY, title, fg, undefined, this.bounds.width - 1 // just in case title is too long\n        );\n        ++this.currentY;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Button {\n    constructor(text) {\n        this.hovered = false;\n        this.x = 999;\n        this.text = text;\n    }\n    get width() {\n        return this.text.length;\n    }\n}\nexport class ActionButton extends Button {\n    constructor(text, fn) {\n        super(text);\n        this.fn = fn;\n    }\n    activate() {\n        return this.fn(this);\n    }\n}\nexport class DropDownButton extends Button {\n    constructor(menu, parent, text, buttons) {\n        super(text);\n        this.buttons = [];\n        this.parent = null;\n        this.menu = menu;\n        this.parent = parent;\n        this.text = text;\n        this.bounds = new GWU.xy.Bounds(0, 0, 0, 0);\n        Object.entries(buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n        this.buttons.forEach((b, i) => {\n            if (b instanceof DropDownButton) {\n                b.setBounds(this.bounds.x, this.bounds.y + i, this.bounds.width);\n            }\n        });\n    }\n    addButton(text, config) {\n        if (this.buttons.length >= this.menu.ui.buffer.height - 1) {\n            throw new Error('Too many menu options.');\n        }\n        let button;\n        if (typeof config === 'function') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this.menu, this, text, config);\n        }\n        this.buttons.push(button);\n        ++this.bounds.height;\n        this.bounds.width = Math.max(this.bounds.width, text.length + 2);\n    }\n    setBounds(px, py, pwidth) {\n        const right = px + pwidth;\n        const left = px;\n        const totalWidth = this.menu.ui.buffer.width;\n        if (this.bounds.width < totalWidth - right) {\n            this.bounds.x = right;\n        }\n        else if (this.bounds.width < left) {\n            this.bounds.x = left - this.bounds.width;\n        }\n        else {\n            throw new Error('Menu does not fit - too wide.');\n        }\n        const totalHeight = this.menu.ui.buffer.height;\n        if (this.bounds.height <= totalHeight - py) {\n            this.bounds.y = py;\n        }\n        else if (this.bounds.height < totalHeight) {\n            this.bounds.y = totalHeight - this.bounds.height - 1;\n        }\n        else {\n            throw new Error('Menu does not fit - too tall.');\n        }\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    buttonAt(e) {\n        const index = e.y - this.bounds.y;\n        return this.buttons[index] || null;\n    }\n    drawInto(buffer) {\n        const width = this.bounds.width;\n        const height = this.bounds.height;\n        const x = this.bounds.x;\n        let y = this.bounds.y;\n        buffer.fillRect(x, y, width, height, 0, 0, this.menu.hoverBg);\n        // Now draw the individual buttons...\n        this.buttons.forEach((b) => {\n            buffer.drawText(x, y, b.text, b.hovered ? this.menu.hoverFg : this.menu.fg);\n            ++y;\n        });\n        if (this.parent) {\n            this.parent.drawInto(buffer);\n        }\n    }\n}\nexport async function showDropDown(menu, button) {\n    const ui = button.menu.ui;\n    // Start dialog\n    const dialog = ui.startDialog();\n    let activeButton = button;\n    await ui.loop.run({\n        // @ts-ignore\n        mousemove: (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            let newActive = activeButton;\n            while (newActive && !newActive.contains(e)) {\n                newActive = newActive.parent;\n            }\n            if (newActive) {\n                activeButton = newActive;\n                const selected = activeButton.buttonAt(e);\n                if (selected) {\n                    activeButton.buttons.forEach((b) => {\n                        b.hovered = false;\n                    });\n                    selected.hovered = true;\n                }\n            }\n            else {\n                if (menu.contains(e)) {\n                    menu.needsRedraw = true;\n                    const button = menu.getButtonAt(e.x, e.y);\n                    if (button instanceof DropDownButton) {\n                        activeButton.hovered = false;\n                        activeButton = button;\n                        activeButton.hovered = true;\n                    }\n                    else {\n                        activeButton = null; // done.\n                        if (button)\n                            button.hovered = true;\n                    }\n                }\n            }\n            return !activeButton; // if no active button we are done (should not happen)\n        },\n        // @ts-ignore\n        click: async (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            if (!activeButton.contains(e)) {\n                return true; // we are done\n            }\n            const actionButton = activeButton.buttonAt(e);\n            if (!actionButton) {\n                return true; // weird, but we are done.\n            }\n            if (actionButton instanceof ActionButton) {\n                return actionButton.activate(); // actions return true if they want to close the menu (otherwise the menu stays open)\n            }\n        },\n        // @ts-ignore\n        draw: () => {\n            if (!activeButton)\n                return;\n            ui.resetDialogBuffer(dialog);\n            activeButton.drawInto(dialog);\n            menu.drawInto(dialog);\n            dialog.render();\n        },\n    });\n    ui.finishDialog();\n    menu.needsRedraw = true;\n}\nexport class Menu {\n    constructor(opts) {\n        this.buttons = [];\n        this.separator = ' | ';\n        this.lead = ' ';\n        this.needsRedraw = false;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, 1);\n        this.ui = opts.ui;\n        this.needsRedraw = true;\n        this.fg = GWU.color.from(opts.fg || 'white');\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.hoverFg = GWU.color.from(opts.hoverFg || 'teal');\n        this.hoverBg = GWU.color.from(opts.hoverBg || 'black');\n        Object.entries(opts.buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n        if (opts.separator) {\n            this.separator = opts.separator;\n        }\n        if (opts.lead !== undefined) {\n            this.lead = opts.lead ? opts.lead : '';\n        }\n    }\n    contains(e) {\n        return this.bounds.contains(e);\n    }\n    handleMouse(e) {\n        // turn off all the hovers\n        this.buttons.forEach((b) => {\n            if (b.hovered) {\n                this.needsRedraw = true;\n                b.hovered = false;\n            }\n        });\n        // highlight one of them...\n        if (this.bounds.contains(e.x, e.y)) {\n            this.needsRedraw = true;\n            let hovered = null;\n            this.buttons.forEach((b) => {\n                b.hovered = false;\n                if (b.x < e.x) {\n                    hovered = b;\n                }\n            });\n            if (hovered) {\n                // @ts-ignore\n                hovered.hovered = true;\n            }\n            return true; // we handled the message\n        }\n        return false;\n    }\n    getButtonAt(x, _y) {\n        return GWU.arrayFindRight(this.buttons, (b) => b.x < x) || null;\n    }\n    async handleClick(e) {\n        if (this.bounds.contains(e.x, e.y)) {\n            // get active button\n            let activeButton = this.getButtonAt(e.x, e.y);\n            if (!activeButton)\n                return false;\n            if (activeButton instanceof DropDownButton) {\n                await showDropDown(this, activeButton);\n            }\n            else if (activeButton instanceof ActionButton) {\n                await activeButton.activate();\n            }\n            return true;\n        }\n        return false;\n    }\n    addButton(text, config) {\n        this.needsRedraw = true;\n        const x = this.buttons.reduce((len, button) => len + button.text.length + this.separator.length, this.lead.length + this.bounds.x);\n        if (x + text.length + 2 > this.bounds.width) {\n            throw new Error('Button makes menu too wide :' + text);\n        }\n        let button;\n        if (typeof config === 'function') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this, null, text, config);\n            button.setBounds(x, this.bounds.y ? this.bounds.y - 1 : 1, 0);\n        }\n        button.x = x;\n        this.buttons.push(button);\n    }\n    draw(force = false) {\n        if (!this.needsRedraw && !force)\n            return false;\n        const buffer = this.ui.buffer;\n        return this.drawInto(buffer);\n    }\n    drawInto(buffer) {\n        this.needsRedraw = false;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, 0, 0, 0);\n        let x = this.bounds.x;\n        const y = this.bounds.y;\n        buffer.drawText(x, y, this.lead, this.fg);\n        this.buttons.forEach((b) => {\n            const color = b.hovered ? this.hoverFg : this.fg;\n            buffer.drawText(b.x, y, b.text, color);\n            x = b.x + b.text.length;\n            buffer.drawText(x, y, this.separator, this.fg);\n        });\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Messages {\n    constructor(opts) {\n        const buffer = opts.ui.buffer;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, Math.min(opts.width || buffer.width, buffer.width - opts.x), Math.min(opts.height || buffer.height, buffer.height - opts.y));\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: buffer.height,\n        });\n        this.ui = opts.ui;\n        this.bg = GWU.color.from(opts.bg || 'black');\n        this.fg = GWU.color.from(opts.fg || 'white');\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    get needsUpdate() {\n        return this.cache.needsUpdate;\n    }\n    get buffer() {\n        return this.ui.buffer;\n    }\n    draw(force = false) {\n        if (!force && !this.cache.needsUpdate)\n            return false;\n        let messageColor;\n        const tempColor = GWU.color.make();\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        this.buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', 0, this.bg);\n        this.cache.forEach((msg, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            messageColor = tempColor;\n            messageColor.copy(this.fg);\n            if (confirmed) {\n                messageColor.mix(this.bg, 50);\n                messageColor.mix(this.bg, (75 * i) / (2 * this.bounds.height));\n            }\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = this.toBufferY(localY);\n            GWU.text.eachChar(msg, (c, color, _bg, j) => {\n                const x = this.toBufferX(j);\n                if (color && messageColor !== color && confirmed) {\n                    color.mix(this.bg, 50);\n                    color.mix(this.bg, (75 * i) / (2 * this.bounds.height));\n                }\n                messageColor = color || tempColor;\n                this.buffer.draw(x, y, c, messageColor, this.bg);\n            });\n            // for (let j = GWU.text.length(msg); j < this.bounds.width; j++) {\n            //     const x = this.toBufferX(j);\n            //     this.buffer.draw(x, y, ' ', this.bg, this.bg);\n            // }\n        });\n        this.cache.needsUpdate = false;\n        return true;\n    }\n    toBufferY(y) {\n        return this.bounds.y + y;\n    }\n    toBufferX(x) {\n        return this.bounds.x + x;\n    }\n    async showArchive() {\n        let reverse, fadePercent, currentMessageCount = 0;\n        let fastForward;\n        // Count the number of lines in the archive.\n        let totalMessageCount = 0;\n        this.cache.forEach(() => ++totalMessageCount);\n        if (totalMessageCount <= this.bounds.height)\n            return;\n        const isOnTop = this.bounds.y < 10;\n        const dbuf = this.ui.startDialog();\n        // Pull-down/pull-up animation:\n        for (reverse = 0; reverse <= 1; reverse++) {\n            fastForward = false;\n            for (currentMessageCount = reverse\n                ? totalMessageCount\n                : this.bounds.height; reverse\n                ? currentMessageCount >= this.bounds.height\n                : currentMessageCount <= totalMessageCount; currentMessageCount += reverse ? -1 : 1) {\n                this.ui.resetDialogBuffer(dbuf);\n                // Print the message archive text to the dbuf.\n                this.cache.forEach((msg, _confirmed, j) => {\n                    if (j >= currentMessageCount || j >= dbuf.height)\n                        return;\n                    const y = isOnTop ? j : dbuf.height - j - 1;\n                    fadePercent = Math.floor((50 * (currentMessageCount - j)) / currentMessageCount);\n                    const fg = this.fg.clone().mix(this.bg, fadePercent);\n                    dbuf.wrapText(this.toBufferX(0), y, this.bounds.width, msg, fg, this.bg);\n                });\n                dbuf.render();\n                if (!fastForward &&\n                    (await this.ui.loop.pause(reverse ? 15 : 45))) {\n                    fastForward = true;\n                    // dequeueEvent();\n                    currentMessageCount = reverse\n                        ? this.bounds.height + 1\n                        : totalMessageCount - 1; // skip to the end\n                }\n            }\n            if (!reverse) {\n                const y = isOnTop ? 0 : dbuf.height - 1;\n                const x = this.bounds.x > 8\n                    ? this.bounds.x - 8 // to left of box\n                    : Math.min(this.bounds.x + this.bounds.width, // just to right of box\n                    this.buffer.width - 8 // But definitely on the screen - overwrite some text if necessary\n                    );\n                dbuf.wrapText(x, y, 8, '--DONE--', this.bg, this.fg);\n                dbuf.render();\n                await this.ui.loop.waitForAck();\n            }\n        }\n        this.ui.finishDialog();\n        this.cache.confirmAll();\n        this.cache.needsUpdate = true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class UI {\n    constructor(opts = {}) {\n        this.layers = [];\n        this.freeBuffers = [];\n        this.inDialog = false;\n        if (!opts.canvas)\n            throw new Error('Need a canvas.');\n        this.canvas = opts.canvas;\n        this.buffer = opts.canvas.buffer;\n        this.loop = opts.loop || GWU.loop;\n    }\n    render() {\n        this.buffer.render();\n    }\n    startDialog() {\n        this.inDialog = true;\n        const base = this.buffer || this.canvas.buffer;\n        this.layers.push(base);\n        this.buffer =\n            this.freeBuffers.pop() || new GWU.canvas.Buffer(this.canvas);\n        // UI_OVERLAY._data.forEach( (c) => c.opacity = 0 );\n        this.buffer.copy(base);\n        return this.buffer;\n    }\n    resetDialogBuffer(dest) {\n        const base = this.layers[this.layers.length - 1] || this.canvas.buffer;\n        dest.copy(base);\n    }\n    finishDialog() {\n        if (!this.inDialog)\n            return;\n        if (this.buffer !== this.canvas.buffer) {\n            this.freeBuffers.push(this.buffer);\n        }\n        this.buffer = this.layers.pop() || this.canvas.buffer;\n        this.buffer.render();\n        this.inDialog = this.layers.length > 0;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Viewport {\n    constructor(opts) {\n        this.center = false;\n        this.snap = false;\n        this.filter = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.lockX = false;\n        this.lockY = false;\n        this._follow = null;\n        this.ui = opts.ui;\n        this.snap = opts.snap || false;\n        this.bounds = new GWU.xy.Bounds(opts.x, opts.y, opts.width, opts.height);\n        this.filter = opts.filter || null;\n        if (opts.lock) {\n            this.lockX = true;\n            this.lockY = true;\n        }\n        else {\n            if (opts.lockX) {\n                this.lockX = true;\n            }\n            if (opts.lockY) {\n                this.lockY = true;\n            }\n        }\n    }\n    get follow() {\n        return this._follow;\n    }\n    set follow(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n            this.centerOn(subject.x, subject.y, subject.map);\n        }\n        this._follow = subject;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    contains(e) {\n        return this.bounds.contains(e.x, e.y);\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(x, y, map) {\n        this.center = true;\n        this.updateOffset({ x, y }, map);\n    }\n    updateOffset(focus, map) {\n        const bounds = map || this.bounds;\n        if (focus && GWU.xy.contains(bounds, focus.x, focus.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (focus.x < left || focus.x > right) {\n                    left = this.offsetX = focus.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (focus.y < top || focus.y > bottom) {\n                    top = this.offsetY = focus.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= focus.x) {\n                    this.offsetX = Math.max(0, focus.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= focus.x) {\n                    this.offsetX = Math.min(focus.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= focus.y) {\n                    this.offsetY = Math.max(0, focus.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= focus.y) {\n                    this.offsetY = Math.min(focus.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = focus.x - this.halfWidth();\n                this.offsetY = focus.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = focus.x;\n                this.offsetY = focus.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    drawFor(subject) {\n        if (!subject.map)\n            throw new Error('No map!');\n        return this.draw(subject.memory || subject.map, subject.fov);\n    }\n    draw(map, fov) {\n        if (!map) {\n            if (!this._follow)\n                throw new Error('Either map or follow must be set.');\n            return this.drawFor(this._follow);\n        }\n        // if (!map.hasMapFlag(GWM.flags.Map.MAP_CHANGED)) return false;\n        this.updateOffset(this._follow, map);\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, cell, fov);\n                }\n                else {\n                    mixer.blackOut();\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                this.ui.buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n}\n"],"names":["color","install","EntryBase","constructor","this","dist","priority","changed","sidebarY","draw","_sidebar","ActorEntry","actor","super","x","y","sidebar","drawStatus","ItemEntry","item","CellEntry","cell","Button","text","hovered","width","length","ActionButton","fn","activate","DropDownButton","menu","parent","buttons","bounds","GWU","xy","Bounds","Object","entries","forEach","opts","addButton","b","i","setBounds","config","ui","buffer","height","Error","button","push","Math","max","px","py","pwidth","right","left","totalWidth","totalHeight","contains","e","buttonAt","index","drawInto","fillRect","hoverBg","drawText","hoverFg","fg","async","showDropDown","dialog","startDialog","activeButton","loop","run","mousemove","newActive","selected","needsRedraw","getButtonAt","click","actionButton","resetDialogBuffer","render","finishDialog","_a","_b","_c","needsUpdate","isPrompt","overflow","from","bg","promptFg","showText","capitalize","clear","showPrompt","force","nextY","wrapText","getFlavorText","map","fov","buf","object","isAnyKindOfVisible","isDirectlyVisible","isRemembered","isRevealed","isMapped","isMagicMapped","intro","hasActor","actorAt","theItem","hasItem","itemAt","standsInTile","hasTileFlag","GWM","flags","Tile","T_STAND_IN_TILE","needObjectArticle","getFlavor","article","action","groundTile","depthTile","Depth","GROUND","tile","tiles","NULL","surfaceTile","SURFACE","liquidTile","LIQUID","surface","T_BRIDGE","liquid","ground","apply","separator","lead","undefined","handleMouse","_y","arrayFindRight","reduce","len","min","cache","message","MessageCache","messageColor","tempColor","make","isOnTop","msg","confirmed","copy","mix","localY","toBufferY","eachChar","c","_bg","j","toBufferX","reverse","fadePercent","fastForward","currentMessageCount","totalMessageCount","dbuf","_confirmed","floor","clone","pause","waitForAck","confirmAll","cellCache","lastX","lastY","lastMap","mixer","sprite","Mixer","currentY","follow","highlight","currentEntry","toInnerY","clamp","top","updateHighlight","highlightRow","clearHighlight","innerY","updateCellCache","hasMapFlag","Map","MAP_SIDEBAR_TILES_CHANGED","forRect","info","hasEntityFlag","Entity","L_LIST_IN_SIDEBAR","clearMapFlag","_makeActorEntry","_makeItemEntry","_makeCellEntry","_getPriority","hasCellFlag","Cell","STABLE_MEMORY","_isDim","entry","_addActorEntry","distanceBetween","isPlayer","_addItemEntry","_addCellEntry","findEntries","cx","cy","done","grid","alloc","eachActor","a","eachItem","sort","free","clearSidebar","drawFor","subject","memory","arguments","bottom","drawTitle","title","fgColor","darken","drawSprite","drawTextLine","drawProgressBar","val","lighten","center","layers","freeBuffers","inDialog","canvas","base","pop","Buffer","dest","snap","filter","offsetX","offsetY","lockX","lockY","_follow","lock","halfWidth","halfHeight","centerOn","toMapX","toMapY","toInnerX","updateOffset","focus","edgeX","edgeY","thirdW","thirdH","mapX","mapY","hasXY","drawer","drawCell","blackOut"],"mappings":"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"}