{"version":3,"file":"gw-ui.min.js","sources":["../js/widget/widget.js","../js/widget/text.js","../js/widget/button.js","../js/widget/input.js","../js/widget/table.js","../js/widget/dialog.js","../js/flavor.js","../js/sidebar.js","../js/menu.js","../js/message.js","../js/ui.js","../js/viewport.js"],"sourcesContent":["import * as GWU from 'gw-utils';\nexport class Widget {\n    constructor(id, opts) {\n        this.active = false;\n        this.hovered = false;\n        this.tabStop = false;\n        this.fg = 0xfff;\n        this.bg = -1;\n        this.activeFg = 0xfff;\n        this.activeBg = -1;\n        this.hoverFg = 0xfff;\n        this.hoverBg = -1;\n        this.text = '';\n        this.align = 'left';\n        this.valign = 'middle';\n        this.bounds = new GWU.xy.Bounds(-1, -1, -1, -1); // nothing set\n        this.id = id;\n        if (opts)\n            this.init(opts);\n        this.reset();\n    }\n    init(opts) {\n        if (opts.x !== undefined)\n            this.bounds.x = opts.x;\n        if (opts.y !== undefined)\n            this.bounds.y = opts.y;\n        if (opts.width !== undefined)\n            this.bounds.width = opts.width;\n        if (opts.height !== undefined)\n            this.bounds.height = opts.height;\n        if (opts.text) {\n            this.text = opts.text;\n            if (this.bounds.width <= 0)\n                this.bounds.width = opts.text.length;\n            if (this.bounds.height <= 0)\n                this.bounds.height = 1;\n        }\n        if (this.bounds.height <= 0)\n            this.bounds.height = 1;\n        if (opts.fg !== undefined) {\n            this.fg = opts.fg;\n            this.activeFg = opts.fg;\n            this.hoverFg = opts.fg;\n        }\n        if (opts.bg !== undefined) {\n            this.bg = opts.bg;\n            this.activeBg = opts.bg;\n            this.hoverBg = opts.bg;\n        }\n        if (opts.activeFg !== undefined) {\n            this.activeFg = opts.activeFg;\n            this.hoverFg = opts.activeFg;\n        }\n        if (opts.activeBg !== undefined) {\n            this.activeBg = opts.activeBg;\n            this.hoverBg = opts.activeBg;\n        }\n        if (opts.hoverFg !== undefined)\n            this.hoverFg = opts.hoverFg;\n        if (opts.hoverBg !== undefined)\n            this.hoverBg = opts.hoverBg;\n        if (opts.tabStop !== undefined)\n            this.tabStop = opts.tabStop;\n        this.action = opts.action || this.id;\n    }\n    reset() { }\n    activate(_reverse = false) {\n        this.active = true;\n    }\n    deactivate() {\n        this.active = false;\n    }\n    contains(x, y) {\n        if (arguments.length == 1)\n            return this.bounds.contains(x);\n        return this.bounds.contains(x, y);\n    }\n    // EVENTS\n    // returns true if mouse is over this widget\n    mousemove(e, _dialog) {\n        this.hovered = this.contains(e);\n        return this.hovered;\n    }\n    tick(_e, _dialog) { }\n    // returns true if click is handled by this widget (stopPropagation)\n    click(_e, _dialog) {\n        return false;\n    }\n    // returns true if key is used by widget and you want to stopPropagation\n    keypress(_e, _dialog) {\n        return false;\n    }\n    // returns true if key is used by widget and you want to stopPropagation\n    dir(_e, _dialog) {\n        return false;\n    }\n    // DRAW\n    draw(buffer) {\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        const textLen = GWU.text.length(this.text);\n        if (this.bounds.width > textLen || this.bounds.height > 1) {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', fg, bg);\n        }\n        let x = this.bounds.x;\n        if (this.align == 'center') {\n            x += Math.floor((this.bounds.width - textLen) / 2);\n        }\n        else if (this.align == 'right') {\n            x += this.bounds.width - textLen;\n        }\n        let y = this.bounds.y; // 'top'\n        if (this.bounds.height > 1) {\n            if (this.valign == 'middle') {\n                y += Math.floor(this.bounds.height / 2);\n            }\n            else if (this.valign == 'bottom') {\n                y += this.bounds.height - 1;\n            }\n        }\n        buffer.drawText(x, y, this.text, fg, bg);\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Text extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        // if (!opts.text)\n        //     throw new Error(\n        //         'Must have text value in config for Text widget - ' + this.id\n        //     );\n        this.text = opts.text || '';\n        if (opts.wrap) {\n            this.wrap = true;\n            opts.width = opts.wrap;\n            this.lines = GWU.text.splitIntoLines(this.text, \n            // @ts-ignore\n            opts.width);\n        }\n        else {\n            const textLen = GWU.text.length(this.text);\n            opts.width = opts.width || textLen || 10;\n            if (opts.width < textLen) {\n                opts.text = GWU.text.truncate(this.text, opts.width);\n            }\n            this.lines = [this.text];\n        }\n        opts.height = Math.max(this.lines.length, opts.height || 1);\n        super.init(opts);\n    }\n    setText(text) {\n        this.text = text;\n        if (this.wrap) {\n            this.lines = GWU.text.splitIntoLines(this.text, this.bounds.width);\n        }\n        else {\n            const textLen = GWU.text.length(this.text);\n            if (textLen > this.bounds.width) {\n                this.text = GWU.text.truncate(this.text, this.bounds.width);\n            }\n            this.lines = [this.text];\n        }\n    }\n    // TODO - get text() {}, set text(v:string) { // do lines stuff }\n    draw(buffer) {\n        const fg = this.active ? this.activeFg : this.fg;\n        const bg = this.active ? this.activeBg : this.bg;\n        this.lines.forEach((line, i) => {\n            buffer.drawText(this.bounds.x, this.bounds.y + i, line, fg, bg, this.bounds.width);\n        });\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Button extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        if (!opts.text)\n            throw new Error('Must have text value in config for Button widget - ' + this.id);\n        opts.tabStop = GWU.first(opts.tabStop, true); // Can receive input (Enter)\n        super.init(opts);\n    }\n    async click(ev, dialog) {\n        if (!this.contains(ev))\n            return false;\n        await dialog.fireAction(this.action, this);\n        return true;\n    }\n    async keypress(ev, dialog) {\n        if (!ev.key)\n            return false;\n        if (ev.key === 'Enter') {\n            await dialog.fireAction(this.action, this);\n            return true;\n        }\n        return false;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Input extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        this.minLength = opts.minLength || 1;\n        if (!opts.width) {\n            opts.width = Math.max(this.minLength, 10);\n        }\n        opts.tabStop = GWU.first(opts.tabStop, true); // Need to receive input\n        super.init(opts);\n        this.default = opts.default || '';\n        this.errorFg = opts.errorFg || this.fg;\n        this.hint = opts.hint || '';\n        this.hintFg = opts.hintFg || this.errorFg;\n        this.numbersOnly = opts.numbersOnly || false;\n        this.min = GWU.first(opts.min, Number.MIN_SAFE_INTEGER);\n        this.max = GWU.first(opts.max, Number.MAX_SAFE_INTEGER);\n        if (this.bounds.width <= 0) {\n            if (this.hint)\n                this.bounds.width = this.hint.length;\n            if (this.default)\n                this.bounds.width = this.default.length;\n        }\n        if (this.bounds.height <= 0) {\n            this.bounds.height = 1;\n        }\n        this.reset();\n    }\n    reset() {\n        this.text = this.default;\n    }\n    isValid() {\n        if (this.numbersOnly) {\n            const val = Number.parseInt(this.text);\n            if (this.min !== undefined && val < this.min)\n                return false;\n            if (this.max !== undefined && val > this.max)\n                return false;\n            return val > 0;\n        }\n        return this.text.length >= this.minLength;\n    }\n    get value() {\n        if (this.numbersOnly)\n            return Number.parseInt(this.text);\n        return this.text;\n    }\n    keypress(ev, dialog) {\n        const textEntryBounds = this.numbersOnly ? ['0', '9'] : [' ', '~'];\n        if (!ev.key)\n            return false;\n        if (ev.key === 'Enter' && this.isValid()) {\n            const r = dialog.fireAction(this.action, this);\n            if (r)\n                return r.then(() => true);\n            return true;\n        }\n        if (ev.key == 'Delete' || ev.key == 'Backspace') {\n            if (this.text.length) {\n                this.text = GWU.text.spliceRaw(this.text, this.text.length - 1, 1);\n            }\n            return true;\n        }\n        else if (ev.key.length > 1) {\n            // ignore other special keys...\n            return false;\n        }\n        // eat/use all other keys\n        if (ev.key >= textEntryBounds[0] && ev.key <= textEntryBounds[1]) {\n            // allow only permitted input\n            if (this.text.length < this.bounds.width) {\n                this.text += ev.key;\n            }\n        }\n        return true;\n    }\n    draw(buffer) {\n        const x = this.bounds.x;\n        const y = this.bounds.y;\n        const fg = this.active\n            ? this.activeFg\n            : this.hovered\n                ? this.hoverFg\n                : this.fg;\n        const bg = this.active\n            ? this.activeBg\n            : this.hovered\n                ? this.hoverBg\n                : this.bg;\n        buffer.fillRect(x, y, this.bounds.width, 1, ' ', fg, bg);\n        if (!this.text.length && this.hint && this.hint.length) {\n            buffer.drawText(x, y, this.hint, this.hintFg);\n        }\n        else {\n            const color = this.isValid() ? fg : this.errorFg;\n            buffer.drawText(x, y, this.text, color);\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Column {\n    constructor(opts) {\n        this.active = false;\n        this.hovered = false;\n        this.fg = null;\n        this.bg = null;\n        this.activeFg = null;\n        this.activeBg = null;\n        this.hoverFg = null;\n        this.hoverBg = null;\n        this.header = '';\n        this.empty = '';\n        this._value = GWU.IDENTITY;\n        // align: Widget.Align = 'left';\n        // valign: Widget.VAlign = 'middle';\n        // hover: HoverType = 'cell';\n        this.x = -1;\n        this.width = -1;\n        this.index = -1;\n        GWU.object.assignOmitting('value', this, opts);\n        if (this.width <= 0) {\n            this.width = this.header.length || 1;\n        }\n        if (typeof opts.value === 'string') {\n            this._value = GWU.text.compile(opts.value);\n        }\n        else {\n            this._value = opts.value;\n        }\n    }\n    value(data, index) {\n        const v = this._value(data, index);\n        return GWU.text.truncate(v, this.width);\n    }\n}\nexport class Table extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.data = null;\n        this.selectedColumn = null;\n        this.selectedIndex = -1;\n    }\n    init(opts) {\n        if (!opts.height)\n            throw new Error('Height is required.');\n        if (!opts.columns || opts.columns.length == 0)\n            throw new Error('Must have at least 1 column.');\n        opts.tabStop = GWU.first(opts.tabStop, true);\n        super.init(opts);\n        this.headers = GWU.first(opts.headers, true);\n        this.letters = GWU.first(opts.letters, true);\n        this.columns = [];\n        this.hoverType = opts.hover || 'row';\n        this.wrapColumns = GWU.first(opts.wrapColumns, opts.wrap, true);\n        this.wrapRows = GWU.first(opts.wrapRows, opts.wrap, true);\n        this.headerFg = opts.headerFg || this.fg;\n        this.headerBg = opts.headerBg || this.bg;\n        let columnWidth = 0;\n        if (opts.letters) {\n            this.columns.push(new Column({\n                width: 2,\n                value: (_data, index) => {\n                    const letter = String.fromCharCode(97 + index);\n                    return letter + ')';\n                },\n            }));\n            columnWidth += 2;\n        }\n        if (opts.columns) {\n            opts.columns.forEach((c) => {\n                const col = new Column(c);\n                this.columns.push(col);\n                columnWidth += col.width;\n            });\n        }\n        this.columns.forEach((c, i) => (c.index = i));\n        // scrolling?  paging?  fixed columns/headers?\n        this.bounds.width =\n            this.bounds.width > 0 ? this.bounds.width : columnWidth;\n    }\n    setData(data) {\n        this.data = data;\n        this.selectedIndex = -1;\n    }\n    selectRow(index) {\n        if (!this.data)\n            return false;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        if (index >= len)\n            return false;\n        if (index < -1)\n            return false;\n        this.selectedIndex = index;\n        return true;\n    }\n    selectNextRow(wrap = true) {\n        if (!this.data)\n            return -1;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        this.selectedIndex = GWU.nextIndex(this.selectedIndex, len, wrap);\n        if (this.selectedIndex > -1 && !this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        return this.selectedIndex;\n    }\n    selectPrevRow(wrap = true) {\n        if (!this.data)\n            return -1;\n        const len = Array.isArray(this.data)\n            ? this.data.length\n            : GWU.list.length(this.data);\n        this.selectedIndex = GWU.prevIndex(this.selectedIndex, len, wrap);\n        if (this.selectedIndex > -1 && !this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        return this.selectedIndex;\n    }\n    selectNextColumn(wrap = true) {\n        if (!this.selectedColumn) {\n            this.selectedColumn = this.columns[0];\n        }\n        else {\n            let index = GWU.nextIndex(this.selectedColumn.index, this.columns.length, wrap);\n            this.selectedColumn = this.columns[index] || null;\n        }\n        if (this.selectedColumn && this.selectedIndex < 0 && this.data) {\n            this.selectedIndex = 0;\n        }\n        return this.selectedColumn;\n    }\n    selectPrevColumn(wrap = true) {\n        if (!this.selectedColumn) {\n            this.selectedColumn = this.columns[this.columns.length - 1]; // last column\n        }\n        else {\n            let index = GWU.prevIndex(this.selectedColumn.index, this.columns.length, wrap);\n            this.selectedColumn = this.columns[index] || null;\n        }\n        if (this.selectedColumn && this.selectedIndex < 0 && this.data) {\n            this.selectedIndex = 0;\n        }\n        return this.selectedColumn;\n    }\n    get selectedData() {\n        if (!this.data)\n            return null;\n        if (Array.isArray(this.data)) {\n            return this.data[this.selectedIndex] || null;\n        }\n        else {\n            return GWU.list.at(this.data, this.selectedIndex);\n        }\n    }\n    draw(buffer) {\n        const b = this.bounds;\n        buffer.fillRect(b.x, b.y, b.width, b.height, ' ', this.bg, this.bg);\n        let x = b.x;\n        this.columns.forEach((col) => {\n            this.drawColumn(buffer, col, x);\n            x += col.width;\n        });\n    }\n    drawColumn(buffer, column, x) {\n        let y = this.bounds.y;\n        if (column.header) {\n            buffer.fillRect(x, y, column.width, 1, ' ', this.headerFg, this.headerBg);\n            buffer.drawText(x, y, column.header, this.headerFg, this.headerBg, column.width);\n            ++y;\n        }\n        if (!this.data)\n            return;\n        if (Array.isArray(this.data)) {\n            this.data.forEach((item, index) => {\n                this.drawCell(buffer, column, item, index, x, y);\n                ++y;\n            });\n        }\n        else {\n            GWU.list.forEach(this.data, (item, index) => {\n                this.drawCell(buffer, column, item, index, x, y);\n                ++y;\n            });\n        }\n    }\n    drawCell(buffer, column, data, index, x, y) {\n        if (y > this.bounds.bottom)\n            return;\n        let text = column._value(data, index);\n        if (text.length == 0) {\n            text = column.empty;\n        }\n        // pick color...\n        let fg = this.fg;\n        let bg = this.bg;\n        if (this.hoverType === 'row') {\n            if (index === this.selectedIndex) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        else if (this.hoverType === 'column') {\n            if (column === this.selectedColumn) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        else if (this.hoverType === 'cell') {\n            if (column === this.selectedColumn &&\n                index === this.selectedIndex) {\n                fg = this.hoverFg;\n                bg = this.hoverBg;\n            }\n        }\n        buffer.fillRect(x, y, column.width, 1, ' ', bg, bg);\n        buffer.drawText(x, y, text, fg, bg, column.width);\n    }\n    async mousemove(e, dialog) {\n        if (!super.mousemove(e, dialog)) {\n            return false;\n        }\n        const oldColumn = this.selectedColumn;\n        const oldIndex = this.selectedIndex;\n        let x = e.x - this.bounds.x;\n        const column = (this.selectedColumn =\n            this.columns.find((c) => {\n                if (c.width >= x)\n                    return true;\n                x -= c.width;\n                return false;\n            }) || null);\n        let index = -1;\n        if (this.data) {\n            index = e.y - this.bounds.y - (this.headers ? 1 : 0);\n            if (Array.isArray(this.data)) {\n                if (index >= this.data.length)\n                    index = -1;\n            }\n        }\n        this.selectedIndex = index;\n        if (oldColumn !== column || oldIndex !== index) {\n            dialog.fireAction(this.id + '_HOVER', this);\n            dialog.requestRedraw();\n        }\n        return true;\n    }\n    dir(e) {\n        if (!e.dir)\n            return false;\n        if (e.dir[0] > 0) {\n            this.selectNextColumn(this.wrapColumns);\n        }\n        else if (e.dir[0] < 0) {\n            this.selectPrevColumn(this.wrapColumns);\n        }\n        if (e.dir[1] > 0) {\n            this.selectNextRow(this.wrapRows);\n        }\n        else if (e.dir[1] < 0) {\n            this.selectPrevRow(this.wrapRows);\n        }\n        return true;\n    }\n}\nexport function makeTable(id, opts) {\n    return new Table(id, opts);\n}\n","import * as GWU from 'gw-utils';\nexport class Dialog {\n    constructor(ui, opts) {\n        this.title = '';\n        this.titleFg = 0xfff;\n        this.bg = 0x999;\n        this.borderBg = 0x999;\n        this.widgets = [];\n        this.eventHandlers = {};\n        this._activeWidget = null;\n        this.result = null;\n        this.done = false;\n        this.timers = {};\n        this.needsRedraw = true;\n        this.ui = ui;\n        this.id = 'DIALOG';\n        this.bounds = new GWU.xy.Bounds(-1, -1, 0, 0);\n        if (opts)\n            this.init(opts);\n    }\n    init(opts) {\n        if (opts.id)\n            this.id = opts.id;\n        if (opts.x !== undefined)\n            this.bounds.x = opts.x;\n        if (opts.y !== undefined)\n            this.bounds.y = opts.y;\n        if (opts.height !== undefined)\n            this.bounds.height = opts.height;\n        if (opts.width !== undefined)\n            this.bounds.width = opts.width;\n        if (opts.title)\n            this.title = opts.title;\n        if (opts.titleFg)\n            this.titleFg = opts.titleFg;\n        if (opts.bg) {\n            this.bg = opts.bg;\n            this.borderBg = opts.bg;\n        }\n        if (opts.borderBg) {\n            this.borderBg = opts.borderBg;\n        }\n        if (opts.widgets) {\n            opts.widgets.forEach((w) => this.widgets.push(w));\n        }\n    }\n    get activeWidget() {\n        return this._activeWidget;\n    }\n    setActiveWidget(w, reverse = false) {\n        if (w === this._activeWidget)\n            return;\n        if (this._activeWidget) {\n            this._activeWidget.deactivate();\n        }\n        this._activeWidget = w;\n        if (this._activeWidget) {\n            this._activeWidget.activate(reverse);\n        }\n    }\n    contains(e) {\n        return this.bounds.contains(e);\n    }\n    requestRedraw() {\n        this.needsRedraw = true;\n    }\n    setTimeout(action, time) {\n        this.timers[action] = time;\n    }\n    clearTimeout(action) {\n        delete this.timers[action];\n    }\n    async fireAction(action, widget) {\n        const handler = this.eventHandlers[action];\n        if (handler) {\n            await handler(action, this, widget);\n        }\n    }\n    // Multiple calls result in adding more handlers\n    setEventHandlers(map) {\n        Object.assign(this.eventHandlers, map);\n    }\n    async show() {\n        this.done = false;\n        // reset any temp data...\n        this.widgets.forEach((w) => w.reset());\n        // first tabStop is the starting active Widget\n        this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n        // start dialog\n        const buffer = this.ui.startLayer();\n        // run input loop\n        await this.ui.loop.run({\n            keypress: this.keypress.bind(this),\n            dir: this.dir.bind(this),\n            mousemove: this.mousemove.bind(this),\n            click: this.click.bind(this),\n            tick: this.tick.bind(this),\n            draw: () => {\n                this.draw(buffer);\n                buffer.render();\n            },\n        }, 100);\n        // stop dialog\n        this.ui.finishLayer();\n        return this.result;\n    }\n    close(returnValue) {\n        this.result = returnValue;\n        this.done = true;\n    }\n    widgetAt(x, y) {\n        return this.widgets.find((w) => w.contains(x, y)) || null;\n    }\n    getWidget(id) {\n        return this.widgets.find((w) => w.id === id) || null;\n    }\n    nextTabstop() {\n        if (!this.activeWidget) {\n            this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n            return !!this.activeWidget;\n        }\n        const next = GWU.arrayNext(this.widgets, this.activeWidget, (w) => w.tabStop);\n        if (next) {\n            this.setActiveWidget(next);\n            return true;\n        }\n        return false;\n    }\n    prevTabstop() {\n        if (!this.activeWidget) {\n            this.setActiveWidget(this.widgets.find((w) => w.tabStop) || null);\n            return !!this.activeWidget;\n        }\n        const prev = GWU.arrayPrev(this.widgets, this.activeWidget, (w) => w.tabStop);\n        if (prev) {\n            this.setActiveWidget(prev, true);\n            return true;\n        }\n        return false;\n    }\n    async tick(e) {\n        const dt = e.dt;\n        let promises = [];\n        Object.entries(this.timers).forEach(([action, time]) => {\n            time -= dt;\n            if (time <= 0) {\n                delete this.timers[action];\n                promises.push(this.fireAction(action, null));\n            }\n            else {\n                this.timers[action] = time;\n            }\n        });\n        for (let w of this.widgets) {\n            promises.push(w.tick(e, this));\n        }\n        if (promises.length) {\n            return Promise.all(promises).then(() => this.done);\n        }\n        return this.done;\n    }\n    // TODO - async - to allow animations or events on mouseover?\n    async mousemove(e) {\n        // this.setActiveWidget(null);\n        await Promise.all(this.widgets.map(async (w) => {\n            await w.mousemove(e, this);\n            if (w.hovered && w.tabStop) {\n                this.setActiveWidget(w);\n            }\n        }));\n        return this.done;\n    }\n    async click(e) {\n        // this.mousemove(e); // make sure activeWidget is set correctly\n        // if (!this.contains(e)) {\n        //     return false;\n        // }\n        const widget = this.widgetAt(e.x, e.y);\n        let fn = null;\n        if (widget) {\n            if (await widget.click(e, this)) {\n                return this.done;\n            }\n            fn = this.eventHandlers[widget.id];\n        }\n        fn = fn || this.eventHandlers[this.id] || this.eventHandlers.click;\n        if (fn) {\n            await fn(e, this, this.activeWidget);\n        }\n        return this.done;\n    }\n    async keypress(e) {\n        if (!e.key)\n            return false;\n        if (this.activeWidget) {\n            if (await this.activeWidget.keypress(e, this)) {\n                return this.done;\n            }\n        }\n        const fn = this.eventHandlers[e.key] ||\n            this.eventHandlers[e.code] ||\n            this.eventHandlers.keypress;\n        if (fn) {\n            if (await fn(e, this, this.activeWidget)) {\n                return this.done;\n            }\n        }\n        if (e.key === 'Tab') {\n            // Next widget\n            this.nextTabstop();\n            return false; // not done\n        }\n        else if (e.key === 'TAB') {\n            // Prev Widget\n            this.prevTabstop();\n            return false; // not done\n        }\n        return this.done;\n    }\n    async dir(e) {\n        if (this.activeWidget) {\n            if (await this.activeWidget.dir(e, this)) {\n                return this.done;\n            }\n        }\n        const fn = this.eventHandlers.dir || this.eventHandlers.keypress;\n        if (fn) {\n            await fn(e, this, this.activeWidget);\n        }\n        return this.done;\n    }\n    draw(buffer, force = false) {\n        if (!this.needsRedraw && !force)\n            return;\n        // Draw dialog\n        if (this.borderBg) {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.borderBg, this.borderBg);\n            buffer.fillRect(this.bounds.x + 1, this.bounds.y + 1, this.bounds.width - 2, this.bounds.height - 2, ' ', this.bg, this.bg);\n        }\n        else {\n            buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        }\n        if (this.title) {\n            const x = this.bounds.x +\n                Math.floor((this.bounds.width - GWU.text.length(this.title)) / 2);\n            buffer.drawText(x, this.bounds.y, this.title, this.titleFg);\n        }\n        this.widgets.forEach((w) => w.draw(buffer));\n    }\n}\nexport class DialogBuilder {\n    constructor(ui, opts = {}) {\n        this.nextY = 0;\n        this.nextY = 1;\n        this.dialog = new Dialog(ui, opts);\n    }\n    with(widget) {\n        // widget bounds are set relative to the dialog top left,\n        // if we don't get any, help them out\n        // TODO - Get rid of x, y\n        this.addWidget(widget);\n        this.nextY = Math.max(this.nextY, widget.bounds.bottom + 1);\n        return this;\n    }\n    center() {\n        const size = this.dialog.ui.buffer;\n        const bounds = this.dialog.bounds;\n        bounds.x = Math.floor((size.width - bounds.width) / 2);\n        bounds.y = Math.floor((size.height - bounds.height) / 2);\n        return this;\n    }\n    place(x, y) {\n        const bounds = this.dialog.bounds;\n        bounds.x = x;\n        bounds.y = y;\n        return this;\n    }\n    done() {\n        if (this.dialog.bounds.x < 0)\n            this.dialog.bounds.x = 0;\n        if (this.dialog.bounds.y < 0)\n            this.dialog.bounds.y = 0;\n        if (this.dialog.bounds.right > this.dialog.ui.buffer.width)\n            throw new Error('Dialog is off screen!');\n        if (this.dialog.bounds.bottom > this.dialog.ui.buffer.height)\n            throw new Error('Dialog is off screen!');\n        // lock in locations\n        this.dialog.widgets.forEach((w) => {\n            w.bounds.x += this.dialog.bounds.x;\n            w.bounds.y += this.dialog.bounds.y;\n        });\n        return this.dialog;\n    }\n    addWidget(widget) {\n        const dlgBounds = this.dialog.bounds;\n        const x = widget.bounds.x;\n        const y = widget.bounds.y;\n        if (x >= 0) {\n            dlgBounds.width = Math.max(dlgBounds.width, widget.bounds.width + x);\n        }\n        else if (x < 0) {\n            widget.bounds.x = dlgBounds.width - widget.bounds.width + x;\n        }\n        if (y >= 0) {\n            dlgBounds.height = Math.max(dlgBounds.height, widget.bounds.height + y);\n        }\n        else if (y < 0) {\n            widget.bounds.y = dlgBounds.height - widget.bounds.height + y;\n        }\n        this.dialog.widgets.push(widget);\n        return widget;\n    }\n}\nexport function buildDialog(ui, opts = {}) {\n    return new DialogBuilder(ui, opts);\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nimport * as Widget from './widget';\nGWU.color.install('flavorText', 50, 40, 90);\nGWU.color.install('flavorPrompt', 100, 90, 20);\nexport class Flavor extends Widget.Text {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        opts.fg = opts.fg || 'flavorText';\n        opts.bg = opts.bg || 'black';\n        super.init(opts);\n        this.promptFg = GWU.color.from(opts.promptFg || 'flavorPrompt');\n        this.overflow = opts.overflow || false;\n        this.isPrompt = false;\n    }\n    showText(text) {\n        this.text = GWU.text.capitalize(text);\n        const len = GWU.text.length(this.text);\n        if (len > this.bounds.width) {\n            this.lines = GWU.text.splitIntoLines(this.text, this.bounds.width);\n            if (!this.overflow && this.lines.length > this.bounds.height) {\n                if (this.bounds.height == 1) {\n                    this.text = GWU.text.truncate(this.text, this.bounds.width);\n                    this.lines = [this.text];\n                }\n                else {\n                    this.lines.length = this.bounds.height;\n                }\n            }\n        }\n        else {\n            this.lines = [this.text];\n        }\n        this.isPrompt = false;\n    }\n    clear() {\n        this.text = '';\n        this.lines = [''];\n        this.isPrompt = false;\n    }\n    showPrompt(text) {\n        this.showText(text);\n        this.isPrompt = true;\n    }\n    draw(buffer) {\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        super.draw(buffer);\n    }\n    getFlavorText(map, x, y, fov) {\n        const cell = map.cell(x, y); // KNOWLEDGE / MEMORY !!!\n        let buf;\n        // let magicItem;\n        // let standsInTerrain;\n        // let subjectMoving;\n        // let prepositionLocked = false;\n        // let subject;\n        // let verb;\n        // let preposition;\n        let object = '';\n        // let adjective;\n        const isAnyKindOfVisible = fov ? fov.isAnyKindOfVisible(x, y) : true;\n        const isDirectlyVisible = fov ? fov.isDirectlyVisible(x, y) : true;\n        const isRemembered = fov ? fov.isRevealed(x, y) : false;\n        const isMapped = fov ? fov.isMagicMapped(x, y) : false;\n        let intro;\n        if (isDirectlyVisible) {\n            intro = 'you see';\n        }\n        else if (isAnyKindOfVisible) {\n            intro = 'you sense';\n        }\n        else if (isRemembered) {\n            intro = 'you remember';\n        }\n        else if (isMapped) {\n            intro = 'you expect to see';\n        }\n        else {\n            return '';\n        }\n        const actor = cell.hasActor() ? map.actorAt(x, y) : null;\n        // const player = actor?.isPlayer() ? actor : null;\n        const theItem = cell.hasItem() ? map.itemAt(x, y) : null;\n        const standsInTile = cell.hasTileFlag(GWM.flags.Tile.T_STAND_IN_TILE);\n        let needObjectArticle = false;\n        if (actor) {\n            object = actor.getFlavor({\n                color: false,\n                article: true,\n                action: true,\n            });\n            needObjectArticle = true;\n        }\n        else if (theItem) {\n            object = theItem.getFlavor({ color: false, article: true });\n            needObjectArticle = true;\n        }\n        let article = standsInTile ? ' in ' : ' on ';\n        const groundTile = cell.depthTile(GWM.flags.Depth.GROUND) || GWM.tile.tiles.NULL;\n        const surfaceTile = cell.depthTile(GWM.flags.Depth.SURFACE);\n        const liquidTile = cell.depthTile(GWM.flags.Depth.LIQUID);\n        // const gasTile = cell.depthTile(GWM.flags.Depth.GAS);\n        let surface = '';\n        if (surfaceTile) {\n            const tile = surfaceTile;\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' on ';\n            }\n            if (tile.hasTileFlag(GWM.flags.Tile.T_BRIDGE)) {\n                article = ' over ';\n            }\n            surface = surfaceTile.getFlavor() + article;\n        }\n        let liquid = '';\n        if (liquidTile) {\n            liquid = liquidTile.getFlavor() + ' covering ';\n            if (needObjectArticle) {\n                needObjectArticle = false;\n                object += ' in ';\n            }\n        }\n        if (needObjectArticle) {\n            needObjectArticle = false;\n            object += ' on ';\n        }\n        let ground = groundTile.getFlavor({ article: true });\n        buf = GWU.text.apply('§intro§ §text§.', {\n            intro,\n            text: object + surface + liquid + ground,\n        });\n        return buf;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as GWM from 'gw-map';\nimport * as Widget from './widget';\nGWU.color.install('blueBar', 15, 10, 50);\nGWU.color.install('redBar', 45, 10, 15);\nGWU.color.install('purpleBar', 50, 0, 50);\nGWU.color.install('greenBar', 10, 50, 10);\nexport class EntryBase {\n    constructor() {\n        this.dist = 0;\n        this.priority = 0;\n        this.changed = false;\n        this.sidebarY = -1;\n    }\n    draw(_buffer, _bounds) {\n        return 0;\n    }\n}\nexport class ActorEntry extends EntryBase {\n    constructor(actor) {\n        super();\n        this.actor = actor;\n    }\n    get x() {\n        return this.actor.x;\n    }\n    get y() {\n        return this.actor.y;\n    }\n    draw(buffer, bounds) {\n        return this.actor.drawStatus(buffer, bounds);\n    }\n}\nexport class ItemEntry extends EntryBase {\n    constructor(item) {\n        super();\n        this.item = item;\n    }\n    get x() {\n        return this.item.x;\n    }\n    get y() {\n        return this.item.y;\n    }\n    draw(buffer, bounds) {\n        return this.item.drawStatus(buffer, bounds);\n    }\n}\nexport class CellEntry extends EntryBase {\n    constructor(cell) {\n        super();\n        this.cell = cell;\n    }\n    get x() {\n        return this.cell.x;\n    }\n    get y() {\n        return this.cell.y;\n    }\n    draw(buffer, bounds) {\n        return this.cell.drawStatus(buffer, bounds);\n    }\n}\nexport class Sidebar extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.cellCache = [];\n        this.lastX = -1;\n        this.lastY = -1;\n        this.lastMap = null;\n        this.entries = [];\n        this.subject = null;\n        this.highlight = null;\n    }\n    init(opts) {\n        opts.fg = opts.fg || 'purple';\n        opts.bg = opts.bg || 'black';\n        super.init(opts);\n    }\n    reset() {\n        super.reset();\n        this.lastMap = null;\n        this.lastX = -1;\n        this.lastY = -1;\n    }\n    entryAt(e) {\n        return (this.entries.find((entry) => {\n            return entry.sidebarY <= e.y && entry.sidebarY !== -1;\n        }) || null);\n    }\n    mousemove(e, dialog) {\n        super.mousemove(e, dialog);\n        if (this.contains(e)) {\n            return this.highlightRow(e.y);\n        }\n        return this.clearHighlight();\n    }\n    highlightRow(y) {\n        const last = this.highlight;\n        this.highlight = null;\n        // processed in ascending y order\n        this.entries.forEach((e) => {\n            if (e.sidebarY <= y && e.sidebarY !== -1) {\n                this.highlight = e;\n            }\n        });\n        return this.highlight !== last;\n    }\n    clearHighlight() {\n        const result = !!this.highlight;\n        this.highlight = null;\n        return result;\n    }\n    updateCellCache(map) {\n        if (this.lastMap &&\n            map === this.lastMap &&\n            !map.hasMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED)) {\n            return;\n        }\n        this.lastMap = null; // Force us to regather the entries, even if at same location\n        this.cellCache.length = 0;\n        GWU.xy.forRect(map.width, map.height, (x, y) => {\n            const info = map.cell(x, y);\n            if (info.hasEntityFlag(GWM.flags.Entity.L_LIST_IN_SIDEBAR)) {\n                this.cellCache.push(info);\n            }\n        });\n        map.clearMapFlag(GWM.flags.Map.MAP_SIDEBAR_TILES_CHANGED);\n    }\n    _makeActorEntry(actor) {\n        return new ActorEntry(actor);\n    }\n    _makeItemEntry(item) {\n        return new ItemEntry(item);\n    }\n    _makeCellEntry(cell) {\n        return new CellEntry(cell);\n    }\n    _getPriority(map, x, y, fov) {\n        if (!fov) {\n            return map.cell(x, y).hasCellFlag(GWM.flags.Cell.STABLE_MEMORY)\n                ? 3\n                : 1;\n        }\n        if (fov.isDirectlyVisible(x, y)) {\n            return 1;\n        }\n        else if (fov.isAnyKindOfVisible(x, y)) {\n            return 2;\n        }\n        else if (fov.isRevealed(x, y)) {\n            return 3;\n        }\n        return -1; // not visible, or revealed\n    }\n    _isDim(entry) {\n        if (entry === this.highlight)\n            return false;\n        return entry.priority > 2 || !!this.highlight;\n    }\n    _addActorEntry(actor, map, x, y, fov) {\n        const priority = this._getPriority(map, actor.x, actor.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeActorEntry(actor);\n        entry.dist = GWU.xy.distanceBetween(x, y, actor.x, actor.y);\n        entry.priority = actor.isPlayer() ? 0 : priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addItemEntry(item, map, x, y, fov) {\n        const priority = this._getPriority(map, item.x, item.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeItemEntry(item);\n        entry.dist = GWU.xy.distanceBetween(x, y, item.x, item.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    _addCellEntry(cell, map, x, y, fov) {\n        const priority = this._getPriority(map, cell.x, cell.y, fov);\n        if (priority < 0)\n            return false;\n        const entry = this._makeCellEntry(cell);\n        entry.dist = GWU.xy.distanceBetween(x, y, cell.x, cell.y);\n        entry.priority = priority;\n        this.entries.push(entry);\n        return true;\n    }\n    findEntries(map, cx, cy, fov) {\n        if (map === this.lastMap && cx === this.lastX && cy === this.lastY)\n            return;\n        this.clearHighlight(); // If we are moving around the map, then turn off the highlight\n        this.lastMap = map;\n        this.lastX = cx;\n        this.lastY = cy;\n        this.entries.length = 0;\n        const done = GWU.grid.alloc(map.width, map.height);\n        map.eachActor((a) => {\n            const x = a.x;\n            const y = a.y;\n            if (done[x][y])\n                return;\n            if (this._addActorEntry(a, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        map.eachItem((i) => {\n            const x = i.x;\n            const y = i.y;\n            if (done[x][y])\n                return;\n            if (this._addItemEntry(i, map, cx, cy, fov)) {\n                done[x][y] = 1;\n            }\n        });\n        this.cellCache.forEach((c) => {\n            if (done[c.x][c.y])\n                return;\n            if (this._addCellEntry(c, map, cx, cy, fov)) {\n                done[c.x][c.y] = 1;\n            }\n        });\n        this.entries.sort((a, b) => {\n            if (a.priority != b.priority) {\n                return a.priority - b.priority;\n            }\n            return a.dist - b.dist;\n        });\n        GWU.grid.free(done);\n    }\n    update() {\n        if (!this.subject) {\n            throw new Error('Update requires a subject to follow.');\n        }\n        return this.updateFor(this.subject);\n    }\n    updateFor(subject) {\n        return this.updateAt(subject.memory || subject.map, subject.x, subject.y, subject.fov);\n    }\n    updateAt(map, cx, cy, fov) {\n        this.updateCellCache(map);\n        this.findEntries(map, cx, cy, fov);\n        return true;\n    }\n    draw(buffer) {\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 0, 0, this.bg);\n        // clear the row information\n        this.entries.forEach((e) => (e.sidebarY = -1));\n        const drawBounds = this.bounds.clone();\n        let currentEntry;\n        for (let i = 0; i < this.entries.length && drawBounds.height > 0; ++i) {\n            currentEntry = this.entries[i];\n            currentEntry.sidebarY = drawBounds.y;\n            let usedLines = currentEntry.draw(buffer, drawBounds);\n            if (this._isDim(currentEntry)) {\n                buffer.mix(this.bg, 50, drawBounds.x, drawBounds.y, drawBounds.width, usedLines);\n            }\n            if (usedLines) {\n                ++usedLines; // skip a space\n                drawBounds.y += usedLines;\n                drawBounds.height -= usedLines;\n            }\n        }\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class MenuButton {\n    constructor(text) {\n        this.hovered = false;\n        this.x = 999;\n        this.text = text;\n    }\n    get width() {\n        return this.text.length;\n    }\n}\nexport class ActionButton extends MenuButton {\n    constructor(text, action) {\n        super(text);\n        this.action = action;\n    }\n}\nexport class DropDownButton extends MenuButton {\n    constructor(menu, parent, text, buttons) {\n        super(text);\n        this.buttons = [];\n        this.parent = null;\n        this.menu = menu;\n        this.parent = parent;\n        this.text = text;\n        this.bounds = new GWU.xy.Bounds(0, 0, 0, 0);\n        Object.entries(buttons).forEach(([text, opts]) => {\n            this.addButton(text, opts);\n        });\n    }\n    addButton(text, config) {\n        // if (this.buttons.length >= this.menu.bounds.height - 1) {\n        //     throw new Error('Too many menu options.');\n        // }\n        let button;\n        if (typeof config === 'string') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            button = new DropDownButton(this.menu, this, text, config);\n        }\n        this.buttons.push(button);\n        ++this.bounds.height;\n        this.bounds.width = Math.max(this.bounds.width, text.length + 2);\n    }\n    setBounds(buffer, px, py, pw) {\n        // vertical reveal\n        const right = px + pw;\n        const totalWidth = buffer.width;\n        if (this.bounds.width < totalWidth - right) {\n            this.bounds.x = right;\n        }\n        else if (this.bounds.width < px) {\n            this.bounds.x = px - this.bounds.width;\n        }\n        else {\n            throw new Error('Menu does not fit - too wide.');\n        }\n        const totalHeight = buffer.height;\n        if (this.bounds.height <= totalHeight - py) {\n            this.bounds.y = py;\n        }\n        else if (this.bounds.height < totalHeight) {\n            this.bounds.y = totalHeight - this.bounds.height - 1;\n        }\n        else {\n            throw new Error('Menu does not fit - too tall.');\n        }\n        // this.buttons.forEach((b) => {\n        //     if (b instanceof DropDownButton) {\n        //         b.setBounds(buffer);\n        //     }\n        // });\n    }\n    contains(e) {\n        return this.bounds.contains(e);\n    }\n    buttonAt(e) {\n        const index = e.y - this.bounds.y;\n        return this.buttons[index] || null;\n    }\n    draw(buffer) {\n        const width = this.bounds.width;\n        const height = this.bounds.height;\n        const x = this.bounds.x;\n        let y = this.bounds.y;\n        buffer.fillRect(x, y, width, height, 0, 0, this.menu.dropBg);\n        // Now draw the individual buttons...\n        this.buttons.forEach((b) => {\n            buffer.drawText(x + 1, y, b.text, b.hovered ? this.menu.activeFg : this.menu.dropFg, b.hovered ? this.menu.activeBg : this.menu.dropBg);\n            ++y;\n        });\n        if (this.parent) {\n            this.parent.draw(buffer);\n        }\n    }\n}\nexport async function showDropDown(dialog, menu, button) {\n    // Start dialog\n    const ui = dialog.ui;\n    const buffer = ui.startLayer();\n    button.buttons.forEach((b) => (b.hovered = false));\n    button.buttons[0].hovered = true;\n    let activeButton = button;\n    await ui.loop.run({\n        Escape() {\n            return true;\n        },\n        // TODO - Tab\n        Tab() {\n            menu.activeIndex = (menu.activeIndex + 1) % menu.buttons.length;\n            const button = menu.buttons[menu.activeIndex];\n            if (button) {\n                button.hovered = true;\n            }\n            if (activeButton && button instanceof DropDownButton) {\n                activeButton.hovered = false;\n                activeButton = button;\n            }\n            else {\n                activeButton = null; // done.\n            }\n            dialog.requestRedraw();\n            return !activeButton;\n        },\n        // TODO - TAB\n        TAB() {\n            menu.activeIndex =\n                (menu.buttons.length + menu.activeIndex - 1) %\n                    menu.buttons.length;\n            const button = menu.buttons[menu.activeIndex];\n            if (button) {\n                button.hovered = true;\n            }\n            if (activeButton && button instanceof DropDownButton) {\n                activeButton.hovered = false;\n                activeButton = button;\n            }\n            else {\n                activeButton = null; // done.\n            }\n            dialog.requestRedraw();\n            return !activeButton;\n        },\n        mousemove: (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            let newActive = activeButton;\n            while (newActive && !newActive.contains(e)) {\n                newActive = newActive.parent;\n            }\n            if (newActive) {\n                activeButton = newActive;\n                const selected = activeButton.buttonAt(e);\n                if (selected) {\n                    activeButton.buttons.forEach((b) => {\n                        b.hovered = false;\n                    });\n                    selected.hovered = true;\n                    if (selected instanceof DropDownButton) {\n                        selected.buttons.forEach((b) => {\n                            b.hovered = false;\n                        });\n                        selected.buttons[0].hovered = true;\n                        selected.setBounds(ui.buffer, activeButton.bounds.x, e.y, activeButton.bounds.width);\n                        activeButton = selected;\n                    }\n                }\n            }\n            else {\n                if (menu.contains(e)) {\n                    if (dialog)\n                        dialog.requestRedraw();\n                    const button = menu.getButtonAt(e.x, e.y);\n                    if (button) {\n                        button.hovered = true;\n                        menu.activeIndex = menu.buttons.indexOf(button);\n                    }\n                    if (button instanceof DropDownButton) {\n                        activeButton.hovered = false;\n                        activeButton = button;\n                    }\n                    else {\n                        activeButton = null; // done.\n                    }\n                    if (dialog)\n                        dialog.requestRedraw();\n                }\n            }\n            return !activeButton; // if no active button we are done (should not happen)\n        },\n        click: async (e) => {\n            if (!activeButton)\n                return true; // we are done (should not happen)\n            if (!activeButton.contains(e)) {\n                menu.clearHighlight();\n                return true; // we are done\n            }\n            const actionButton = activeButton.buttonAt(e);\n            if (!actionButton) {\n                return true; // weird, but we are done.\n            }\n            if (actionButton instanceof ActionButton) {\n                menu.actionButton = actionButton;\n                await dialog.fireAction(actionButton.action, menu);\n                return true;\n            }\n            return false;\n        },\n        draw: () => {\n            if (!activeButton)\n                return;\n            ui.resetLayerBuffer(buffer);\n            activeButton.draw(buffer);\n            menu.draw(buffer);\n            buffer.render();\n        },\n    });\n    ui.finishLayer();\n    menu.clearHighlight();\n}\nexport class Menu extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.activeIndex = -1;\n        this.actionButton = null;\n    }\n    init(opts) {\n        opts.fg = GWU.first(opts.fg, 'black');\n        opts.bg = GWU.first(opts.bg, 'light_gray');\n        opts.height = opts.height || 1;\n        opts.tabStop = GWU.first(opts.tabStop, true);\n        super.init(opts);\n        this.dropFg = GWU.color.from(opts.dropFg || this.fg);\n        this.dropBg = GWU.color.from(opts.dropBg || this.bg);\n        this.buttons = [];\n        this.separator = opts.separator || ' | ';\n        this.lead = opts.lead || ' ';\n        Object.entries(opts.buttons).forEach(([text, opts]) => {\n            this._addButton(text, opts);\n        });\n        if (opts.separator) {\n            this.separator = opts.separator;\n        }\n        if (opts.lead !== undefined) {\n            this.lead = opts.lead ? opts.lead : '';\n        }\n    }\n    activate(reverse = false) {\n        super.activate(reverse);\n        if (this.activeIndex < 0)\n            this.activeIndex = reverse ? this.buttons.length - 1 : 0;\n    }\n    deactivate() {\n        super.deactivate();\n        this.activeIndex = -1;\n    }\n    mousemove(e, dialog) {\n        // turn off all the hovers\n        this.buttons.forEach((b) => {\n            if (b.hovered) {\n                b.hovered = false;\n            }\n        });\n        if (!super.mousemove(e, dialog))\n            return false;\n        // highlight one of them...\n        if (this.bounds.contains(e)) {\n            let hovered = null;\n            this.buttons.forEach((b) => {\n                b.hovered = false;\n                if (b.x < e.x) {\n                    hovered = b;\n                }\n            });\n            if (hovered) {\n                // @ts-ignore\n                hovered.hovered = true;\n                this.activeIndex = this.buttons.indexOf(hovered);\n            }\n            if (dialog)\n                dialog.requestRedraw();\n            return true; // we handled the message\n        }\n        return false;\n    }\n    clearHighlight() {\n        this.buttons.forEach((b) => {\n            b.hovered = false;\n        });\n    }\n    getButtonAt(x, _y) {\n        return GWU.arrayFindRight(this.buttons, (b) => b.x < x) || null;\n    }\n    async click(e, dialog) {\n        if (this.bounds.contains(e)) {\n            // get active button\n            let activeButton = this.getButtonAt(e.x, e.y);\n            if (!activeButton)\n                return false;\n            this.activeIndex = this.buttons.indexOf(activeButton);\n            if (activeButton instanceof DropDownButton) {\n                await showDropDown(dialog, this, activeButton);\n            }\n            else if (activeButton instanceof ActionButton) {\n                this.actionButton = activeButton;\n                await dialog.fireAction(activeButton.action, this);\n            }\n            return true;\n        }\n        return false;\n    }\n    async keypress(e, dialog) {\n        if (this.active) {\n            if (e.key === 'Tab') {\n                ++this.activeIndex;\n                if (this.activeIndex >= this.buttons.length) {\n                    this.deactivate();\n                    return false; // tabbing away from me, need to process in dialog\n                }\n                return true;\n            }\n            else if (e.key === 'TAB') {\n                --this.activeIndex;\n                if (this.activeIndex < 0) {\n                    this.deactivate();\n                    return false; // shift tabbing away from me, need to process in dialog\n                }\n                return true;\n            }\n            else if (e.key === 'Enter') {\n                const activeButton = this.buttons[this.activeIndex];\n                if (activeButton instanceof DropDownButton) {\n                    await showDropDown(dialog, this, activeButton);\n                }\n                else if (activeButton instanceof ActionButton) {\n                    this.actionButton = activeButton;\n                    await dialog.fireAction(activeButton.action, this);\n                }\n                return true;\n            }\n        }\n        return super.keypress(e, dialog);\n    }\n    _addButton(text, config) {\n        const x = this.buttons.reduce((len, button) => len + button.text.length + this.separator.length, this.lead.length + this.bounds.x);\n        if (x + text.length + 2 > this.bounds.width) {\n            throw new Error('Button makes menu too wide :' + text);\n        }\n        let button;\n        if (typeof config === 'string') {\n            button = new ActionButton(text, config);\n        }\n        else {\n            const dropdown = new DropDownButton(this, null, text, config);\n            dropdown.bounds.x = x;\n            if (this.bounds.y) {\n                dropdown.bounds.y = this.bounds.y - dropdown.bounds.height;\n            }\n            else {\n                dropdown.bounds.y = this.bounds.y + 1;\n            }\n            button = dropdown;\n        }\n        button.x = x;\n        this.buttons.push(button);\n    }\n    draw(buffer) {\n        const bg = this.active ? this.activeBg : this.bg;\n        const fg = this.active ? this.activeFg : this.fg;\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, 1, 0, bg, bg);\n        let x = this.bounds.x;\n        const y = this.bounds.y;\n        buffer.drawText(x, y, this.lead, fg);\n        this.buttons.forEach((b, i) => {\n            const hovered = i === this.activeIndex;\n            const color = hovered ? this.hoverFg : fg;\n            const bgColor = hovered ? this.hoverBg : bg;\n            buffer.drawText(b.x, y, b.text, color, bgColor);\n            x = b.x + b.text.length;\n            buffer.drawText(x, y, this.separator, fg);\n        });\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Messages extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n    }\n    init(opts) {\n        opts.x = opts.x || 0;\n        opts.y = opts.y || 0;\n        super.init(opts);\n        if (!this.bounds.height)\n            throw new Error('Must provde a height for messages widget.');\n        this.cache = new GWU.message.MessageCache({\n            width: this.bounds.width,\n            length: opts.length || 40,\n            match: (_x, _y) => {\n                return true;\n            },\n        });\n    }\n    click(e, dialog) {\n        if (!this.contains(e))\n            return false;\n        return this.showArchive(dialog).then(() => true);\n    }\n    draw(buffer) {\n        const isOnTop = this.bounds.y < 10;\n        // black out the message area\n        buffer.fillRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, ' ', this.bg, this.bg);\n        this.cache.forEach((line, confirmed, i) => {\n            if (i >= this.bounds.height)\n                return;\n            const localY = isOnTop ? this.bounds.height - i - 1 : i;\n            const y = localY + this.bounds.y;\n            buffer.drawText(this.bounds.x, y, line, this.fg);\n            if (confirmed) {\n                buffer.mix(this.bg, 50, this.bounds.x, y, this.bounds.width, 1);\n            }\n        });\n        return true;\n    }\n    async showArchive(dialog) {\n        let reverse, fadePercent = 0;\n        let fastForward;\n        const ui = dialog.ui;\n        // Count the number of lines in the archive.\n        let totalMessageCount = this.cache.length;\n        if (totalMessageCount <= this.bounds.height)\n            return false;\n        const isOnTop = this.bounds.y < 10;\n        const dbuf = ui.startLayer();\n        const fg = GWU.color.from(this.fg);\n        totalMessageCount = Math.min(totalMessageCount, isOnTop ? dbuf.height - this.bounds.top : this.bounds.bottom + 1);\n        // Pull-down/pull-up animation:\n        for (reverse = 0; reverse <= 1; reverse++) {\n            fastForward = false;\n            const dM = reverse ? -1 : 1;\n            const startM = reverse ? totalMessageCount : this.bounds.height;\n            const endM = reverse\n                ? this.bounds.height + dM + 1\n                : totalMessageCount + dM;\n            // console.log(\n            //     `setting up draw - startM=${startM}, endM=${endM}, dM=${dM}`\n            // );\n            for (let currentM = startM; currentM != endM; currentM += dM) {\n                const startY = isOnTop\n                    ? this.bounds.y + currentM - 1\n                    : this.bounds.bottom - currentM + 1;\n                const endY = isOnTop ? this.bounds.y : this.bounds.bottom;\n                const dy = isOnTop ? -1 : 1;\n                ui.resetLayerBuffer(dbuf);\n                // console.log(\n                //     `draw archive - count=${i}, startY=${startY}, endY=${endY}, dy=${dy}`\n                // );\n                dbuf.fillRect(this.bounds.x, Math.min(startY, endY), this.bounds.width, currentM, ' ', this.bg, this.bg);\n                this.cache.forEach((line, _confirmed, j) => {\n                    const y = startY + j * dy;\n                    if (isOnTop) {\n                        if (y < endY)\n                            return;\n                    }\n                    else if (y > endY)\n                        return;\n                    fadePercent = Math.floor((50 * j) / currentM);\n                    const fgColor = fg.clone().mix(this.bg, fadePercent);\n                    dbuf.drawText(this.bounds.x, y, line, fgColor, this.bg);\n                });\n                dbuf.render();\n                if (!fastForward) {\n                    if (await ui.loop.pause(reverse ? 15 : 45)) {\n                        fastForward = true;\n                        currentM = endM - 2 * dM; // skip to the end-1\n                    }\n                }\n            }\n            if (!reverse) {\n                const y = isOnTop ? 0 : dbuf.height - 1;\n                const x = this.bounds.x > 8\n                    ? this.bounds.x - 8 // to left of box\n                    : Math.min(this.bounds.x + this.bounds.width, // just to right of box\n                    dbuf.width - 8 // But definitely on the screen - overwrite some text if necessary\n                    );\n                dbuf.wrapText(x, y, 8, '--DONE--', this.bg, this.fg);\n                dbuf.render();\n                await ui.loop.waitForAck();\n            }\n        }\n        ui.finishLayer();\n        this.cache.confirmAll();\n        dialog.requestRedraw(); // everything is confirmed\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class UI {\n    constructor(opts = {}) {\n        this.layers = [];\n        this.freeBuffers = [];\n        this.inDialog = false;\n        if (!opts.canvas)\n            throw new Error('Need a canvas.');\n        this.canvas = opts.canvas;\n        this.buffer = opts.canvas.buffer;\n        this.loop = opts.loop || GWU.loop;\n    }\n    render() {\n        this.buffer.render();\n    }\n    get baseBuffer() {\n        return this.layers[this.layers.length - 1] || this.canvas.buffer;\n    }\n    get canvasBuffer() {\n        return this.canvas.buffer;\n    }\n    startLayer() {\n        this.inDialog = true;\n        const base = this.buffer || this.canvas.buffer;\n        this.layers.push(base);\n        this.buffer =\n            this.freeBuffers.pop() || new GWU.canvas.Buffer(this.canvas);\n        // UI_OVERLAY._data.forEach( (c) => c.opacity = 0 );\n        this.buffer.copy(base);\n        return this.buffer;\n    }\n    resetLayerBuffer(dest) {\n        const base = this.layers[this.layers.length - 1] || this.canvas.buffer;\n        dest.copy(base);\n    }\n    finishLayer() {\n        if (!this.inDialog)\n            return;\n        if (this.buffer !== this.canvas.buffer) {\n            this.freeBuffers.push(this.buffer);\n        }\n        this.buffer = this.layers.pop() || this.canvas.buffer;\n        this.buffer.render();\n        this.inDialog = this.layers.length > 0;\n    }\n    // UTILITY FUNCTIONS\n    async fadeTo(color = 'black', duration = 1000) {\n        color = GWU.color.from(color);\n        const buffer = this.startLayer();\n        let pct = 0;\n        let elapsed = 0;\n        while (elapsed < duration) {\n            elapsed += 32;\n            if (await this.loop.pause(32)) {\n                elapsed = duration;\n            }\n            pct = Math.floor((100 * elapsed) / duration);\n            this.resetLayerBuffer(buffer);\n            buffer.mix(color, pct);\n            buffer.render();\n        }\n        this.finishLayer();\n    }\n    async alert(opts, text, args) {\n        if (typeof opts === 'number') {\n            opts = { duration: opts };\n        }\n        if (args) {\n            text = GWU.text.apply(text, args);\n        }\n        const padX = opts.padX || opts.pad || 1;\n        const padY = opts.padY || opts.pad || 1;\n        opts.width = opts.width || GWU.text.length(text) + 2 * padX;\n        const textOpts = {\n            fg: opts.fg,\n            text,\n            x: padX,\n            y: padY,\n            wrap: opts.width - 2 * padX,\n        };\n        textOpts.text = text;\n        textOpts.wrap = opts.width;\n        const textWidget = new Widget.Text('TEXT', textOpts);\n        opts.height =\n            (opts.title ? 1 : 0) + padY + textWidget.bounds.height + padY;\n        const dlg = Widget.buildDialog(this, opts)\n            .with(textWidget)\n            .center()\n            .done();\n        dlg.setEventHandlers({\n            click: () => dlg.close(true),\n            keypress: () => dlg.close(true),\n            TIMEOUT: () => dlg.close(false),\n        });\n        if (!opts.waitForAck) {\n            dlg.setTimeout('TIMEOUT', opts.duration || 3000);\n        }\n        return await dlg.show();\n    }\n    async confirm(...args) {\n        let opts;\n        let text;\n        let textArgs = null;\n        if (args.length <= 2 && typeof args[0] === 'string') {\n            opts = {};\n            text = args[0];\n            textArgs = args[1] || null;\n        }\n        else {\n            opts = args[0];\n            text = args[1];\n            textArgs = args[2] || null;\n        }\n        if (textArgs) {\n            text = GWU.text.apply(text, textArgs);\n        }\n        const padX = opts.padX || opts.pad || 1;\n        const padY = opts.padY || opts.pad || 1;\n        opts.width =\n            opts.width ||\n                Math.min(Math.floor(this.buffer.width / 2), GWU.text.length(text) + 2 * padX);\n        let textWidth = opts.width - 2 * padX;\n        const textOpts = {\n            fg: opts.fg,\n            text,\n            wrap: textWidth,\n            y: opts.title ? 2 : 1,\n            x: padX,\n        };\n        const textWidget = new Widget.Text('TEXT', textOpts);\n        opts.height =\n            (opts.title ? 1 : 0) + padY + textWidget.bounds.height + 2 + padY;\n        opts.allowCancel = opts.allowCancel !== false;\n        opts.buttons = Object.assign({\n            fg: 'white',\n            activeFg: 'teal',\n            bg: 'dark_gray',\n            activeBg: 'darkest_gray',\n        }, opts.buttons || {});\n        if (typeof opts.ok === 'string') {\n            opts.ok = { text: opts.ok };\n        }\n        if (typeof opts.cancel === 'string') {\n            opts.cancel = { text: opts.cancel };\n        }\n        opts.ok = opts.ok || {};\n        opts.cancel = opts.cancel || {};\n        const okOpts = Object.assign({}, opts.buttons, { text: 'OK', y: -padY, x: padX }, opts.ok);\n        const cancelOpts = Object.assign({}, opts.buttons, { text: 'CANCEL', y: -padY, x: -padX }, opts.cancel);\n        const builder = Widget.buildDialog(this, opts)\n            .with(textWidget)\n            .with(new Widget.Button('OK', okOpts));\n        if (opts.allowCancel) {\n            builder.with(new Widget.Button('CANCEL', cancelOpts));\n        }\n        const dlg = builder.center().done();\n        dlg.setEventHandlers({\n            OK() {\n                dlg.close(true);\n            },\n            CANCEL() {\n                dlg.close(false);\n            },\n            Escape() {\n                dlg.close(false);\n            },\n            Enter() {\n                dlg.close(true);\n            },\n        });\n        return await dlg.show();\n    }\n    async showWidget(widget, keymap = {}) {\n        if (widget.bounds.x < 0) {\n            widget.bounds.x = Math.floor((this.buffer.width - widget.bounds.width) / 2);\n        }\n        if (widget.bounds.y < 0) {\n            widget.bounds.y = Math.floor((this.buffer.height - widget.bounds.height) / 2);\n        }\n        const dlg = new Widget.Dialog(this, {\n            width: widget.bounds.width,\n            height: widget.bounds.height,\n            widgets: [widget],\n            x: widget.bounds.x,\n            y: widget.bounds.y,\n        });\n        keymap.Escape =\n            keymap.Escape ||\n                (() => {\n                    dlg.close(false);\n                });\n        dlg.setEventHandlers(keymap);\n        return await dlg.show();\n    }\n    // assumes you are in a dialog and give the buffer for that dialog\n    async getInputAt(x, y, maxLength, opts = {}) {\n        opts.width = maxLength;\n        opts.x = x;\n        opts.y = y;\n        const widget = new Widget.Input('INPUT', opts);\n        return this.showWidget(widget, {\n            INPUT(_e, dlg) {\n                dlg.close(widget.text);\n            },\n            Escape(_e, dlg) {\n                dlg.close('');\n            },\n        });\n    }\n    async inputBox(opts, prompt, args) {\n        if (args) {\n            prompt = GWU.text.apply(prompt, args);\n        }\n        const padX = opts.padX || opts.pad || 1;\n        const padY = opts.padY || opts.pad || 1;\n        opts.width =\n            opts.width ||\n                Math.min(Math.floor(this.buffer.width / 2), GWU.text.length(prompt) + 2 * padX);\n        let promptWidth = opts.width - 2 * padX;\n        const promptOpts = {\n            fg: opts.fg,\n            text: prompt,\n            wrap: promptWidth,\n            x: padX,\n            y: (opts.title ? 1 : 0) + padY,\n        };\n        const promptWidget = new Widget.Text('TEXT', promptOpts);\n        opts.height =\n            (opts.title ? 1 : 0) +\n                padY +\n                promptWidget.bounds.height +\n                3 +\n                1 +\n                padY;\n        opts.allowCancel = opts.allowCancel !== false;\n        opts.buttons = Object.assign({\n            fg: 'white',\n            activeFg: 'teal',\n            bg: 'dark_gray',\n            activeBg: 'darkest_gray',\n        }, opts.buttons || {});\n        if (typeof opts.ok === 'string') {\n            opts.ok = { text: opts.ok };\n        }\n        if (typeof opts.cancel === 'string') {\n            opts.cancel = { text: opts.cancel };\n        }\n        opts.ok = opts.ok || {};\n        opts.cancel = opts.cancel || {};\n        const okOpts = Object.assign({}, opts.buttons, { text: 'OK', y: -padY, x: padX }, opts.ok);\n        const cancelOpts = Object.assign({}, opts.buttons, { text: 'CANCEL', y: -padY, x: -padX }, opts.cancel);\n        opts.input = opts.input || {};\n        opts.input.width = opts.input.width || promptWidth;\n        opts.input.bg = opts.input.bg || opts.fg;\n        opts.input.fg = opts.input.fg || opts.bg;\n        opts.input.x = padX;\n        opts.input.y = opts.height - 1 - padY - 2;\n        const inputWidget = new Widget.Input('INPUT', opts.input || {});\n        const builder = Widget.buildDialog(this, opts)\n            .with(promptWidget)\n            .with(inputWidget)\n            .with(new Widget.Button('OK', okOpts));\n        if (opts.allowCancel) {\n            builder.with(new Widget.Button('CANCEL', cancelOpts));\n        }\n        const dlg = builder.center().done();\n        dlg.setEventHandlers({\n            OK() {\n                dlg.close(inputWidget.text);\n            },\n            CANCEL() {\n                dlg.close('');\n            },\n            Escape() {\n                dlg.close('');\n            },\n            INPUT() {\n                dlg.close(inputWidget.text);\n            },\n        });\n        return await dlg.show();\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as Widget from './widget';\nexport class Viewport extends Widget.Widget {\n    constructor(id, opts) {\n        super(id, opts);\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this._subject = null;\n    }\n    init(opts) {\n        opts.bg = opts.bg || 'black';\n        opts.x = opts.x || 0;\n        opts.y = opts.y || 0;\n        super.init(opts);\n        this.snap = opts.snap || false;\n        this.center = opts.center || false;\n        this.filter = opts.filter || null;\n        if (opts.lock) {\n            this.lockX = true;\n            this.lockY = true;\n        }\n        else {\n            if (opts.lockX) {\n                this.lockX = true;\n            }\n            if (opts.lockY) {\n                this.lockY = true;\n            }\n        }\n    }\n    get subject() {\n        return this._subject;\n    }\n    set subject(subject) {\n        this.center = !!subject;\n        if (subject) {\n            this.offsetX = subject.x - this.halfWidth();\n            this.offsetY = subject.y - this.halfHeight();\n        }\n        this._subject = subject;\n    }\n    set lock(v) {\n        this.lockX = v;\n        this.lockY = v;\n    }\n    toMapX(x) {\n        return x + this.offsetX - this.bounds.x;\n    }\n    toMapY(y) {\n        return y + this.offsetY - this.bounds.y;\n    }\n    toInnerX(x) {\n        return x - this.bounds.x;\n    }\n    toInnerY(y) {\n        return y - this.bounds.y;\n    }\n    halfWidth() {\n        return Math.floor(this.bounds.width / 2);\n    }\n    halfHeight() {\n        return Math.floor(this.bounds.height / 2);\n    }\n    centerOn(map, x, y) {\n        this.center = true;\n        this.subject = { x, y, map };\n    }\n    showMap(map, x = 0, y = 0) {\n        this.subject = { x, y, map };\n        this.offsetX = x;\n        this.offsetY = y;\n        this.center = false;\n        this.snap = false;\n    }\n    updateOffset() {\n        if (!this._subject) {\n            this.offsetX = 0;\n            this.offsetY = 0;\n            return;\n        }\n        const subject = this._subject;\n        const map = subject.memory || subject.map;\n        const bounds = map;\n        if (subject && map.hasXY(subject.x, subject.y)) {\n            if (this.snap) {\n                let left = this.offsetX;\n                let right = this.offsetX + this.bounds.width;\n                let top = this.offsetY;\n                let bottom = this.offsetY + this.bounds.height;\n                // auto center if outside the viewport\n                if (subject.x < left || subject.x > right) {\n                    left = this.offsetX = subject.x - this.halfWidth();\n                    right = left + this.bounds.width;\n                }\n                if (subject.y < top || subject.y > bottom) {\n                    top = this.offsetY = subject.y - this.halfHeight();\n                    bottom = top + this.bounds.height;\n                }\n                const edgeX = Math.floor(this.bounds.width / 5);\n                const edgeY = Math.floor(this.bounds.height / 5);\n                const thirdW = Math.floor(this.bounds.width / 3);\n                if (left + edgeX >= subject.x) {\n                    this.offsetX = Math.max(0, subject.x + thirdW - this.bounds.width);\n                }\n                else if (right - edgeX <= subject.x) {\n                    this.offsetX = Math.min(subject.x - thirdW, bounds.width - this.bounds.width);\n                }\n                const thirdH = Math.floor(this.bounds.height / 3);\n                if (top + edgeY >= subject.y) {\n                    this.offsetY = Math.max(0, subject.y + thirdH - this.bounds.height);\n                }\n                else if (bottom - edgeY <= subject.y) {\n                    this.offsetY = Math.min(subject.y - thirdH, bounds.height - this.bounds.height);\n                }\n            }\n            else if (this.center) {\n                this.offsetX = subject.x - this.halfWidth();\n                this.offsetY = subject.y - this.halfHeight();\n            }\n            else {\n                this.offsetX = subject.x;\n                this.offsetY = subject.y;\n            }\n        }\n        if (this.lockX && map) {\n            this.offsetX = GWU.clamp(this.offsetX, 0, map.width - this.bounds.width);\n        }\n        if (this.lockY && map) {\n            this.offsetY = GWU.clamp(this.offsetY, 0, map.height - this.bounds.height);\n        }\n    }\n    draw(buffer) {\n        buffer.blackOutRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, this.bg);\n        if (!this._subject) {\n            return false;\n        }\n        this.updateOffset();\n        const map = this._subject.memory || this._subject.map;\n        const fov = this._subject.fov;\n        const mixer = new GWU.sprite.Mixer();\n        for (let x = 0; x < this.bounds.width; ++x) {\n            for (let y = 0; y < this.bounds.height; ++y) {\n                const mapX = x + this.offsetX;\n                const mapY = y + this.offsetY;\n                if (map.hasXY(mapX, mapY)) {\n                    const cell = map.cell(mapX, mapY);\n                    map.drawer.drawCell(mixer, cell, fov);\n                }\n                else {\n                    mixer.draw(' ', this.bg, this.bg); // blackOut\n                }\n                if (this.filter) {\n                    this.filter(mixer, mapX, mapY, map);\n                }\n                buffer.drawSprite(x + this.bounds.x, y + this.bounds.y, mixer);\n            }\n        }\n        // map.clearMapFlag(GWM.flags.Map.MAP_CHANGED);\n        return true;\n    }\n}\n"],"names":["Widget","constructor","id","opts","this","active","hovered","tabStop","fg","bg","activeFg","activeBg","hoverFg","hoverBg","text","align","valign","bounds","GWU","xy","Bounds","init","reset","undefined","x","y","width","height","length","action","activate","_reverse","deactivate","contains","arguments","mousemove","e","_dialog","tick","_e","click","keypress","dir","draw","buffer","textLen","fillRect","Math","floor","drawText","Text","Widget.Widget","super","wrap","lines","splitIntoLines","truncate","max","setText","forEach","line","i","Button","Error","first","async","ev","dialog","fireAction","key","Input","minLength","default","errorFg","hint","hintFg","numbersOnly","min","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isValid","val","parseInt","value","textEntryBounds","r","then","spliceRaw","color","Column","header","empty","_value","IDENTITY","index","object","assignOmitting","compile","data","v","Table","selectedColumn","selectedIndex","columns","headers","letters","hoverType","hover","wrapColumns","wrapRows","headerFg","headerBg","columnWidth","push","_data","String","fromCharCode","c","col","setData","selectRow","Array","isArray","list","selectNextRow","len","nextIndex","selectPrevRow","prevIndex","selectNextColumn","selectPrevColumn","selectedData","at","b","drawColumn","column","item","drawCell","bottom","oldColumn","oldIndex","find","requestRedraw","Dialog","ui","title","titleFg","borderBg","widgets","eventHandlers","_activeWidget","result","done","timers","needsRedraw","w","activeWidget","setActiveWidget","reverse","setTimeout","time","clearTimeout","widget","handler","setEventHandlers","map","Object","assign","startLayer","loop","run","bind","render","finishLayer","close","returnValue","widgetAt","getWidget","nextTabstop","next","arrayNext","prevTabstop","prev","arrayPrev","dt","promises","entries","Promise","all","fn","code","force","DialogBuilder","nextY","with","addWidget","center","size","place","right","dlgBounds","buildDialog","install","EntryBase","dist","priority","changed","sidebarY","_buffer","_bounds","ActorEntry","actor","drawStatus","ItemEntry","CellEntry","cell","MenuButton","ActionButton","DropDownButton","menu","parent","buttons","addButton","config","button","setBounds","px","py","pw","totalWidth","totalHeight","buttonAt","dropBg","dropFg","showDropDown","activeButton","Escape","Tab","activeIndex","TAB","newActive","selected","getButtonAt","indexOf","clearHighlight","actionButton","resetLayerBuffer","Widget.Text","promptFg","from","overflow","isPrompt","showText","capitalize","clear","showPrompt","getFlavorText","fov","buf","isAnyKindOfVisible","isDirectlyVisible","isRemembered","isRevealed","isMapped","isMagicMapped","intro","hasActor","actorAt","theItem","hasItem","itemAt","standsInTile","hasTileFlag","GWM","flags","Tile","T_STAND_IN_TILE","needObjectArticle","getFlavor","article","groundTile","depthTile","Depth","GROUND","tile","tiles","NULL","surfaceTile","SURFACE","liquidTile","LIQUID","surface","T_BRIDGE","liquid","ground","apply","separator","lead","_addButton","_y","arrayFindRight","reduce","dropdown","bgColor","cache","message","MessageCache","match","_x","showArchive","isOnTop","confirmed","mix","fastForward","fadePercent","totalMessageCount","dbuf","top","dM","startM","endM","currentM","startY","endY","dy","_confirmed","j","fgColor","clone","pause","wrapText","waitForAck","confirmAll","cellCache","lastX","lastY","lastMap","subject","highlight","entryAt","entry","highlightRow","last","updateCellCache","hasMapFlag","Map","MAP_SIDEBAR_TILES_CHANGED","forRect","info","hasEntityFlag","Entity","L_LIST_IN_SIDEBAR","clearMapFlag","_makeActorEntry","_makeItemEntry","_makeCellEntry","_getPriority","hasCellFlag","Cell","STABLE_MEMORY","_isDim","_addActorEntry","distanceBetween","isPlayer","_addItemEntry","_addCellEntry","findEntries","cx","cy","grid","alloc","eachActor","a","eachItem","sort","free","update","updateFor","updateAt","memory","drawBounds","currentEntry","usedLines","layers","freeBuffers","inDialog","canvas","baseBuffer","canvasBuffer","base","pop","Buffer","copy","dest","duration","pct","elapsed","args","padX","pad","padY","textOpts","textWidget","dlg","Widget.buildDialog","TIMEOUT","show","textArgs","textWidth","allowCancel","ok","cancel","okOpts","cancelOpts","builder","Widget.Button","OK","CANCEL","Enter","keymap","Widget.Dialog","maxLength","Widget.Input","showWidget","INPUT","prompt","promptWidth","promptOpts","promptWidget","input","inputWidget","offsetX","offsetY","_subject","snap","filter","lock","lockX","lockY","halfWidth","halfHeight","toMapX","toMapY","toInnerX","toInnerY","centerOn","showMap","updateOffset","hasXY","left","edgeX","edgeY","thirdW","thirdH","clamp","blackOutRect","mixer","sprite","Mixer","mapX","mapY","drawer","drawSprite"],"mappings":"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"}